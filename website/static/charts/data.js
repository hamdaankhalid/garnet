window.BENCHMARK_DATA = {
  "lastUpdate": 1738369550568,
  "repoUrl": "https://github.com/hamdaankhalid/garnet",
  "entries": {
    "Benchmark": [],
    "Operations.BasicOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd766248719caf2817592e988a5e67edc22b511b",
          "message": "Implementing BDN Perf pipeline (#758)\n\n* The CI scripts, YML and config files to check perf using BDN benchmarking.  Also, a fix in ClusterBench for and renamed Lua Runner benchmarking\r\n\r\n* Cleaned up the debug message and updated couple expected values\r\n\r\n* Updated SAddRem - windows - to 130 from 118.  Also removed unncesssary build statement in YML\r\n\r\n* Proof of concept for Performance run on ADO using BDN\r\n\r\n* Comment out number of Cores check so can try proof of concept on ADO perf machines\r\n\r\n* Getting close to having BDN working\r\n\r\n* Fixed RespLuaStress\r\n\r\n* Fixed issue in Lua Runner Stress\r\n\r\n* Updated config values, set charting and commit comment as separate tasks\r\n\r\n* Updated config values\r\n\r\n* Minor change to YML (remove pull requests) and updated LuaRunner config value\r\n\r\n* One more config value fix\r\n\r\n* Added a task to do the push\r\n\r\n* Putting back to push chart in the chart task and not a separate one\r\n\r\n* Moved the permissions to full workflow\r\n\r\n* Just minor to add commits\r\n\r\n* Adding actions: write permit since actions default to read only\r\n\r\n* Set up the commit comment for BDN as well as summary to show current vs previous BDN perf numbers\r\n\r\n* A few fixes\r\n\r\n* Updated BDN perf YML, config files and ps1 script\r\n\r\n* Versioning issue with BDN test files, fixed now\r\n\r\n* Bump threshold to 35% (135%) to trigger perf failure\r\n\r\n* Set to Linux only to reduce number of consectutive tests which caused push collisions with GitHub\r\n\r\n* Just Windows only test run\r\n\r\n* Putting it back to both OS for the tests\r\n\r\n* Set threshhold to 50% (150%) as seeing BDN ran twice on same code sometimes is in 40%+ range of difference.\r\n\r\n* Big change where using continuousbenchmark branch for all data for continuous benchmarking and also changed to where script is only checking allocated values and let github-action-benchmark compare mean values\r\n\r\n* Updated ClusterBench to get main changes\r\n\r\n* Fix issue with Cluster BDN is not able to access folder so setting to tmp which does have access\r\n\r\n* Bumping threshold to 50% (150%) as mean value in RespParseStress can vary into the 40% from run to run.\r\n\r\n* First update\r\n\r\n* Hiding the Gen0 column for Lua benchmark\r\n\r\n* Updated BDN test infrastructure to match the new BDN org.\r\n\r\n* Fix bug in ObjectOperations\r\n\r\n* Set max items on chart to 50 ... can modify later if want\r\n\r\n* Added the run on push to main\r\n\r\n* Put Performance Pipeline back\r\n\r\n* Fixed the default case when no parameters sent to ps1\r\n\r\n* Cleaned up config files:\r\nhave shorter names for values\r\nnot have configuration or framework (moved to ps1 file)\r\nnot have windows / linux differnce in expected\r\nMoved acceptable allocated range to script\r\n\r\nmodified the script:\r\nto only load values for the specific test instead of looking for all values\r\nchanges to match the changes in config (shorter names, etc)\r\n\r\n* Big update to where moved to a single config file and the ps1 file does not need to be updated when new BDNs are added.\r\n\r\n* Added workflow_dispatch: to deploy website yml so we can manually deploy website if we want\r\n\r\n* Updated alert-threshold from 150% to 140%. If too many false positives we can raise it back. Also, removed darrenge from the alert CC line as no need for that.\r\n\r\n* Removed the commit comment / comparison to previous commit task. Still will get  summary data in the specific workflow run and still uploads data to charts (when pushing to main).\r\n\r\n* Minor update - comments only",
          "timestamp": "2024-12-11T11:29:32-08:00",
          "tree_id": "a262ac843488b7afb61ad91dfb2a488917243391",
          "url": "https://github.com/microsoft/garnet/commit/dd766248719caf2817592e988a5e67edc22b511b"
        },
        "date": 1733945574720,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1776.197327341352,
            "unit": "ns",
            "range": "± 14.43344240324183"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1714.2773532867432,
            "unit": "ns",
            "range": "± 16.626402009685627"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1755.2957613627116,
            "unit": "ns",
            "range": "± 15.523237812561376"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aabc0bb831f2313bce41c43c29c9c2b0e434cb00",
          "message": "handle uninitialized epoch value merge (#874)\n\n* handle uninitialized epoch value merge\r\n\r\n* release 1.0.47",
          "timestamp": "2024-12-11T14:03:36-08:00",
          "tree_id": "ca83e06a72e78b6bab3872148b9e3eb5cb476269",
          "url": "https://github.com/microsoft/garnet/commit/aabc0bb831f2313bce41c43c29c9c2b0e434cb00"
        },
        "date": 1733954811939,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1712.4180222829184,
            "unit": "ns",
            "range": "± 12.206845696339988"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1738.3866788228354,
            "unit": "ns",
            "range": "± 10.659673709841204"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1744.3733046213786,
            "unit": "ns",
            "range": "± 11.868448837341273"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf1d4b66c442284f95c8db51e57274ba07316561",
          "message": "Bump nanoid from 3.3.7 to 3.3.8 in /website (#873)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: darrenge <darrenge@microsoft.com>",
          "timestamp": "2024-12-11T15:37:40-08:00",
          "tree_id": "1d3dbe6f308895a822d913fd3960c803796cb264",
          "url": "https://github.com/microsoft/garnet/commit/cf1d4b66c442284f95c8db51e57274ba07316561"
        },
        "date": 1733960450912,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1742.3146751948766,
            "unit": "ns",
            "range": "± 14.643238667357215"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1717.4220597585042,
            "unit": "ns",
            "range": "± 17.14101821032713"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1737.5594929915208,
            "unit": "ns",
            "range": "± 7.499362075766501"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d4c7448569063ea786802a0580acf465108e037",
          "message": "Add ReadOnly Support for IDevice (#870)\n\n* add readOnly flag in streamProvider for LocalStorageDevice\r\n\r\n* add linux readOnly flag for managed device\r\n\r\n* add explicit readOnly assignment for parameter",
          "timestamp": "2024-12-12T13:03:41-08:00",
          "tree_id": "3d591691e9ac0cfb714d98096a0580abab554b23",
          "url": "https://github.com/microsoft/garnet/commit/0d4c7448569063ea786802a0580acf465108e037"
        },
        "date": 1734037604210,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1806.409968694051,
            "unit": "ns",
            "range": "± 14.983791935746245"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1714.293517112732,
            "unit": "ns",
            "range": "± 12.267466275974478"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1703.210502465566,
            "unit": "ns",
            "range": "± 3.3536633049381575"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2c2261c72948136f6af9dfdfefc86ebb02c686a",
          "message": "CustomCommandManager + CustomCommandManagerSession to use auto-expandable maps (#848)\n\n* wip\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* Comments + tests\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* fix\r\n\r\n* format\r\n\r\n* Adding a non-concurrent ExpandableMap\r\n\r\n* small fix\r\n\r\n* Switching to SingleWriterMultiReaderLock\r\n\r\n* Some thread-safety related fixes\r\n\r\n* Added some async tests for command registration\r\n\r\n* small bugfixes\r\n\r\n* format",
          "timestamp": "2024-12-12T18:49:23-08:00",
          "tree_id": "27ea42b0a4d6b834a7f450d12100d29e8b94f077",
          "url": "https://github.com/microsoft/garnet/commit/f2c2261c72948136f6af9dfdfefc86ebb02c686a"
        },
        "date": 1734058355908,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1722.3625702176776,
            "unit": "ns",
            "range": "± 8.88205106032686"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1739.5425454457602,
            "unit": "ns",
            "range": "± 17.637734771677525"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1733.1600671132405,
            "unit": "ns",
            "range": "± 11.703610735434529"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "kmontrose@microsoft.com",
            "name": "kevin-montrose",
            "username": "kevin-montrose"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa004d372a23731e3e5f0fa65d701c4a4d62b381",
          "message": "Fixes for SCRIPT commands and behavior (#860)\n\n* fix FastBasicRespCommandsInfo construction and lookup; which incidentally fixes EVALSHA when scripting is enabled\r\n\r\n* fix MultiKeySlotVerify - keys past the second were not correctly visited\r\n\r\n* break SCRIPT into appropriate subcommands; update command info; fix SCRIPT EXISTS to match Redis behavior; tests for SCRIPT|* ACLs; DRY up SCRIPT command implementations\r\n\r\n* test script failures, match Redis error messages\r\n\r\n* remove byte[] allocations from evalsha path (amongst others); should get the Lua overhead down to just the NLua + locking stuff\r\n\r\n* add test for multi-hash version of SCRIPT|EXIST; fix bug where hash casing matters (matching Redis by defaulting to upper case hashes values); remove debug code\r\n\r\n* fix formatting\r\n\r\n* uppercase some test cases I missed\r\n\r\n* add EVALSHA to cluster slot tests\r\n\r\n* restore lower case hashes; erroneously thought Redis used upper case\r\n\r\n* add ScriptOperations to benchmark this change\r\n\r\n* formatting fixes\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-12T23:23:53-08:00",
          "tree_id": "8c0664ade6b6572a8af295961a2d61a846b60756",
          "url": "https://github.com/microsoft/garnet/commit/aa004d372a23731e3e5f0fa65d701c4a4d62b381"
        },
        "date": 1734074839026,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1744.4245071411133,
            "unit": "ns",
            "range": "± 14.051116314302607"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1711.8127201080322,
            "unit": "ns",
            "range": "± 11.077616121492857"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1732.7832218170165,
            "unit": "ns",
            "range": "± 7.171228454183896"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca0222960f0145302eb1fc9896f680f9aff5a4d1",
          "message": "Streaming snapshot checkpoint in Tsavorite (#824)\n\n* Mild refactor in preparation\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* fix tests to not cover steaming snapshot as it is not a traditional checkpoint\r\n\r\n* add unit test\r\n\r\n* fix tests\r\n\r\n* fix test\r\n\r\n* updates\r\n\r\n* Support maxAddress during liveness checks\r\n\r\n* improvements to api\r\n\r\n* Add SetVersion API\r\n\r\n* more checks\r\n\r\n* add comment\r\n\r\n* add comments",
          "timestamp": "2024-12-13T10:25:49-08:00",
          "tree_id": "917be4f308af8da9ec7782faa5069a09f2b873c5",
          "url": "https://github.com/microsoft/garnet/commit/ca0222960f0145302eb1fc9896f680f9aff5a4d1"
        },
        "date": 1734114553926,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1776.1672275543212,
            "unit": "ns",
            "range": "± 15.185770346536362"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1716.103428777059,
            "unit": "ns",
            "range": "± 11.43883749883835"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1709.5325828552245,
            "unit": "ns",
            "range": "± 11.298065810769423"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f679b0b683e4e94fa2a3ebb2689708ec2efee74",
          "message": "Added BDN for all hash commands (#879)\n\n* Added BDN for all hash commands\r\n\r\n* Moved BDN of hash set to separate class",
          "timestamp": "2024-12-13T12:50:11-08:00",
          "tree_id": "66c04dc8b338f40aeb360419fc1953dcc219abbc",
          "url": "https://github.com/microsoft/garnet/commit/3f679b0b683e4e94fa2a3ebb2689708ec2efee74"
        },
        "date": 1734123198788,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1745.9569937388103,
            "unit": "ns",
            "range": "± 10.256001891939702"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1716.6228154500325,
            "unit": "ns",
            "range": "± 12.372612954194782"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1718.2450532277426,
            "unit": "ns",
            "range": "± 14.990384295583732"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "178dc21b572263c4421e2602e41cc243cb94f507",
          "message": "Fix writing output for scan (#880)\n\n* Writing output for scan was not handling output buffer (dcurr, dend) correctly. Also, it was not handling large keys correctly.\r\n\r\n* update version",
          "timestamp": "2024-12-13T13:55:49-08:00",
          "tree_id": "1966c990a96fa84a42747ad14ce5480535196e57",
          "url": "https://github.com/microsoft/garnet/commit/178dc21b572263c4421e2602e41cc243cb94f507"
        },
        "date": 1734127146572,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1806.093218866984,
            "unit": "ns",
            "range": "± 10.498304190633222"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1709.7218687874931,
            "unit": "ns",
            "range": "± 8.884044220362442"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1701.9026948610942,
            "unit": "ns",
            "range": "± 1.4496544722225282"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1ce0dafecaba15335e8e0767a6eeb441b72e56c",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#862)\n\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T14:08:03-08:00",
          "tree_id": "b2aa23d9235558527754332fab728fa03d60007b",
          "url": "https://github.com/microsoft/garnet/commit/f1ce0dafecaba15335e8e0767a6eeb441b72e56c"
        },
        "date": 1734127879802,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1794.9232083834136,
            "unit": "ns",
            "range": "± 1.6158573203322764"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1714.1901770273844,
            "unit": "ns",
            "range": "± 12.502661729148592"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1712.5478782653809,
            "unit": "ns",
            "range": "± 11.129449222768672"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132115688,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1738.9017345110576,
            "unit": "ns",
            "range": "± 0.8166079420839153"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1711.8647470474243,
            "unit": "ns",
            "range": "± 16.3114127120929"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1704.615301767985,
            "unit": "ns",
            "range": "± 4.4808539451107805"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734133787166,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1838.7067304757925,
            "unit": "ns",
            "range": "± 1.1972663349181178"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1705.350602223323,
            "unit": "ns",
            "range": "± 1.339628898980291"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1707.1811314991542,
            "unit": "ns",
            "range": "± 10.760925994243465"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377069470,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1742.8274733225505,
            "unit": "ns",
            "range": "± 11.344240894878464"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1702.2103301684062,
            "unit": "ns",
            "range": "± 1.6501664888664256"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1707.6484160105388,
            "unit": "ns",
            "range": "± 10.081264083874439"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392535377,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1711.4559816632952,
            "unit": "ns",
            "range": "± 12.607864426183028"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1724.377682549613,
            "unit": "ns",
            "range": "± 19.010293775229435"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1715.5876300811767,
            "unit": "ns",
            "range": "± 15.935865153336614"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483477641,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1745.749378351065,
            "unit": "ns",
            "range": "± 9.750740440939722"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1712.6252302805583,
            "unit": "ns",
            "range": "± 8.77176661389747"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1711.4056073597499,
            "unit": "ns",
            "range": "± 9.342088032454651"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559306840,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1710.73979733785,
            "unit": "ns",
            "range": "± 12.94342917598886"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1704.982184955052,
            "unit": "ns",
            "range": "± 5.25400617627905"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1733.6746339797974,
            "unit": "ns",
            "range": "± 4.648719082460223"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578587556,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1837.5572067260741,
            "unit": "ns",
            "range": "± 11.760311024671243"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1712.4765569051108,
            "unit": "ns",
            "range": "± 13.105350625278039"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1741.374750773112,
            "unit": "ns",
            "range": "± 12.626547336572353"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734595796401,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1777.0672252655029,
            "unit": "ns",
            "range": "± 12.47076125027501"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1764.0642061967117,
            "unit": "ns",
            "range": "± 4.166846405037813"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1672.4429003397624,
            "unit": "ns",
            "range": "± 0.8368073669406033"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643237135,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1745.6971743265788,
            "unit": "ns",
            "range": "± 12.49307504658083"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1769.6846618652344,
            "unit": "ns",
            "range": "± 9.501942986565917"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1708.5121154149374,
            "unit": "ns",
            "range": "± 11.886566074750796"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647523557,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1745.1987929026286,
            "unit": "ns",
            "range": "± 13.859740090618764"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1781.4675076348442,
            "unit": "ns",
            "range": "± 15.953540593070803"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1710.9852209726969,
            "unit": "ns",
            "range": "± 11.040752760695629"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652312491,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1739.4566920353816,
            "unit": "ns",
            "range": "± 8.287509384220039"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1773.4116777273325,
            "unit": "ns",
            "range": "± 6.197359762821077"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1710.943059794108,
            "unit": "ns",
            "range": "± 12.08529792743008"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734746961145,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1709.1822685514178,
            "unit": "ns",
            "range": "± 10.589884998991147"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1809.4297842298236,
            "unit": "ns",
            "range": "± 12.748552915173391"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1712.425380452474,
            "unit": "ns",
            "range": "± 11.762194451571235"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906614701,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1740.690207417806,
            "unit": "ns",
            "range": "± 9.48242670070595"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1799.5884095705474,
            "unit": "ns",
            "range": "± 7.274944550142853"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1677.3249633789062,
            "unit": "ns",
            "range": "± 10.37196513813268"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407451903,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1742.088475481669,
            "unit": "ns",
            "range": "± 13.068735515448578"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1812.7657974243164,
            "unit": "ns",
            "range": "± 17.08060061590371"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1715.1543830871583,
            "unit": "ns",
            "range": "± 10.340333066414415"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187146496,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1759.7368103027343,
            "unit": "ns",
            "range": "± 16.633852573879135"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1742.7702830632527,
            "unit": "ns",
            "range": "± 0.9921956051342076"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1783.1987351735434,
            "unit": "ns",
            "range": "± 12.260653600307812"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736282952589,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1748.4541739145914,
            "unit": "ns",
            "range": "± 6.492245599880752"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1747.9894496917725,
            "unit": "ns",
            "range": "± 9.003813586223883"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1744.5975659234184,
            "unit": "ns",
            "range": "± 7.998487807136805"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736375984736,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1755.7064158121746,
            "unit": "ns",
            "range": "± 11.904269484076229"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1746.8778027852377,
            "unit": "ns",
            "range": "± 7.942830972298943"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1691.145650100708,
            "unit": "ns",
            "range": "± 12.238902554468135"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461718306,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1804.5433992658343,
            "unit": "ns",
            "range": "± 3.8530666756618377"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1744.0866731007893,
            "unit": "ns",
            "range": "± 5.964141583012348"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1717.88392384847,
            "unit": "ns",
            "range": "± 10.844264338603901"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479537282,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1747.916369846889,
            "unit": "ns",
            "range": "± 9.028582075674203"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1689.941685740153,
            "unit": "ns",
            "range": "± 11.071738737143786"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1750.3059113820393,
            "unit": "ns",
            "range": "± 9.717244661246724"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553358018,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1748.8984424591065,
            "unit": "ns",
            "range": "± 9.369612290601305"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1713.1588640213013,
            "unit": "ns",
            "range": "± 6.735004748659517"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1749.377608707973,
            "unit": "ns",
            "range": "± 9.428506597411573"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655595998,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1843.4149018605551,
            "unit": "ns",
            "range": "± 9.487034888321547"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1787.2796030044556,
            "unit": "ns",
            "range": "± 12.717344606190633"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1689.381579844157,
            "unit": "ns",
            "range": "± 10.919755616792434"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253812363,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1682.4878702163696,
            "unit": "ns",
            "range": "± 3.1073274893213667"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1720.9992440541585,
            "unit": "ns",
            "range": "± 10.269996841779376"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1683.9421792348226,
            "unit": "ns",
            "range": "± 8.241608847920691"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788476528,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1820.7037497202555,
            "unit": "ns",
            "range": "± 13.387165841529674"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1812.1212152753558,
            "unit": "ns",
            "range": "± 10.283382700117516"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1780.7745288848878,
            "unit": "ns",
            "range": "± 11.569894635931318"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050211790,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1840.956661383311,
            "unit": "ns",
            "range": "± 5.056379266218487"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1803.9642489506648,
            "unit": "ns",
            "range": "± 1.3526814919898764"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1845.213267771403,
            "unit": "ns",
            "range": "± 10.822034643810625"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368727801,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1851.4086785634358,
            "unit": "ns",
            "range": "± 15.180934011361883"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1761.063396862575,
            "unit": "ns",
            "range": "± 11.632940822888392"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1853.6297721862793,
            "unit": "ns",
            "range": "± 11.693175446352688"
          }
        ]
      }
    ],
    "Cluster.ClusterMigrate (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd766248719caf2817592e988a5e67edc22b511b",
          "message": "Implementing BDN Perf pipeline (#758)\n\n* The CI scripts, YML and config files to check perf using BDN benchmarking.  Also, a fix in ClusterBench for and renamed Lua Runner benchmarking\r\n\r\n* Cleaned up the debug message and updated couple expected values\r\n\r\n* Updated SAddRem - windows - to 130 from 118.  Also removed unncesssary build statement in YML\r\n\r\n* Proof of concept for Performance run on ADO using BDN\r\n\r\n* Comment out number of Cores check so can try proof of concept on ADO perf machines\r\n\r\n* Getting close to having BDN working\r\n\r\n* Fixed RespLuaStress\r\n\r\n* Fixed issue in Lua Runner Stress\r\n\r\n* Updated config values, set charting and commit comment as separate tasks\r\n\r\n* Updated config values\r\n\r\n* Minor change to YML (remove pull requests) and updated LuaRunner config value\r\n\r\n* One more config value fix\r\n\r\n* Added a task to do the push\r\n\r\n* Putting back to push chart in the chart task and not a separate one\r\n\r\n* Moved the permissions to full workflow\r\n\r\n* Just minor to add commits\r\n\r\n* Adding actions: write permit since actions default to read only\r\n\r\n* Set up the commit comment for BDN as well as summary to show current vs previous BDN perf numbers\r\n\r\n* A few fixes\r\n\r\n* Updated BDN perf YML, config files and ps1 script\r\n\r\n* Versioning issue with BDN test files, fixed now\r\n\r\n* Bump threshold to 35% (135%) to trigger perf failure\r\n\r\n* Set to Linux only to reduce number of consectutive tests which caused push collisions with GitHub\r\n\r\n* Just Windows only test run\r\n\r\n* Putting it back to both OS for the tests\r\n\r\n* Set threshhold to 50% (150%) as seeing BDN ran twice on same code sometimes is in 40%+ range of difference.\r\n\r\n* Big change where using continuousbenchmark branch for all data for continuous benchmarking and also changed to where script is only checking allocated values and let github-action-benchmark compare mean values\r\n\r\n* Updated ClusterBench to get main changes\r\n\r\n* Fix issue with Cluster BDN is not able to access folder so setting to tmp which does have access\r\n\r\n* Bumping threshold to 50% (150%) as mean value in RespParseStress can vary into the 40% from run to run.\r\n\r\n* First update\r\n\r\n* Hiding the Gen0 column for Lua benchmark\r\n\r\n* Updated BDN test infrastructure to match the new BDN org.\r\n\r\n* Fix bug in ObjectOperations\r\n\r\n* Set max items on chart to 50 ... can modify later if want\r\n\r\n* Added the run on push to main\r\n\r\n* Put Performance Pipeline back\r\n\r\n* Fixed the default case when no parameters sent to ps1\r\n\r\n* Cleaned up config files:\r\nhave shorter names for values\r\nnot have configuration or framework (moved to ps1 file)\r\nnot have windows / linux differnce in expected\r\nMoved acceptable allocated range to script\r\n\r\nmodified the script:\r\nto only load values for the specific test instead of looking for all values\r\nchanges to match the changes in config (shorter names, etc)\r\n\r\n* Big update to where moved to a single config file and the ps1 file does not need to be updated when new BDNs are added.\r\n\r\n* Added workflow_dispatch: to deploy website yml so we can manually deploy website if we want\r\n\r\n* Updated alert-threshold from 150% to 140%. If too many false positives we can raise it back. Also, removed darrenge from the alert CC line as no need for that.\r\n\r\n* Removed the commit comment / comparison to previous commit task. Still will get  summary data in the specific workflow run and still uploads data to charts (when pushing to main).\r\n\r\n* Minor update - comments only",
          "timestamp": "2024-12-11T11:29:32-08:00",
          "tree_id": "a262ac843488b7afb61ad91dfb2a488917243391",
          "url": "https://github.com/microsoft/garnet/commit/dd766248719caf2817592e988a5e67edc22b511b"
        },
        "date": 1733945552933,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36289.732121785484,
            "unit": "ns",
            "range": "± 83.59199475833644"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 39928.28927408854,
            "unit": "ns",
            "range": "± 280.6755720804364"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32523.476217416617,
            "unit": "ns",
            "range": "± 19.19711718283477"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31684.77042061942,
            "unit": "ns",
            "range": "± 43.678940936683176"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aabc0bb831f2313bce41c43c29c9c2b0e434cb00",
          "message": "handle uninitialized epoch value merge (#874)\n\n* handle uninitialized epoch value merge\r\n\r\n* release 1.0.47",
          "timestamp": "2024-12-11T14:03:36-08:00",
          "tree_id": "ca83e06a72e78b6bab3872148b9e3eb5cb476269",
          "url": "https://github.com/microsoft/garnet/commit/aabc0bb831f2313bce41c43c29c9c2b0e434cb00"
        },
        "date": 1733954792141,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37361.82455880301,
            "unit": "ns",
            "range": "± 213.89528765788032"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37790.53765399639,
            "unit": "ns",
            "range": "± 36.74700515441643"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32082.986234224758,
            "unit": "ns",
            "range": "± 184.1797342718395"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31461.178971510668,
            "unit": "ns",
            "range": "± 75.95698351168714"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf1d4b66c442284f95c8db51e57274ba07316561",
          "message": "Bump nanoid from 3.3.7 to 3.3.8 in /website (#873)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: darrenge <darrenge@microsoft.com>",
          "timestamp": "2024-12-11T15:37:40-08:00",
          "tree_id": "1d3dbe6f308895a822d913fd3960c803796cb264",
          "url": "https://github.com/microsoft/garnet/commit/cf1d4b66c442284f95c8db51e57274ba07316561"
        },
        "date": 1733960438371,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36474.445395914714,
            "unit": "ns",
            "range": "± 347.76374302997556"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 39297.550111897785,
            "unit": "ns",
            "range": "± 355.180125928561"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32294.419372558594,
            "unit": "ns",
            "range": "± 114.7229783713484"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31790.14921061198,
            "unit": "ns",
            "range": "± 203.7091027191942"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d4c7448569063ea786802a0580acf465108e037",
          "message": "Add ReadOnly Support for IDevice (#870)\n\n* add readOnly flag in streamProvider for LocalStorageDevice\r\n\r\n* add linux readOnly flag for managed device\r\n\r\n* add explicit readOnly assignment for parameter",
          "timestamp": "2024-12-12T13:03:41-08:00",
          "tree_id": "3d591691e9ac0cfb714d98096a0580abab554b23",
          "url": "https://github.com/microsoft/garnet/commit/0d4c7448569063ea786802a0580acf465108e037"
        },
        "date": 1734037596697,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36751.08060913086,
            "unit": "ns",
            "range": "± 337.09281617377184"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37825.4322265625,
            "unit": "ns",
            "range": "± 294.6768439267555"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31850.798082624162,
            "unit": "ns",
            "range": "± 191.4090982828696"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31422.238825480144,
            "unit": "ns",
            "range": "± 43.09286031622145"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2c2261c72948136f6af9dfdfefc86ebb02c686a",
          "message": "CustomCommandManager + CustomCommandManagerSession to use auto-expandable maps (#848)\n\n* wip\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* Comments + tests\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* fix\r\n\r\n* format\r\n\r\n* Adding a non-concurrent ExpandableMap\r\n\r\n* small fix\r\n\r\n* Switching to SingleWriterMultiReaderLock\r\n\r\n* Some thread-safety related fixes\r\n\r\n* Added some async tests for command registration\r\n\r\n* small bugfixes\r\n\r\n* format",
          "timestamp": "2024-12-12T18:49:23-08:00",
          "tree_id": "27ea42b0a4d6b834a7f450d12100d29e8b94f077",
          "url": "https://github.com/microsoft/garnet/commit/f2c2261c72948136f6af9dfdfefc86ebb02c686a"
        },
        "date": 1734058339710,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37080.19873046875,
            "unit": "ns",
            "range": "± 21.200744817831897"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37237.69209594726,
            "unit": "ns",
            "range": "± 326.8292697448494"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32876.72181803385,
            "unit": "ns",
            "range": "± 253.39851453922668"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30588.82626778739,
            "unit": "ns",
            "range": "± 74.04231713345257"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "kmontrose@microsoft.com",
            "name": "kevin-montrose",
            "username": "kevin-montrose"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa004d372a23731e3e5f0fa65d701c4a4d62b381",
          "message": "Fixes for SCRIPT commands and behavior (#860)\n\n* fix FastBasicRespCommandsInfo construction and lookup; which incidentally fixes EVALSHA when scripting is enabled\r\n\r\n* fix MultiKeySlotVerify - keys past the second were not correctly visited\r\n\r\n* break SCRIPT into appropriate subcommands; update command info; fix SCRIPT EXISTS to match Redis behavior; tests for SCRIPT|* ACLs; DRY up SCRIPT command implementations\r\n\r\n* test script failures, match Redis error messages\r\n\r\n* remove byte[] allocations from evalsha path (amongst others); should get the Lua overhead down to just the NLua + locking stuff\r\n\r\n* add test for multi-hash version of SCRIPT|EXIST; fix bug where hash casing matters (matching Redis by defaulting to upper case hashes values); remove debug code\r\n\r\n* fix formatting\r\n\r\n* uppercase some test cases I missed\r\n\r\n* add EVALSHA to cluster slot tests\r\n\r\n* restore lower case hashes; erroneously thought Redis used upper case\r\n\r\n* add ScriptOperations to benchmark this change\r\n\r\n* formatting fixes\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-12T23:23:53-08:00",
          "tree_id": "8c0664ade6b6572a8af295961a2d61a846b60756",
          "url": "https://github.com/microsoft/garnet/commit/aa004d372a23731e3e5f0fa65d701c4a4d62b381"
        },
        "date": 1734074828060,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36503.27585652669,
            "unit": "ns",
            "range": "± 273.5314318572555"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38238.90620320638,
            "unit": "ns",
            "range": "± 361.4930166069858"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31949.303966815656,
            "unit": "ns",
            "range": "± 120.53878533781115"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31615.33027766301,
            "unit": "ns",
            "range": "± 30.4203067847868"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca0222960f0145302eb1fc9896f680f9aff5a4d1",
          "message": "Streaming snapshot checkpoint in Tsavorite (#824)\n\n* Mild refactor in preparation\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* fix tests to not cover steaming snapshot as it is not a traditional checkpoint\r\n\r\n* add unit test\r\n\r\n* fix tests\r\n\r\n* fix test\r\n\r\n* updates\r\n\r\n* Support maxAddress during liveness checks\r\n\r\n* improvements to api\r\n\r\n* Add SetVersion API\r\n\r\n* more checks\r\n\r\n* add comment\r\n\r\n* add comments",
          "timestamp": "2024-12-13T10:25:49-08:00",
          "tree_id": "917be4f308af8da9ec7782faa5069a09f2b873c5",
          "url": "https://github.com/microsoft/garnet/commit/ca0222960f0145302eb1fc9896f680f9aff5a4d1"
        },
        "date": 1734114523979,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36637.207572428386,
            "unit": "ns",
            "range": "± 318.87088153798885"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38203.963838704425,
            "unit": "ns",
            "range": "± 323.1705911643873"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32183.44205885667,
            "unit": "ns",
            "range": "± 25.86135590444241"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31001.756028395434,
            "unit": "ns",
            "range": "± 72.76971922985352"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f679b0b683e4e94fa2a3ebb2689708ec2efee74",
          "message": "Added BDN for all hash commands (#879)\n\n* Added BDN for all hash commands\r\n\r\n* Moved BDN of hash set to separate class",
          "timestamp": "2024-12-13T12:50:11-08:00",
          "tree_id": "66c04dc8b338f40aeb360419fc1953dcc219abbc",
          "url": "https://github.com/microsoft/garnet/commit/3f679b0b683e4e94fa2a3ebb2689708ec2efee74"
        },
        "date": 1734123192447,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37438.627169095555,
            "unit": "ns",
            "range": "± 114.10920288231766"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38473.23116830679,
            "unit": "ns",
            "range": "± 82.6203031363953"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31769.176915095402,
            "unit": "ns",
            "range": "± 127.79470515253422"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 32314.86456533579,
            "unit": "ns",
            "range": "± 170.80004217472234"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "178dc21b572263c4421e2602e41cc243cb94f507",
          "message": "Fix writing output for scan (#880)\n\n* Writing output for scan was not handling output buffer (dcurr, dend) correctly. Also, it was not handling large keys correctly.\r\n\r\n* update version",
          "timestamp": "2024-12-13T13:55:49-08:00",
          "tree_id": "1966c990a96fa84a42747ad14ce5480535196e57",
          "url": "https://github.com/microsoft/garnet/commit/178dc21b572263c4421e2602e41cc243cb94f507"
        },
        "date": 1734127138486,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37070.69805673452,
            "unit": "ns",
            "range": "± 152.26229170307067"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 39259.96441141764,
            "unit": "ns",
            "range": "± 270.18949653912944"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31941.41573486328,
            "unit": "ns",
            "range": "± 307.52245304580424"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30961.838623046875,
            "unit": "ns",
            "range": "± 61.61186583242974"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1ce0dafecaba15335e8e0767a6eeb441b72e56c",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#862)\n\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T14:08:03-08:00",
          "tree_id": "b2aa23d9235558527754332fab728fa03d60007b",
          "url": "https://github.com/microsoft/garnet/commit/f1ce0dafecaba15335e8e0767a6eeb441b72e56c"
        },
        "date": 1734127883862,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37227.94042532785,
            "unit": "ns",
            "range": "± 120.61420143923628"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38023.23437064035,
            "unit": "ns",
            "range": "± 271.58593898414597"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32508.083687918526,
            "unit": "ns",
            "range": "± 223.59081864386414"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31177.31670633952,
            "unit": "ns",
            "range": "± 38.656251347322154"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132103727,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37338.74373953683,
            "unit": "ns",
            "range": "± 293.04381386143524"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37663.53348388672,
            "unit": "ns",
            "range": "± 39.57944776276908"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31983.63195292155,
            "unit": "ns",
            "range": "± 112.50602428573582"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31194.646596272785,
            "unit": "ns",
            "range": "± 370.26242408813533"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734133771472,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37613.930338541664,
            "unit": "ns",
            "range": "± 418.8719933357611"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38490.474219689,
            "unit": "ns",
            "range": "± 123.44612133995066"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32035.861694335938,
            "unit": "ns",
            "range": "± 39.08308079870975"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31720.78631591797,
            "unit": "ns",
            "range": "± 252.89197671732765"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377052911,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 39179.857286725724,
            "unit": "ns",
            "range": "± 242.37608931224173"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38300.899209158764,
            "unit": "ns",
            "range": "± 223.15595975878216"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31977.768774414064,
            "unit": "ns",
            "range": "± 219.06565145310708"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 32236.072186279296,
            "unit": "ns",
            "range": "± 307.2156856296761"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392536472,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36509.882807804985,
            "unit": "ns",
            "range": "± 135.36420571969046"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38613.486321082484,
            "unit": "ns",
            "range": "± 30.748359824308235"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31816.730875651043,
            "unit": "ns",
            "range": "± 26.26498440492891"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 32021.311589558918,
            "unit": "ns",
            "range": "± 51.16937977104647"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483454672,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36752.01412963867,
            "unit": "ns",
            "range": "± 596.2828456472726"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37831.67894199916,
            "unit": "ns",
            "range": "± 525.4810909032065"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31232.199645996094,
            "unit": "ns",
            "range": "± 577.3368447707275"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30953.341561453683,
            "unit": "ns",
            "range": "± 268.2460895079047"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559310240,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37088.07216796875,
            "unit": "ns",
            "range": "± 243.5563467135325"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37696.964975210336,
            "unit": "ns",
            "range": "± 44.49286776728761"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 33363.12130267803,
            "unit": "ns",
            "range": "± 48.1384628434452"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 32123.04502360026,
            "unit": "ns",
            "range": "± 260.50886222647824"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578574946,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 38686.20383126395,
            "unit": "ns",
            "range": "± 191.83916024248677"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 39598.266829427084,
            "unit": "ns",
            "range": "± 402.9451657256275"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31939.705632527668,
            "unit": "ns",
            "range": "± 35.343435566516824"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 33444.604864501955,
            "unit": "ns",
            "range": "± 220.9206432253028"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734595800163,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36945.21810913086,
            "unit": "ns",
            "range": "± 236.61921724640297"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37802.39417208158,
            "unit": "ns",
            "range": "± 74.83551913364653"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 33276.186519368486,
            "unit": "ns",
            "range": "± 210.79543313648918"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31437.45687866211,
            "unit": "ns",
            "range": "± 20.61606785448769"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643213332,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37019.442826334634,
            "unit": "ns",
            "range": "± 280.42350056119926"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38085.221775599886,
            "unit": "ns",
            "range": "± 277.1775351851249"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32093.326253255207,
            "unit": "ns",
            "range": "± 302.02603093337854"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31414.061442057293,
            "unit": "ns",
            "range": "± 139.61762216009618"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647508048,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37504.008977254234,
            "unit": "ns",
            "range": "± 69.42465155133678"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38501.648905436195,
            "unit": "ns",
            "range": "± 133.41832883154814"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32441.444039481026,
            "unit": "ns",
            "range": "± 138.22931885636166"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31191.94795735677,
            "unit": "ns",
            "range": "± 53.932726088356475"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652300196,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 38256.19110921224,
            "unit": "ns",
            "range": "± 401.77375455002704"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37929.265001569474,
            "unit": "ns",
            "range": "± 454.4136103000083"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32094.584416707356,
            "unit": "ns",
            "range": "± 55.312553988216685"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 32391.27668253581,
            "unit": "ns",
            "range": "± 51.19309062965109"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734746943143,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37427.54757181803,
            "unit": "ns",
            "range": "± 83.51035743225442"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38701.48472086588,
            "unit": "ns",
            "range": "± 322.063162779262"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32067.197131347657,
            "unit": "ns",
            "range": "± 221.2921635924128"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31758.882145472937,
            "unit": "ns",
            "range": "± 25.06187903496795"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906606883,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37081.35537109375,
            "unit": "ns",
            "range": "± 290.24467683876776"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38342.09306922326,
            "unit": "ns",
            "range": "± 154.17135487812058"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32510.78174235026,
            "unit": "ns",
            "range": "± 217.33666822406425"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30949.043325570914,
            "unit": "ns",
            "range": "± 35.076770102430544"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407437899,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37222.92389787947,
            "unit": "ns",
            "range": "± 145.37359278232853"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38087.77990722656,
            "unit": "ns",
            "range": "± 293.76514179957667"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32297.42230834961,
            "unit": "ns",
            "range": "± 233.48684433224193"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31727.930458577473,
            "unit": "ns",
            "range": "± 248.43824706531188"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187137144,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37685.964023844404,
            "unit": "ns",
            "range": "± 209.48375740692856"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 39006.744889322916,
            "unit": "ns",
            "range": "± 330.7048298947064"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 33606.88694458008,
            "unit": "ns",
            "range": "± 229.68042162844418"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31994.012709397535,
            "unit": "ns",
            "range": "± 22.975901189131722"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736282932437,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 38811.43616333008,
            "unit": "ns",
            "range": "± 201.44256834803636"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 39210.26386906551,
            "unit": "ns",
            "range": "± 60.80690401901163"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32149.899149576824,
            "unit": "ns",
            "range": "± 143.26260624437398"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 32789.15733555385,
            "unit": "ns",
            "range": "± 210.0100919514483"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736375991998,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36981.49022013346,
            "unit": "ns",
            "range": "± 329.8917036105692"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 40157.473557692305,
            "unit": "ns",
            "range": "± 112.99164145843531"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32172.700576782227,
            "unit": "ns",
            "range": "± 39.40457849952728"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31990.912848839394,
            "unit": "ns",
            "range": "± 77.6818933439769"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461707027,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37179.49669236403,
            "unit": "ns",
            "range": "± 225.92384031537688"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37732.234451293945,
            "unit": "ns",
            "range": "± 22.96979899357066"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32499.574192592077,
            "unit": "ns",
            "range": "± 151.81013278206441"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 32016.224442545572,
            "unit": "ns",
            "range": "± 227.70520206450527"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479513893,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 38176.29039001465,
            "unit": "ns",
            "range": "± 40.103178430138726"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37890.91788736979,
            "unit": "ns",
            "range": "± 19.226015344074742"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 33187.45637629582,
            "unit": "ns",
            "range": "± 112.08333061410262"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31954.520268758137,
            "unit": "ns",
            "range": "± 57.94541940015322"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553343440,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37302.2998046875,
            "unit": "ns",
            "range": "± 205.17772632296328"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 39195.88562011719,
            "unit": "ns",
            "range": "± 311.37271086461305"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32816.14846801758,
            "unit": "ns",
            "range": "± 249.18117404761335"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31748.678737386068,
            "unit": "ns",
            "range": "± 273.1369389667722"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655576281,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37013.32282002767,
            "unit": "ns",
            "range": "± 32.287557564397545"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38340.73413696289,
            "unit": "ns",
            "range": "± 273.3167992558834"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32773.52199707031,
            "unit": "ns",
            "range": "± 211.64877413644004"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 33440.11785888672,
            "unit": "ns",
            "range": "± 322.18706555677"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253818324,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37270.713689467484,
            "unit": "ns",
            "range": "± 747.5015923862634"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37982.28667602539,
            "unit": "ns",
            "range": "± 577.7747379763101"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31309.75264892578,
            "unit": "ns",
            "range": "± 382.8612014906112"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30852.946223667688,
            "unit": "ns",
            "range": "± 464.0745872511231"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788443284,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36689.06661987305,
            "unit": "ns",
            "range": "± 37.91216820196204"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38311.32752990723,
            "unit": "ns",
            "range": "± 42.32530548316003"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32654.43715922038,
            "unit": "ns",
            "range": "± 15.65690919578772"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 33133.212693277994,
            "unit": "ns",
            "range": "± 259.36641780298044"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050186559,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37253.755490816555,
            "unit": "ns",
            "range": "± 27.985579457548713"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38680.0731375558,
            "unit": "ns",
            "range": "± 305.53738566215753"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32509.868576049805,
            "unit": "ns",
            "range": "± 44.24980930468515"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 32157.049643380302,
            "unit": "ns",
            "range": "± 41.174960563128195"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368712683,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 42132.44437866211,
            "unit": "ns",
            "range": "± 232.5454630270237"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 38549.434670584546,
            "unit": "ns",
            "range": "± 54.105821804626665"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32919.56235177176,
            "unit": "ns",
            "range": "± 126.02563233459601"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31341.543919154577,
            "unit": "ns",
            "range": "± 126.99921486762327"
          }
        ]
      }
    ],
    "Lua.LuaScripts (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd766248719caf2817592e988a5e67edc22b511b",
          "message": "Implementing BDN Perf pipeline (#758)\n\n* The CI scripts, YML and config files to check perf using BDN benchmarking.  Also, a fix in ClusterBench for and renamed Lua Runner benchmarking\r\n\r\n* Cleaned up the debug message and updated couple expected values\r\n\r\n* Updated SAddRem - windows - to 130 from 118.  Also removed unncesssary build statement in YML\r\n\r\n* Proof of concept for Performance run on ADO using BDN\r\n\r\n* Comment out number of Cores check so can try proof of concept on ADO perf machines\r\n\r\n* Getting close to having BDN working\r\n\r\n* Fixed RespLuaStress\r\n\r\n* Fixed issue in Lua Runner Stress\r\n\r\n* Updated config values, set charting and commit comment as separate tasks\r\n\r\n* Updated config values\r\n\r\n* Minor change to YML (remove pull requests) and updated LuaRunner config value\r\n\r\n* One more config value fix\r\n\r\n* Added a task to do the push\r\n\r\n* Putting back to push chart in the chart task and not a separate one\r\n\r\n* Moved the permissions to full workflow\r\n\r\n* Just minor to add commits\r\n\r\n* Adding actions: write permit since actions default to read only\r\n\r\n* Set up the commit comment for BDN as well as summary to show current vs previous BDN perf numbers\r\n\r\n* A few fixes\r\n\r\n* Updated BDN perf YML, config files and ps1 script\r\n\r\n* Versioning issue with BDN test files, fixed now\r\n\r\n* Bump threshold to 35% (135%) to trigger perf failure\r\n\r\n* Set to Linux only to reduce number of consectutive tests which caused push collisions with GitHub\r\n\r\n* Just Windows only test run\r\n\r\n* Putting it back to both OS for the tests\r\n\r\n* Set threshhold to 50% (150%) as seeing BDN ran twice on same code sometimes is in 40%+ range of difference.\r\n\r\n* Big change where using continuousbenchmark branch for all data for continuous benchmarking and also changed to where script is only checking allocated values and let github-action-benchmark compare mean values\r\n\r\n* Updated ClusterBench to get main changes\r\n\r\n* Fix issue with Cluster BDN is not able to access folder so setting to tmp which does have access\r\n\r\n* Bumping threshold to 50% (150%) as mean value in RespParseStress can vary into the 40% from run to run.\r\n\r\n* First update\r\n\r\n* Hiding the Gen0 column for Lua benchmark\r\n\r\n* Updated BDN test infrastructure to match the new BDN org.\r\n\r\n* Fix bug in ObjectOperations\r\n\r\n* Set max items on chart to 50 ... can modify later if want\r\n\r\n* Added the run on push to main\r\n\r\n* Put Performance Pipeline back\r\n\r\n* Fixed the default case when no parameters sent to ps1\r\n\r\n* Cleaned up config files:\r\nhave shorter names for values\r\nnot have configuration or framework (moved to ps1 file)\r\nnot have windows / linux differnce in expected\r\nMoved acceptable allocated range to script\r\n\r\nmodified the script:\r\nto only load values for the specific test instead of looking for all values\r\nchanges to match the changes in config (shorter names, etc)\r\n\r\n* Big update to where moved to a single config file and the ps1 file does not need to be updated when new BDNs are added.\r\n\r\n* Added workflow_dispatch: to deploy website yml so we can manually deploy website if we want\r\n\r\n* Updated alert-threshold from 150% to 140%. If too many false positives we can raise it back. Also, removed darrenge from the alert CC line as no need for that.\r\n\r\n* Removed the commit comment / comparison to previous commit task. Still will get  summary data in the specific workflow run and still uploads data to charts (when pushing to main).\r\n\r\n* Minor update - comments only",
          "timestamp": "2024-12-11T11:29:32-08:00",
          "tree_id": "a262ac843488b7afb61ad91dfb2a488917243391",
          "url": "https://github.com/microsoft/garnet/commit/dd766248719caf2817592e988a5e67edc22b511b"
        },
        "date": 1733945565297,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 193.66585097312927,
            "unit": "ns",
            "range": "± 1.4032993671386589"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 345.468617609569,
            "unit": "ns",
            "range": "± 2.473850250302473"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 618.5519981384277,
            "unit": "ns",
            "range": "± 6.06621820410833"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2968.6666544596355,
            "unit": "ns",
            "range": "± 18.671120424173253"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aabc0bb831f2313bce41c43c29c9c2b0e434cb00",
          "message": "handle uninitialized epoch value merge (#874)\n\n* handle uninitialized epoch value merge\r\n\r\n* release 1.0.47",
          "timestamp": "2024-12-11T14:03:36-08:00",
          "tree_id": "ca83e06a72e78b6bab3872148b9e3eb5cb476269",
          "url": "https://github.com/microsoft/garnet/commit/aabc0bb831f2313bce41c43c29c9c2b0e434cb00"
        },
        "date": 1733954819665,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 179.76951920986176,
            "unit": "ns",
            "range": "± 0.967493867942754"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 319.9189979871114,
            "unit": "ns",
            "range": "± 2.220174485778534"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 602.2868664423625,
            "unit": "ns",
            "range": "± 5.135448030929655"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2876.2234130859374,
            "unit": "ns",
            "range": "± 16.80723300533179"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf1d4b66c442284f95c8db51e57274ba07316561",
          "message": "Bump nanoid from 3.3.7 to 3.3.8 in /website (#873)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: darrenge <darrenge@microsoft.com>",
          "timestamp": "2024-12-11T15:37:40-08:00",
          "tree_id": "1d3dbe6f308895a822d913fd3960c803796cb264",
          "url": "https://github.com/microsoft/garnet/commit/cf1d4b66c442284f95c8db51e57274ba07316561"
        },
        "date": 1733960463202,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 178.07218401772636,
            "unit": "ns",
            "range": "± 0.9577073336526256"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 317.6942486445109,
            "unit": "ns",
            "range": "± 1.6751916805786122"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 611.2062438329061,
            "unit": "ns",
            "range": "± 8.263349683666844"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2909.5501708984375,
            "unit": "ns",
            "range": "± 20.280497203024307"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d4c7448569063ea786802a0580acf465108e037",
          "message": "Add ReadOnly Support for IDevice (#870)\n\n* add readOnly flag in streamProvider for LocalStorageDevice\r\n\r\n* add linux readOnly flag for managed device\r\n\r\n* add explicit readOnly assignment for parameter",
          "timestamp": "2024-12-12T13:03:41-08:00",
          "tree_id": "3d591691e9ac0cfb714d98096a0580abab554b23",
          "url": "https://github.com/microsoft/garnet/commit/0d4c7448569063ea786802a0580acf465108e037"
        },
        "date": 1734037615996,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 177.32841302798346,
            "unit": "ns",
            "range": "± 0.5042680816365771"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 318.2381695429484,
            "unit": "ns",
            "range": "± 2.099652228890676"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 603.4227486337934,
            "unit": "ns",
            "range": "± 3.1150963010893777"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2927.5593322753907,
            "unit": "ns",
            "range": "± 28.48369284422944"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2c2261c72948136f6af9dfdfefc86ebb02c686a",
          "message": "CustomCommandManager + CustomCommandManagerSession to use auto-expandable maps (#848)\n\n* wip\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* Comments + tests\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* fix\r\n\r\n* format\r\n\r\n* Adding a non-concurrent ExpandableMap\r\n\r\n* small fix\r\n\r\n* Switching to SingleWriterMultiReaderLock\r\n\r\n* Some thread-safety related fixes\r\n\r\n* Added some async tests for command registration\r\n\r\n* small bugfixes\r\n\r\n* format",
          "timestamp": "2024-12-12T18:49:23-08:00",
          "tree_id": "27ea42b0a4d6b834a7f450d12100d29e8b94f077",
          "url": "https://github.com/microsoft/garnet/commit/f2c2261c72948136f6af9dfdfefc86ebb02c686a"
        },
        "date": 1734058389488,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 199.53142457008363,
            "unit": "ns",
            "range": "± 2.0793628221115243"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 340.764165242513,
            "unit": "ns",
            "range": "± 3.1249152810191547"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 616.6441509383066,
            "unit": "ns",
            "range": "± 6.282155084628434"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 3154.165906016032,
            "unit": "ns",
            "range": "± 20.640771690524762"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "kmontrose@microsoft.com",
            "name": "kevin-montrose",
            "username": "kevin-montrose"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa004d372a23731e3e5f0fa65d701c4a4d62b381",
          "message": "Fixes for SCRIPT commands and behavior (#860)\n\n* fix FastBasicRespCommandsInfo construction and lookup; which incidentally fixes EVALSHA when scripting is enabled\r\n\r\n* fix MultiKeySlotVerify - keys past the second were not correctly visited\r\n\r\n* break SCRIPT into appropriate subcommands; update command info; fix SCRIPT EXISTS to match Redis behavior; tests for SCRIPT|* ACLs; DRY up SCRIPT command implementations\r\n\r\n* test script failures, match Redis error messages\r\n\r\n* remove byte[] allocations from evalsha path (amongst others); should get the Lua overhead down to just the NLua + locking stuff\r\n\r\n* add test for multi-hash version of SCRIPT|EXIST; fix bug where hash casing matters (matching Redis by defaulting to upper case hashes values); remove debug code\r\n\r\n* fix formatting\r\n\r\n* uppercase some test cases I missed\r\n\r\n* add EVALSHA to cluster slot tests\r\n\r\n* restore lower case hashes; erroneously thought Redis used upper case\r\n\r\n* add ScriptOperations to benchmark this change\r\n\r\n* formatting fixes\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-12T23:23:53-08:00",
          "tree_id": "8c0664ade6b6572a8af295961a2d61a846b60756",
          "url": "https://github.com/microsoft/garnet/commit/aa004d372a23731e3e5f0fa65d701c4a4d62b381"
        },
        "date": 1734074848798,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 188.16842782497406,
            "unit": "ns",
            "range": "± 1.1627745289180045"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 326.4345873514811,
            "unit": "ns",
            "range": "± 2.1844479535344075"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 608.1461450713022,
            "unit": "ns",
            "range": "± 4.987420347546367"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2928.858034133911,
            "unit": "ns",
            "range": "± 20.787703311031482"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca0222960f0145302eb1fc9896f680f9aff5a4d1",
          "message": "Streaming snapshot checkpoint in Tsavorite (#824)\n\n* Mild refactor in preparation\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* fix tests to not cover steaming snapshot as it is not a traditional checkpoint\r\n\r\n* add unit test\r\n\r\n* fix tests\r\n\r\n* fix test\r\n\r\n* updates\r\n\r\n* Support maxAddress during liveness checks\r\n\r\n* improvements to api\r\n\r\n* Add SetVersion API\r\n\r\n* more checks\r\n\r\n* add comment\r\n\r\n* add comments",
          "timestamp": "2024-12-13T10:25:49-08:00",
          "tree_id": "917be4f308af8da9ec7782faa5069a09f2b873c5",
          "url": "https://github.com/microsoft/garnet/commit/ca0222960f0145302eb1fc9896f680f9aff5a4d1"
        },
        "date": 1734114556627,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 188.91168311926035,
            "unit": "ns",
            "range": "± 1.1533494805322169"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 323.5754240036011,
            "unit": "ns",
            "range": "± 2.6684226704152962"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 596.7557873408,
            "unit": "ns",
            "range": "± 5.067161219452393"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2887.178291593279,
            "unit": "ns",
            "range": "± 28.770134276187093"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f679b0b683e4e94fa2a3ebb2689708ec2efee74",
          "message": "Added BDN for all hash commands (#879)\n\n* Added BDN for all hash commands\r\n\r\n* Moved BDN of hash set to separate class",
          "timestamp": "2024-12-13T12:50:11-08:00",
          "tree_id": "66c04dc8b338f40aeb360419fc1953dcc219abbc",
          "url": "https://github.com/microsoft/garnet/commit/3f679b0b683e4e94fa2a3ebb2689708ec2efee74"
        },
        "date": 1734123220145,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 181.3941502911704,
            "unit": "ns",
            "range": "± 0.9746916379346954"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 322.4740557988485,
            "unit": "ns",
            "range": "± 3.210029259270018"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 609.621857716487,
            "unit": "ns",
            "range": "± 5.098964659596539"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2909.445321146647,
            "unit": "ns",
            "range": "± 14.825702930725434"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "178dc21b572263c4421e2602e41cc243cb94f507",
          "message": "Fix writing output for scan (#880)\n\n* Writing output for scan was not handling output buffer (dcurr, dend) correctly. Also, it was not handling large keys correctly.\r\n\r\n* update version",
          "timestamp": "2024-12-13T13:55:49-08:00",
          "tree_id": "1966c990a96fa84a42747ad14ce5480535196e57",
          "url": "https://github.com/microsoft/garnet/commit/178dc21b572263c4421e2602e41cc243cb94f507"
        },
        "date": 1734127156990,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 183.85704694475447,
            "unit": "ns",
            "range": "± 1.2783397039498137"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 349.8680354631864,
            "unit": "ns",
            "range": "± 1.2490840737699522"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 632.9414082254682,
            "unit": "ns",
            "range": "± 4.159123554974964"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2927.6136395772296,
            "unit": "ns",
            "range": "± 20.33788624526231"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1ce0dafecaba15335e8e0767a6eeb441b72e56c",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#862)\n\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T14:08:03-08:00",
          "tree_id": "b2aa23d9235558527754332fab728fa03d60007b",
          "url": "https://github.com/microsoft/garnet/commit/f1ce0dafecaba15335e8e0767a6eeb441b72e56c"
        },
        "date": 1734127895033,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 195.45456528663635,
            "unit": "ns",
            "range": "± 1.1883694792398487"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 325.1344343821208,
            "unit": "ns",
            "range": "± 2.9626050617084667"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 613.0254242079599,
            "unit": "ns",
            "range": "± 2.960579003038886"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2975.173557281494,
            "unit": "ns",
            "range": "± 29.028883568676413"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132132143,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 192.86800336837769,
            "unit": "ns",
            "range": "± 3.002063806150634"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 319.0803663889567,
            "unit": "ns",
            "range": "± 2.342252063255537"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 586.3028335571289,
            "unit": "ns",
            "range": "± 3.0614311566474357"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2935.7509251912434,
            "unit": "ns",
            "range": "± 20.065735061964357"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734133800402,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 186.86895966529846,
            "unit": "ns",
            "range": "± 1.2007424210328141"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 319.99647317613875,
            "unit": "ns",
            "range": "± 2.651121056139691"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 601.7862464269002,
            "unit": "ns",
            "range": "± 4.868715443178402"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2988.8161781311037,
            "unit": "ns",
            "range": "± 31.704949972279085"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377096278,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 196.87415656021662,
            "unit": "ns",
            "range": "± 1.3350588475393401"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 318.8814069112142,
            "unit": "ns",
            "range": "± 2.504869034382355"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 593.6006362097604,
            "unit": "ns",
            "range": "± 6.812451863152205"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2885.6963623591832,
            "unit": "ns",
            "range": "± 18.300529722173614"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392545136,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 178.26185645375932,
            "unit": "ns",
            "range": "± 0.8007835887121604"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 324.393086942037,
            "unit": "ns",
            "range": "± 2.7905417736601152"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 626.1162096432278,
            "unit": "ns",
            "range": "± 3.6545645165181324"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 3003.538348061698,
            "unit": "ns",
            "range": "± 25.069325310616264"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483484159,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 187.36731851100922,
            "unit": "ns",
            "range": "± 1.4726390175678732"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 296.1976917266846,
            "unit": "ns",
            "range": "± 2.4992526178854035"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 597.3464776357015,
            "unit": "ns",
            "range": "± 5.38884835573616"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2951.162675221761,
            "unit": "ns",
            "range": "± 19.3486378388116"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559297701,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 253.6641488869985,
            "unit": "ns",
            "range": "± 0.2274689421232005"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 469.5754606882731,
            "unit": "ns",
            "range": "± 1.2308798428646333"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 682.9428581091074,
            "unit": "ns",
            "range": "± 2.7884476464776875"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 648.9806544621786,
            "unit": "ns",
            "range": "± 3.135704460686868"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578587956,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 269.9233253002167,
            "unit": "ns",
            "range": "± 0.6827061904669384"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 475.2320156733195,
            "unit": "ns",
            "range": "± 2.684835184150708"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 714.6956875483195,
            "unit": "ns",
            "range": "± 2.404220189815872"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 637.0834420277522,
            "unit": "ns",
            "range": "± 0.6108542034337306"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734595801274,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 270.5529970486959,
            "unit": "ns",
            "range": "± 1.129702547097591"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 486.18578111208404,
            "unit": "ns",
            "range": "± 1.5722628828011782"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 645.3851815632412,
            "unit": "ns",
            "range": "± 3.2098321512948407"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 647.7655875523885,
            "unit": "ns",
            "range": "± 1.5788204947589475"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643236523,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 252.092142868042,
            "unit": "ns",
            "range": "± 1.1826197667434049"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 455.34251874287924,
            "unit": "ns",
            "range": "± 1.7765523331229764"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 669.7056493123372,
            "unit": "ns",
            "range": "± 2.59020836197951"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 648.7935075078692,
            "unit": "ns",
            "range": "± 2.461914126153053"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647525252,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 257.9211661974589,
            "unit": "ns",
            "range": "± 1.4001706785593602"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 466.9783775125231,
            "unit": "ns",
            "range": "± 1.0434946307424315"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 682.1537414959499,
            "unit": "ns",
            "range": "± 2.700116296955449"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 649.1694487889607,
            "unit": "ns",
            "range": "± 2.345033248587433"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652316343,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 243.29741797080408,
            "unit": "ns",
            "range": "± 0.9400159859821414"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 464.2924782117208,
            "unit": "ns",
            "range": "± 2.816029727610623"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 662.473366517287,
            "unit": "ns",
            "range": "± 1.0760939151536784"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 646.7009962626865,
            "unit": "ns",
            "range": "± 2.138560913940816"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734746970623,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 260.8691301981608,
            "unit": "ns",
            "range": "± 0.8875477499223504"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 458.4206044333322,
            "unit": "ns",
            "range": "± 1.025169582541741"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 682.949131266276,
            "unit": "ns",
            "range": "± 4.1593698653526205"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 643.6655611310687,
            "unit": "ns",
            "range": "± 2.098928053729155"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906598364,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 260.2515328847445,
            "unit": "ns",
            "range": "± 0.36157883023270954"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 489.317353112357,
            "unit": "ns",
            "range": "± 0.9334724807962262"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 672.9916081110637,
            "unit": "ns",
            "range": "± 2.317009208498218"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 642.3749979654948,
            "unit": "ns",
            "range": "± 1.7747241653529557"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407452177,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 250.03658917744954,
            "unit": "ns",
            "range": "± 0.39449264917385957"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 453.65227811677113,
            "unit": "ns",
            "range": "± 1.1431569776213366"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 680.1841990152994,
            "unit": "ns",
            "range": "± 3.3640356494619144"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 649.0389623641968,
            "unit": "ns",
            "range": "± 1.0632816659033044"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187134214,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 242.50346579918494,
            "unit": "ns",
            "range": "± 0.5314174129350906"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 476.6697588648115,
            "unit": "ns",
            "range": "± 1.7160410319844857"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 674.9103003819783,
            "unit": "ns",
            "range": "± 4.18232074882764"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 637.9875745773315,
            "unit": "ns",
            "range": "± 1.1173811186540308"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736282951986,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 297.119498761495,
            "unit": "ns",
            "range": "± 0.9728974983078414"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 463.64566833632335,
            "unit": "ns",
            "range": "± 0.917788532162794"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 678.2454524040222,
            "unit": "ns",
            "range": "± 2.6657801008358075"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 643.0602378845215,
            "unit": "ns",
            "range": "± 0.40711250326031717"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736375982649,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 243.9193514585495,
            "unit": "ns",
            "range": "± 0.36093986824035884"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 478.70255054746355,
            "unit": "ns",
            "range": "± 2.038219658082378"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 671.8407953898112,
            "unit": "ns",
            "range": "± 2.8218088907327625"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 627.9462024982159,
            "unit": "ns",
            "range": "± 1.1106313631403868"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461717827,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 240.3982948621114,
            "unit": "ns",
            "range": "± 1.6722117784907826"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 450.1433172861735,
            "unit": "ns",
            "range": "± 1.1169803761050963"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 676.3416561126709,
            "unit": "ns",
            "range": "± 2.555634814507321"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 616.3289897782462,
            "unit": "ns",
            "range": "± 1.9914049594124459"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479533393,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 259.90496609761163,
            "unit": "ns",
            "range": "± 0.2289817733415366"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 480.2864158630371,
            "unit": "ns",
            "range": "± 0.8219089717949029"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 686.0713738713946,
            "unit": "ns",
            "range": "± 1.7256983423793497"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 641.8802328109741,
            "unit": "ns",
            "range": "± 1.6067011717509427"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553354129,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 249.2383350690206,
            "unit": "ns",
            "range": "± 1.0485674760462038"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 462.7286285672869,
            "unit": "ns",
            "range": "± 2.000243813506148"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 684.0027878834651,
            "unit": "ns",
            "range": "± 1.3883724298182645"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 617.2673394863422,
            "unit": "ns",
            "range": "± 0.911838930536706"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655592088,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 250.19925341239343,
            "unit": "ns",
            "range": "± 0.28377784198223027"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 456.6936458587646,
            "unit": "ns",
            "range": "± 2.1351743670785317"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 670.1492440541585,
            "unit": "ns",
            "range": "± 3.5695065172622034"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 651.0514433383942,
            "unit": "ns",
            "range": "± 0.9102694055626578"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254084462,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,Limit)",
            "value": 250.58786242802938,
            "unit": "ns",
            "range": "± 2.0667066835562666"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,Limit)",
            "value": 305.2726716995239,
            "unit": "ns",
            "range": "± 0.5809932454402191"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,Limit)",
            "value": 507.8591604232788,
            "unit": "ns",
            "range": "± 3.6515543732034077"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,Limit)",
            "value": 589.3953927357992,
            "unit": "ns",
            "range": "± 0.25798834655787284"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,None)",
            "value": 264.9559315999349,
            "unit": "ns",
            "range": "± 1.0596661427408773"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,None)",
            "value": 299.6034235613687,
            "unit": "ns",
            "range": "± 0.9247981173471477"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,None)",
            "value": 479.03801015707165,
            "unit": "ns",
            "range": "± 1.5879549340620758"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,None)",
            "value": 593.1021175384521,
            "unit": "ns",
            "range": "± 2.1442283751551408"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Native,None)",
            "value": 228.536471588271,
            "unit": "ns",
            "range": "± 0.7139019037182119"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Native,None)",
            "value": 285.4584043942965,
            "unit": "ns",
            "range": "± 0.2940165306169657"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Native,None)",
            "value": 482.8830932470468,
            "unit": "ns",
            "range": "± 1.488176682974786"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Native,None)",
            "value": 586.9926481246948,
            "unit": "ns",
            "range": "± 2.7000450323999328"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,Limit)",
            "value": 224.81655101776124,
            "unit": "ns",
            "range": "± 0.874567046141999"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,Limit)",
            "value": 325.8707803726196,
            "unit": "ns",
            "range": "± 1.507044688539278"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,Limit)",
            "value": 495.2600657599313,
            "unit": "ns",
            "range": "± 1.7962993457949743"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,Limit)",
            "value": 597.2790586471558,
            "unit": "ns",
            "range": "± 3.6799585924271154"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,None)",
            "value": 240.95982456207275,
            "unit": "ns",
            "range": "± 1.1570842036682154"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,None)",
            "value": 312.89177360534666,
            "unit": "ns",
            "range": "± 1.2900355131995964"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,None)",
            "value": 510.9665310723441,
            "unit": "ns",
            "range": "± 2.6561051745160205"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,None)",
            "value": 588.6787789026896,
            "unit": "ns",
            "range": "± 1.8741719573300861"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788698548,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,Limit)",
            "value": 255.64835561116536,
            "unit": "ns",
            "range": "± 1.028221188643291"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,Limit)",
            "value": 322.8371542417086,
            "unit": "ns",
            "range": "± 1.3263363343780954"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,Limit)",
            "value": 511.25000648498536,
            "unit": "ns",
            "range": "± 1.7423393138408503"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,Limit)",
            "value": 598.0775916916983,
            "unit": "ns",
            "range": "± 2.240683500152598"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,None)",
            "value": 239.22709212984358,
            "unit": "ns",
            "range": "± 1.956112189596907"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,None)",
            "value": 297.38859949793135,
            "unit": "ns",
            "range": "± 0.9395320246291706"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,None)",
            "value": 518.5700474466596,
            "unit": "ns",
            "range": "± 1.6161923465512409"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,None)",
            "value": 604.6294152577718,
            "unit": "ns",
            "range": "± 1.8259284526128088"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Native,None)",
            "value": 239.642378953787,
            "unit": "ns",
            "range": "± 0.5441250249256848"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Native,None)",
            "value": 303.01502020018444,
            "unit": "ns",
            "range": "± 1.3996872690647553"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Native,None)",
            "value": 494.9635612169902,
            "unit": "ns",
            "range": "± 1.5362550130847583"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Native,None)",
            "value": 610.9903685251871,
            "unit": "ns",
            "range": "± 1.433326753357517"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,Limit)",
            "value": 234.19033199946085,
            "unit": "ns",
            "range": "± 2.5926388084184584"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,Limit)",
            "value": 315.28051770528157,
            "unit": "ns",
            "range": "± 1.513504199136256"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,Limit)",
            "value": 502.5100925885714,
            "unit": "ns",
            "range": "± 1.4445652938847369"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,Limit)",
            "value": 605.1167394093105,
            "unit": "ns",
            "range": "± 3.337936800331989"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,None)",
            "value": 245.76547193527222,
            "unit": "ns",
            "range": "± 0.9406643440265873"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,None)",
            "value": 305.9183307375227,
            "unit": "ns",
            "range": "± 0.9972953448758825"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,None)",
            "value": 522.6974164417812,
            "unit": "ns",
            "range": "± 1.9965353886255754"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,None)",
            "value": 589.5239212036133,
            "unit": "ns",
            "range": "± 2.3779285209863126"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050484053,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,Limit)",
            "value": 256.02066029035126,
            "unit": "ns",
            "range": "± 0.5468530052008997"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,Limit)",
            "value": 301.950782922598,
            "unit": "ns",
            "range": "± 0.5064115560811853"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,Limit)",
            "value": 522.0587132136027,
            "unit": "ns",
            "range": "± 2.873430133505632"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,Limit)",
            "value": 614.1615747043064,
            "unit": "ns",
            "range": "± 2.6016944521289274"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,None)",
            "value": 246.64178609848022,
            "unit": "ns",
            "range": "± 0.41713455326765153"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,None)",
            "value": 307.0896381139755,
            "unit": "ns",
            "range": "± 0.5241670623673708"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,None)",
            "value": 506.7265897115072,
            "unit": "ns",
            "range": "± 1.6293212959066865"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,None)",
            "value": 586.3824314753215,
            "unit": "ns",
            "range": "± 2.4701433631407266"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Native,None)",
            "value": 234.2494277220506,
            "unit": "ns",
            "range": "± 0.1693275514132633"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Native,None)",
            "value": 281.5253456433614,
            "unit": "ns",
            "range": "± 1.0852440975587285"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Native,None)",
            "value": 522.6923009236654,
            "unit": "ns",
            "range": "± 2.7091050700176327"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Native,None)",
            "value": 609.2559529713222,
            "unit": "ns",
            "range": "± 2.3573864051120172"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,Limit)",
            "value": 224.8872789144516,
            "unit": "ns",
            "range": "± 0.9182148930204715"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,Limit)",
            "value": 300.93243646621704,
            "unit": "ns",
            "range": "± 1.5667847480423205"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,Limit)",
            "value": 503.662060884329,
            "unit": "ns",
            "range": "± 2.6185240158912233"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,Limit)",
            "value": 588.9005126953125,
            "unit": "ns",
            "range": "± 1.9510444750820435"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,None)",
            "value": 233.43042550086975,
            "unit": "ns",
            "range": "± 0.6572214478048657"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,None)",
            "value": 300.39716229071985,
            "unit": "ns",
            "range": "± 0.7080898412692529"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,None)",
            "value": 496.44020989735924,
            "unit": "ns",
            "range": "± 2.1586836978944257"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,None)",
            "value": 584.4833701940684,
            "unit": "ns",
            "range": "± 1.1687343621179322"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368992180,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,Limit)",
            "value": 230.25514801343283,
            "unit": "ns",
            "range": "± 0.9978771893482686"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,Limit)",
            "value": 310.8609744480678,
            "unit": "ns",
            "range": "± 0.8951207365871591"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,Limit)",
            "value": 492.2852309544881,
            "unit": "ns",
            "range": "± 0.7451850724588951"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,Limit)",
            "value": 621.9579204831805,
            "unit": "ns",
            "range": "± 3.0418092906967815"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,None)",
            "value": 241.94468589929434,
            "unit": "ns",
            "range": "± 0.2646449909888148"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,None)",
            "value": 298.23676737149555,
            "unit": "ns",
            "range": "± 0.6293774787169379"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,None)",
            "value": 488.52699293409074,
            "unit": "ns",
            "range": "± 2.444938800087193"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,None)",
            "value": 602.3553742000034,
            "unit": "ns",
            "range": "± 2.170011533639336"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Native,None)",
            "value": 243.3300901559683,
            "unit": "ns",
            "range": "± 1.0703840121689692"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Native,None)",
            "value": 286.6842213358198,
            "unit": "ns",
            "range": "± 1.3343351227304407"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Native,None)",
            "value": 516.369505588825,
            "unit": "ns",
            "range": "± 0.8522866178149819"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Native,None)",
            "value": 594.8756501334054,
            "unit": "ns",
            "range": "± 1.8874469771699784"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,Limit)",
            "value": 220.32182121276855,
            "unit": "ns",
            "range": "± 0.6998955343454755"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,Limit)",
            "value": 295.47760639190676,
            "unit": "ns",
            "range": "± 0.9464687263101259"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,Limit)",
            "value": 482.91000304903304,
            "unit": "ns",
            "range": "± 1.7986149741878852"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,Limit)",
            "value": 577.6286719185965,
            "unit": "ns",
            "range": "± 4.19351941977453"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,None)",
            "value": 229.16394103368123,
            "unit": "ns",
            "range": "± 0.9443976566165111"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,None)",
            "value": 292.58607381184896,
            "unit": "ns",
            "range": "± 1.9080572920307193"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,None)",
            "value": 498.6361975351969,
            "unit": "ns",
            "range": "± 2.691600468773244"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,None)",
            "value": 564.4917797724406,
            "unit": "ns",
            "range": "± 2.8058174419822293"
          }
        ]
      }
    ],
    "Cluster.ClusterOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd766248719caf2817592e988a5e67edc22b511b",
          "message": "Implementing BDN Perf pipeline (#758)\n\n* The CI scripts, YML and config files to check perf using BDN benchmarking.  Also, a fix in ClusterBench for and renamed Lua Runner benchmarking\r\n\r\n* Cleaned up the debug message and updated couple expected values\r\n\r\n* Updated SAddRem - windows - to 130 from 118.  Also removed unncesssary build statement in YML\r\n\r\n* Proof of concept for Performance run on ADO using BDN\r\n\r\n* Comment out number of Cores check so can try proof of concept on ADO perf machines\r\n\r\n* Getting close to having BDN working\r\n\r\n* Fixed RespLuaStress\r\n\r\n* Fixed issue in Lua Runner Stress\r\n\r\n* Updated config values, set charting and commit comment as separate tasks\r\n\r\n* Updated config values\r\n\r\n* Minor change to YML (remove pull requests) and updated LuaRunner config value\r\n\r\n* One more config value fix\r\n\r\n* Added a task to do the push\r\n\r\n* Putting back to push chart in the chart task and not a separate one\r\n\r\n* Moved the permissions to full workflow\r\n\r\n* Just minor to add commits\r\n\r\n* Adding actions: write permit since actions default to read only\r\n\r\n* Set up the commit comment for BDN as well as summary to show current vs previous BDN perf numbers\r\n\r\n* A few fixes\r\n\r\n* Updated BDN perf YML, config files and ps1 script\r\n\r\n* Versioning issue with BDN test files, fixed now\r\n\r\n* Bump threshold to 35% (135%) to trigger perf failure\r\n\r\n* Set to Linux only to reduce number of consectutive tests which caused push collisions with GitHub\r\n\r\n* Just Windows only test run\r\n\r\n* Putting it back to both OS for the tests\r\n\r\n* Set threshhold to 50% (150%) as seeing BDN ran twice on same code sometimes is in 40%+ range of difference.\r\n\r\n* Big change where using continuousbenchmark branch for all data for continuous benchmarking and also changed to where script is only checking allocated values and let github-action-benchmark compare mean values\r\n\r\n* Updated ClusterBench to get main changes\r\n\r\n* Fix issue with Cluster BDN is not able to access folder so setting to tmp which does have access\r\n\r\n* Bumping threshold to 50% (150%) as mean value in RespParseStress can vary into the 40% from run to run.\r\n\r\n* First update\r\n\r\n* Hiding the Gen0 column for Lua benchmark\r\n\r\n* Updated BDN test infrastructure to match the new BDN org.\r\n\r\n* Fix bug in ObjectOperations\r\n\r\n* Set max items on chart to 50 ... can modify later if want\r\n\r\n* Added the run on push to main\r\n\r\n* Put Performance Pipeline back\r\n\r\n* Fixed the default case when no parameters sent to ps1\r\n\r\n* Cleaned up config files:\r\nhave shorter names for values\r\nnot have configuration or framework (moved to ps1 file)\r\nnot have windows / linux differnce in expected\r\nMoved acceptable allocated range to script\r\n\r\nmodified the script:\r\nto only load values for the specific test instead of looking for all values\r\nchanges to match the changes in config (shorter names, etc)\r\n\r\n* Big update to where moved to a single config file and the ps1 file does not need to be updated when new BDNs are added.\r\n\r\n* Added workflow_dispatch: to deploy website yml so we can manually deploy website if we want\r\n\r\n* Updated alert-threshold from 150% to 140%. If too many false positives we can raise it back. Also, removed darrenge from the alert CC line as no need for that.\r\n\r\n* Removed the commit comment / comparison to previous commit task. Still will get  summary data in the specific workflow run and still uploads data to charts (when pushing to main).\r\n\r\n* Minor update - comments only",
          "timestamp": "2024-12-11T11:29:32-08:00",
          "tree_id": "a262ac843488b7afb61ad91dfb2a488917243391",
          "url": "https://github.com/microsoft/garnet/commit/dd766248719caf2817592e988a5e67edc22b511b"
        },
        "date": 1733945667711,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16577.869061279296,
            "unit": "ns",
            "range": "± 161.23438639499892"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15534.583384195963,
            "unit": "ns",
            "range": "± 49.8026837175952"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14793.521170043945,
            "unit": "ns",
            "range": "± 62.767639447118476"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14621.712089029948,
            "unit": "ns",
            "range": "± 83.3733282050117"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 119824.22690836589,
            "unit": "ns",
            "range": "± 180.4814989505221"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20221.04091644287,
            "unit": "ns",
            "range": "± 17.360235997849465"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21565.112819126673,
            "unit": "ns",
            "range": "± 44.33002984365534"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15776.190465291342,
            "unit": "ns",
            "range": "± 20.87529966353803"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 16923.71325937907,
            "unit": "ns",
            "range": "± 51.28792971085843"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 127596.5756312779,
            "unit": "ns",
            "range": "± 1459.657839708987"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aabc0bb831f2313bce41c43c29c9c2b0e434cb00",
          "message": "handle uninitialized epoch value merge (#874)\n\n* handle uninitialized epoch value merge\r\n\r\n* release 1.0.47",
          "timestamp": "2024-12-11T14:03:36-08:00",
          "tree_id": "ca83e06a72e78b6bab3872148b9e3eb5cb476269",
          "url": "https://github.com/microsoft/garnet/commit/aabc0bb831f2313bce41c43c29c9c2b0e434cb00"
        },
        "date": 1733954951478,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16798.463041033065,
            "unit": "ns",
            "range": "± 94.05259202987305"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16671.56492207845,
            "unit": "ns",
            "range": "± 215.74821883362603"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15145.536213175455,
            "unit": "ns",
            "range": "± 99.93626474997322"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 15096.01607622419,
            "unit": "ns",
            "range": "± 34.851867092678994"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 120641.6962890625,
            "unit": "ns",
            "range": "± 392.2090260068685"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20430.449853750375,
            "unit": "ns",
            "range": "± 114.35647800751306"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20590.166221618652,
            "unit": "ns",
            "range": "± 99.72873680383067"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16188.362424214682,
            "unit": "ns",
            "range": "± 72.21200470577233"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15746.34209735577,
            "unit": "ns",
            "range": "± 50.256053391149955"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 129680.34280831473,
            "unit": "ns",
            "range": "± 2043.1509315510007"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf1d4b66c442284f95c8db51e57274ba07316561",
          "message": "Bump nanoid from 3.3.7 to 3.3.8 in /website (#873)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: darrenge <darrenge@microsoft.com>",
          "timestamp": "2024-12-11T15:37:40-08:00",
          "tree_id": "1d3dbe6f308895a822d913fd3960c803796cb264",
          "url": "https://github.com/microsoft/garnet/commit/cf1d4b66c442284f95c8db51e57274ba07316561"
        },
        "date": 1733960571842,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 17015.534388224285,
            "unit": "ns",
            "range": "± 11.102844168338109"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15925.753668648857,
            "unit": "ns",
            "range": "± 16.314564201078564"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14884.878391520182,
            "unit": "ns",
            "range": "± 74.4699454603074"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14797.739634195963,
            "unit": "ns",
            "range": "± 99.27009362657398"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 121003.77856445312,
            "unit": "ns",
            "range": "± 680.7432894991712"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20607.123112269812,
            "unit": "ns",
            "range": "± 33.76393975948858"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20874.468037923176,
            "unit": "ns",
            "range": "± 193.37360502263311"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15968.109306922326,
            "unit": "ns",
            "range": "± 36.12676860797994"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15386.201996939522,
            "unit": "ns",
            "range": "± 8.018046910238889"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 126440.01456392728,
            "unit": "ns",
            "range": "± 199.90225067911362"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d4c7448569063ea786802a0580acf465108e037",
          "message": "Add ReadOnly Support for IDevice (#870)\n\n* add readOnly flag in streamProvider for LocalStorageDevice\r\n\r\n* add linux readOnly flag for managed device\r\n\r\n* add explicit readOnly assignment for parameter",
          "timestamp": "2024-12-12T13:03:41-08:00",
          "tree_id": "3d591691e9ac0cfb714d98096a0580abab554b23",
          "url": "https://github.com/microsoft/garnet/commit/0d4c7448569063ea786802a0580acf465108e037"
        },
        "date": 1734037735376,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16647.613425118583,
            "unit": "ns",
            "range": "± 124.79833189876241"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 17259.55165608724,
            "unit": "ns",
            "range": "± 139.5521305495242"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15504.355209350586,
            "unit": "ns",
            "range": "± 50.94027842204274"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14165.097573416573,
            "unit": "ns",
            "range": "± 62.488384314693604"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 116252.1687273298,
            "unit": "ns",
            "range": "± 439.0448727150325"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20276.451939509465,
            "unit": "ns",
            "range": "± 36.063883990911876"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21260.547382899695,
            "unit": "ns",
            "range": "± 164.64953627991554"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15862.447476704916,
            "unit": "ns",
            "range": "± 6.069058300667018"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15458.458537801107,
            "unit": "ns",
            "range": "± 178.09560602779536"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 127569.15997314453,
            "unit": "ns",
            "range": "± 198.33494710834617"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2c2261c72948136f6af9dfdfefc86ebb02c686a",
          "message": "CustomCommandManager + CustomCommandManagerSession to use auto-expandable maps (#848)\n\n* wip\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* Comments + tests\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* fix\r\n\r\n* format\r\n\r\n* Adding a non-concurrent ExpandableMap\r\n\r\n* small fix\r\n\r\n* Switching to SingleWriterMultiReaderLock\r\n\r\n* Some thread-safety related fixes\r\n\r\n* Added some async tests for command registration\r\n\r\n* small bugfixes\r\n\r\n* format",
          "timestamp": "2024-12-12T18:49:23-08:00",
          "tree_id": "27ea42b0a4d6b834a7f450d12100d29e8b94f077",
          "url": "https://github.com/microsoft/garnet/commit/f2c2261c72948136f6af9dfdfefc86ebb02c686a"
        },
        "date": 1734058472965,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16944.799931844074,
            "unit": "ns",
            "range": "± 122.48985141932097"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16838.67613728841,
            "unit": "ns",
            "range": "± 24.29225523973045"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14841.887940724691,
            "unit": "ns",
            "range": "± 62.19284978329759"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14247.270753479004,
            "unit": "ns",
            "range": "± 81.92603099479665"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 120603.15407307942,
            "unit": "ns",
            "range": "± 208.71133110144558"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20691.87039620536,
            "unit": "ns",
            "range": "± 11.527939390667132"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21184.393310546875,
            "unit": "ns",
            "range": "± 49.83025876718326"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16603.455688476562,
            "unit": "ns",
            "range": "± 105.00677424194942"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15287.142420450846,
            "unit": "ns",
            "range": "± 93.5672910813463"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 130838.31581333706,
            "unit": "ns",
            "range": "± 1364.9767259649486"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "kmontrose@microsoft.com",
            "name": "kevin-montrose",
            "username": "kevin-montrose"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa004d372a23731e3e5f0fa65d701c4a4d62b381",
          "message": "Fixes for SCRIPT commands and behavior (#860)\n\n* fix FastBasicRespCommandsInfo construction and lookup; which incidentally fixes EVALSHA when scripting is enabled\r\n\r\n* fix MultiKeySlotVerify - keys past the second were not correctly visited\r\n\r\n* break SCRIPT into appropriate subcommands; update command info; fix SCRIPT EXISTS to match Redis behavior; tests for SCRIPT|* ACLs; DRY up SCRIPT command implementations\r\n\r\n* test script failures, match Redis error messages\r\n\r\n* remove byte[] allocations from evalsha path (amongst others); should get the Lua overhead down to just the NLua + locking stuff\r\n\r\n* add test for multi-hash version of SCRIPT|EXIST; fix bug where hash casing matters (matching Redis by defaulting to upper case hashes values); remove debug code\r\n\r\n* fix formatting\r\n\r\n* uppercase some test cases I missed\r\n\r\n* add EVALSHA to cluster slot tests\r\n\r\n* restore lower case hashes; erroneously thought Redis used upper case\r\n\r\n* add ScriptOperations to benchmark this change\r\n\r\n* formatting fixes\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-12T23:23:53-08:00",
          "tree_id": "8c0664ade6b6572a8af295961a2d61a846b60756",
          "url": "https://github.com/microsoft/garnet/commit/aa004d372a23731e3e5f0fa65d701c4a4d62b381"
        },
        "date": 1734074953034,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16407.50286610921,
            "unit": "ns",
            "range": "± 29.92369584266374"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16739.529428335336,
            "unit": "ns",
            "range": "± 46.300337207686624"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15532.273429870605,
            "unit": "ns",
            "range": "± 25.35993584038347"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14632.91545691857,
            "unit": "ns",
            "range": "± 6.025039048343116"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 121750.34071044922,
            "unit": "ns",
            "range": "± 603.0041512763391"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20504.51822603666,
            "unit": "ns",
            "range": "± 83.80690068695408"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20210.15997924805,
            "unit": "ns",
            "range": "± 147.55082802846027"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16571.953591918944,
            "unit": "ns",
            "range": "± 159.4388475651815"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15983.763723754882,
            "unit": "ns",
            "range": "± 96.90389713030187"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 129383.9963030134,
            "unit": "ns",
            "range": "± 1498.8845427958076"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca0222960f0145302eb1fc9896f680f9aff5a4d1",
          "message": "Streaming snapshot checkpoint in Tsavorite (#824)\n\n* Mild refactor in preparation\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* fix tests to not cover steaming snapshot as it is not a traditional checkpoint\r\n\r\n* add unit test\r\n\r\n* fix tests\r\n\r\n* fix test\r\n\r\n* updates\r\n\r\n* Support maxAddress during liveness checks\r\n\r\n* improvements to api\r\n\r\n* Add SetVersion API\r\n\r\n* more checks\r\n\r\n* add comment\r\n\r\n* add comments",
          "timestamp": "2024-12-13T10:25:49-08:00",
          "tree_id": "917be4f308af8da9ec7782faa5069a09f2b873c5",
          "url": "https://github.com/microsoft/garnet/commit/ca0222960f0145302eb1fc9896f680f9aff5a4d1"
        },
        "date": 1734114653366,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16769.494192270133,
            "unit": "ns",
            "range": "± 62.744702631847126"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15988.764310709636,
            "unit": "ns",
            "range": "± 188.43321746216319"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14808.08096430852,
            "unit": "ns",
            "range": "± 21.483312530201875"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13831.978903198242,
            "unit": "ns",
            "range": "± 77.52777236083321"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 119696.9816800631,
            "unit": "ns",
            "range": "± 763.8878430558335"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20705.959853108725,
            "unit": "ns",
            "range": "± 136.3618951251602"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20968.045494666465,
            "unit": "ns",
            "range": "± 27.84878861527714"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16189.846918741861,
            "unit": "ns",
            "range": "± 113.50961507396359"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15899.188659667969,
            "unit": "ns",
            "range": "± 54.952434700723636"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 128040.72814941406,
            "unit": "ns",
            "range": "± 323.3352013302896"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f679b0b683e4e94fa2a3ebb2689708ec2efee74",
          "message": "Added BDN for all hash commands (#879)\n\n* Added BDN for all hash commands\r\n\r\n* Moved BDN of hash set to separate class",
          "timestamp": "2024-12-13T12:50:11-08:00",
          "tree_id": "66c04dc8b338f40aeb360419fc1953dcc219abbc",
          "url": "https://github.com/microsoft/garnet/commit/3f679b0b683e4e94fa2a3ebb2689708ec2efee74"
        },
        "date": 1734123320668,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 17518.009663173132,
            "unit": "ns",
            "range": "± 151.89700584131322"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16165.070200602213,
            "unit": "ns",
            "range": "± 20.696259270013446"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15350.534461466472,
            "unit": "ns",
            "range": "± 64.75428282162811"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14171.149561564127,
            "unit": "ns",
            "range": "± 67.10764193762246"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 121339.9064679827,
            "unit": "ns",
            "range": "± 413.3523554774131"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20273.38935546875,
            "unit": "ns",
            "range": "± 143.53534670732583"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21343.456619262695,
            "unit": "ns",
            "range": "± 196.25661349489067"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16419.566301472983,
            "unit": "ns",
            "range": "± 105.85009600211696"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15599.645420954777,
            "unit": "ns",
            "range": "± 22.160783488911985"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 130269.24496694711,
            "unit": "ns",
            "range": "± 566.5419846429032"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "178dc21b572263c4421e2602e41cc243cb94f507",
          "message": "Fix writing output for scan (#880)\n\n* Writing output for scan was not handling output buffer (dcurr, dend) correctly. Also, it was not handling large keys correctly.\r\n\r\n* update version",
          "timestamp": "2024-12-13T13:55:49-08:00",
          "tree_id": "1966c990a96fa84a42747ad14ce5480535196e57",
          "url": "https://github.com/microsoft/garnet/commit/178dc21b572263c4421e2602e41cc243cb94f507"
        },
        "date": 1734127248926,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16742.541959322414,
            "unit": "ns",
            "range": "± 34.632927353400746"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16468.77895711263,
            "unit": "ns",
            "range": "± 156.38504876886972"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15272.544236403246,
            "unit": "ns",
            "range": "± 12.778743729109445"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14433.208396911621,
            "unit": "ns",
            "range": "± 56.02103189748767"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 119912.2297688802,
            "unit": "ns",
            "range": "± 1019.2135657456103"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21116.802645874024,
            "unit": "ns",
            "range": "± 121.99272152419775"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20831.26954298753,
            "unit": "ns",
            "range": "± 47.52271359989486"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15845.822860717773,
            "unit": "ns",
            "range": "± 14.767308665327914"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15905.49851735433,
            "unit": "ns",
            "range": "± 14.879949965009972"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 131849.07749586838,
            "unit": "ns",
            "range": "± 752.4401264012379"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1ce0dafecaba15335e8e0767a6eeb441b72e56c",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#862)\n\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T14:08:03-08:00",
          "tree_id": "b2aa23d9235558527754332fab728fa03d60007b",
          "url": "https://github.com/microsoft/garnet/commit/f1ce0dafecaba15335e8e0767a6eeb441b72e56c"
        },
        "date": 1734127987943,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16560.478346604566,
            "unit": "ns",
            "range": "± 26.759814869379234"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15656.204596886268,
            "unit": "ns",
            "range": "± 26.246534489830985"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14699.5243737357,
            "unit": "ns",
            "range": "± 47.93090324170255"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14472.590346272786,
            "unit": "ns",
            "range": "± 69.62856975266585"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 120724.36639404297,
            "unit": "ns",
            "range": "± 849.3161950329622"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20900.177844238282,
            "unit": "ns",
            "range": "± 217.26485929957107"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20812.746927897137,
            "unit": "ns",
            "range": "± 25.291746986929244"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16286.266728327824,
            "unit": "ns",
            "range": "± 15.866544114047736"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15609.12010544997,
            "unit": "ns",
            "range": "± 63.28971166418363"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 126999.07017299107,
            "unit": "ns",
            "range": "± 244.64970193821728"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132246719,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 17212.375474196215,
            "unit": "ns",
            "range": "± 49.071411174230235"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16134.582185872396,
            "unit": "ns",
            "range": "± 112.70600651627382"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14882.68755558559,
            "unit": "ns",
            "range": "± 62.80487549789008"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14790.627426147461,
            "unit": "ns",
            "range": "± 88.90035109052052"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 119044.85867745536,
            "unit": "ns",
            "range": "± 616.2123793128663"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21460.63889639718,
            "unit": "ns",
            "range": "± 65.42098123892836"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20309.519933064777,
            "unit": "ns",
            "range": "± 19.956731584647493"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16365.836064656576,
            "unit": "ns",
            "range": "± 9.359226229214045"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15263.848024808443,
            "unit": "ns",
            "range": "± 13.09868012922954"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 127786.15004185268,
            "unit": "ns",
            "range": "± 237.20222276503486"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734133916453,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16781.729108683267,
            "unit": "ns",
            "range": "± 140.7997647568151"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16605.741839090984,
            "unit": "ns",
            "range": "± 22.381729225434356"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15013.822847638812,
            "unit": "ns",
            "range": "± 44.16848960805305"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14474.200415978064,
            "unit": "ns",
            "range": "± 34.08233617331236"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 119646.03541666667,
            "unit": "ns",
            "range": "± 623.0336263921758"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20627.844236101424,
            "unit": "ns",
            "range": "± 121.32577014196966"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20780.62504272461,
            "unit": "ns",
            "range": "± 153.19167528971047"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16024.565704345703,
            "unit": "ns",
            "range": "± 11.666675769452091"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15352.878490193685,
            "unit": "ns",
            "range": "± 84.20212686854377"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 137206.50200007512,
            "unit": "ns",
            "range": "± 230.49766721462964"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377185586,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16605.929480919473,
            "unit": "ns",
            "range": "± 16.305168203251316"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15985.116157023112,
            "unit": "ns",
            "range": "± 127.60185154089892"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14689.919949122837,
            "unit": "ns",
            "range": "± 36.259172505522805"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14283.551898956299,
            "unit": "ns",
            "range": "± 22.55934082471965"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 118415.3323538644,
            "unit": "ns",
            "range": "± 373.58586630269156"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21087.14201237605,
            "unit": "ns",
            "range": "± 28.133333633652278"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21388.959998575847,
            "unit": "ns",
            "range": "± 171.33631175792044"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16030.088145329402,
            "unit": "ns",
            "range": "± 44.244003135275875"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15974.379475184849,
            "unit": "ns",
            "range": "± 138.4999873013501"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 126798.00336162861,
            "unit": "ns",
            "range": "± 573.6263606950937"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392650325,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16872.70101216634,
            "unit": "ns",
            "range": "± 146.2341152529107"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16452.92595214844,
            "unit": "ns",
            "range": "± 223.62476503505977"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14973.760173543295,
            "unit": "ns",
            "range": "± 74.00951169011351"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14166.524924645057,
            "unit": "ns",
            "range": "± 34.720015411717185"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 119941.42650428184,
            "unit": "ns",
            "range": "± 343.99553098414293"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20840.1876173753,
            "unit": "ns",
            "range": "± 90.6291240251401"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21325.535894775392,
            "unit": "ns",
            "range": "± 128.8974175241454"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15916.391396155725,
            "unit": "ns",
            "range": "± 25.901550651369107"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15487.00511271159,
            "unit": "ns",
            "range": "± 171.1072178400078"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 130180.44980875652,
            "unit": "ns",
            "range": "± 162.40992576525693"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483575756,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16547.024384562174,
            "unit": "ns",
            "range": "± 150.8776653604218"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16314.112971379207,
            "unit": "ns",
            "range": "± 68.89687489975864"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14630.46044667562,
            "unit": "ns",
            "range": "± 33.60814247043058"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14318.008284348707,
            "unit": "ns",
            "range": "± 42.71443140992546"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 120004.23540039062,
            "unit": "ns",
            "range": "± 755.5270413318493"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20699.46054513114,
            "unit": "ns",
            "range": "± 153.54949151509862"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20716.386010976938,
            "unit": "ns",
            "range": "± 47.909182343174464"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16608.672450764974,
            "unit": "ns",
            "range": "± 132.68481879285326"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15133.590818132672,
            "unit": "ns",
            "range": "± 29.26239209577047"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 131319.67342122397,
            "unit": "ns",
            "range": "± 284.47064851784734"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559427705,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16911.229353684645,
            "unit": "ns",
            "range": "± 65.61043718240043"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16179.52149251302,
            "unit": "ns",
            "range": "± 198.7148259137264"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14781.71578509991,
            "unit": "ns",
            "range": "± 46.51709207399045"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14360.726110839843,
            "unit": "ns",
            "range": "± 78.64040705844717"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 119742.56652832031,
            "unit": "ns",
            "range": "± 151.36944622211107"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20380.407078334265,
            "unit": "ns",
            "range": "± 193.98580180039684"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20578.648984273274,
            "unit": "ns",
            "range": "± 26.402121682798178"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16235.897702898297,
            "unit": "ns",
            "range": "± 122.12912861617849"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15142.489216395787,
            "unit": "ns",
            "range": "± 123.75687672573167"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 127168.53301532452,
            "unit": "ns",
            "range": "± 214.2935895604014"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578718049,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16981.993489583332,
            "unit": "ns",
            "range": "± 8.811510519455153"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15868.634727478027,
            "unit": "ns",
            "range": "± 18.284657659844964"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14842.070114135742,
            "unit": "ns",
            "range": "± 47.83316723275054"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14002.199516883264,
            "unit": "ns",
            "range": "± 164.36047542080576"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 122828.72709437778,
            "unit": "ns",
            "range": "± 433.26234790758315"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20522.56444658552,
            "unit": "ns",
            "range": "± 174.8231425292312"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20519.73944600423,
            "unit": "ns",
            "range": "± 35.72937521335367"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15822.02131652832,
            "unit": "ns",
            "range": "± 132.53048039639805"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15896.850143432617,
            "unit": "ns",
            "range": "± 55.08292664869757"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 128450.3900052584,
            "unit": "ns",
            "range": "± 205.33743408582404"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734595919020,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16760.720474243164,
            "unit": "ns",
            "range": "± 29.31236769301615"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16227.744069417318,
            "unit": "ns",
            "range": "± 136.67423048867798"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15334.997385660807,
            "unit": "ns",
            "range": "± 20.926144302646655"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14377.713526407877,
            "unit": "ns",
            "range": "± 104.07442244299989"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 120365.36368233817,
            "unit": "ns",
            "range": "± 624.2870339744046"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21061.43909403483,
            "unit": "ns",
            "range": "± 132.33875915313988"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 19969.297645568848,
            "unit": "ns",
            "range": "± 71.65957857432834"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16112.99121348063,
            "unit": "ns",
            "range": "± 14.468785892721305"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14971.228721618652,
            "unit": "ns",
            "range": "± 58.03588962492308"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 128688.86350661058,
            "unit": "ns",
            "range": "± 336.3014519857035"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643348672,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16597.98286183675,
            "unit": "ns",
            "range": "± 13.22513311369709"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16883.369447980607,
            "unit": "ns",
            "range": "± 106.38520647436536"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15154.273329514723,
            "unit": "ns",
            "range": "± 37.49625837286471"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14916.635836791993,
            "unit": "ns",
            "range": "± 53.83204757187259"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 121335.20662278395,
            "unit": "ns",
            "range": "± 127.35117049952692"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20963.629544939315,
            "unit": "ns",
            "range": "± 88.27896967107353"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20512.866662597655,
            "unit": "ns",
            "range": "± 145.34485678384613"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16221.934904988606,
            "unit": "ns",
            "range": "± 92.92136411419004"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15133.805272420248,
            "unit": "ns",
            "range": "± 68.66676720121838"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 127534.90684291294,
            "unit": "ns",
            "range": "± 149.83966559360815"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647633402,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16471.383778889973,
            "unit": "ns",
            "range": "± 10.1472187971796"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 17207.118250528973,
            "unit": "ns",
            "range": "± 13.196561260782968"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14874.682563781738,
            "unit": "ns",
            "range": "± 44.16868668675971"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13898.784586588541,
            "unit": "ns",
            "range": "± 26.207615782417363"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 118643.1611328125,
            "unit": "ns",
            "range": "± 821.118318624566"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20288.862548828125,
            "unit": "ns",
            "range": "± 23.211854614890754"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20633.27382405599,
            "unit": "ns",
            "range": "± 51.55021645961179"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16071.262865339007,
            "unit": "ns",
            "range": "± 119.52808953640121"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15927.458177839007,
            "unit": "ns",
            "range": "± 105.74991291348005"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 130262.26344807942,
            "unit": "ns",
            "range": "± 92.51977027175101"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652422327,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16515.37856401716,
            "unit": "ns",
            "range": "± 106.1915380702741"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16353.40552775065,
            "unit": "ns",
            "range": "± 17.129630989759693"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 16040.236328125,
            "unit": "ns",
            "range": "± 77.76746218948932"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14177.65805053711,
            "unit": "ns",
            "range": "± 70.4186531535941"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 121313.79031808036,
            "unit": "ns",
            "range": "± 362.7647481626232"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21020.341227213543,
            "unit": "ns",
            "range": "± 27.498770295628695"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20717.494986900918,
            "unit": "ns",
            "range": "± 91.0068351767435"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16632.62521144322,
            "unit": "ns",
            "range": "± 92.62583724958974"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15201.197201538085,
            "unit": "ns",
            "range": "± 114.49765208374279"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 128148.62432861328,
            "unit": "ns",
            "range": "± 336.2650250582309"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747062316,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 17206.584251990684,
            "unit": "ns",
            "range": "± 19.545380995508506"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16284.90993323693,
            "unit": "ns",
            "range": "± 16.93324031899332"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15150.391157967704,
            "unit": "ns",
            "range": "± 41.331509064079114"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14005.72565612793,
            "unit": "ns",
            "range": "± 80.74082954942847"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 118928.6005859375,
            "unit": "ns",
            "range": "± 880.4541367800172"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20715.000091552734,
            "unit": "ns",
            "range": "± 25.489042994329722"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20619.434858194985,
            "unit": "ns",
            "range": "± 164.39431230526225"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16971.02820914132,
            "unit": "ns",
            "range": "± 11.366521386874817"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15819.800892421177,
            "unit": "ns",
            "range": "± 143.91854720540704"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 129603.04392787388,
            "unit": "ns",
            "range": "± 160.86452775916038"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906700878,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16834.534377034506,
            "unit": "ns",
            "range": "± 175.24077399981317"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16135.413330078125,
            "unit": "ns",
            "range": "± 159.97772001261148"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15183.967723301479,
            "unit": "ns",
            "range": "± 126.87273574243953"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13938.693860880534,
            "unit": "ns",
            "range": "± 101.26954620558611"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 121672.96203613281,
            "unit": "ns",
            "range": "± 665.2378398162966"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20809.206127460187,
            "unit": "ns",
            "range": "± 20.928166455138086"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20190.3267124721,
            "unit": "ns",
            "range": "± 98.73769001066688"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16634.938774695762,
            "unit": "ns",
            "range": "± 43.90574333461528"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15226.766726902553,
            "unit": "ns",
            "range": "± 83.11990808731593"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 132377.97190504806,
            "unit": "ns",
            "range": "± 800.7855689193774"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407585149,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16939.4449332101,
            "unit": "ns",
            "range": "± 116.2267760577474"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16556.371647426062,
            "unit": "ns",
            "range": "± 34.56790609053031"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14777.222277832032,
            "unit": "ns",
            "range": "± 55.03804500803937"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14114.253145345052,
            "unit": "ns",
            "range": "± 87.73979755409196"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 118369.69755045573,
            "unit": "ns",
            "range": "± 178.9897613235959"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20649.13388671875,
            "unit": "ns",
            "range": "± 179.6491878501073"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21077.920660400392,
            "unit": "ns",
            "range": "± 225.76998499689427"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15982.59142596905,
            "unit": "ns",
            "range": "± 13.125999714304506"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15667.216092427572,
            "unit": "ns",
            "range": "± 14.951082711075147"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 128675.09347098214,
            "unit": "ns",
            "range": "± 205.7324957464413"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187245234,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16903.28437601725,
            "unit": "ns",
            "range": "± 111.0145777262873"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15903.846288045248,
            "unit": "ns",
            "range": "± 27.791722809782385"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15335.571546282086,
            "unit": "ns",
            "range": "± 57.159077715665255"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 15113.65703531901,
            "unit": "ns",
            "range": "± 61.967539973462024"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 124006.78120304988,
            "unit": "ns",
            "range": "± 264.360993897533"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20847.3927541097,
            "unit": "ns",
            "range": "± 86.34348366590426"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 19924.587301400992,
            "unit": "ns",
            "range": "± 29.82004049661288"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16797.808791097006,
            "unit": "ns",
            "range": "± 110.4233796081349"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15919.135765075684,
            "unit": "ns",
            "range": "± 20.552497700888345"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 137950.39028695913,
            "unit": "ns",
            "range": "± 648.5421800450706"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283038340,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16880.86590830485,
            "unit": "ns",
            "range": "± 25.128834464805056"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16235.997380574545,
            "unit": "ns",
            "range": "± 111.40544254061432"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15102.67919108073,
            "unit": "ns",
            "range": "± 89.11559345874065"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14423.123237101237,
            "unit": "ns",
            "range": "± 53.391500703685345"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 119307.14828927176,
            "unit": "ns",
            "range": "± 698.875292200217"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20677.70260823568,
            "unit": "ns",
            "range": "± 103.8443628228028"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21136.81154785156,
            "unit": "ns",
            "range": "± 112.42499447529275"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15963.35028545673,
            "unit": "ns",
            "range": "± 21.26665136129115"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15581.467956542969,
            "unit": "ns",
            "range": "± 82.28417788342774"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 133096.60874430338,
            "unit": "ns",
            "range": "± 109.71909443145242"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376099147,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16815.508619035994,
            "unit": "ns",
            "range": "± 145.31641962554713"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16715.466636657715,
            "unit": "ns",
            "range": "± 27.88427243313116"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15524.552764892578,
            "unit": "ns",
            "range": "± 14.184621239291555"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14587.54783935547,
            "unit": "ns",
            "range": "± 85.89320803039502"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 121671.36925330528,
            "unit": "ns",
            "range": "± 559.9260305984826"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20777.597290039062,
            "unit": "ns",
            "range": "± 98.84581764225649"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21014.107328626844,
            "unit": "ns",
            "range": "± 430.1466560327672"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16194.799463125375,
            "unit": "ns",
            "range": "± 26.23046707152896"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15685.056189903846,
            "unit": "ns",
            "range": "± 14.791433793990798"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 138797.07088216147,
            "unit": "ns",
            "range": "± 368.5519152953795"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461839879,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16801.793430873327,
            "unit": "ns",
            "range": "± 37.5967099379118"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15882.775645329402,
            "unit": "ns",
            "range": "± 21.10184744599849"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14817.652912684849,
            "unit": "ns",
            "range": "± 26.70772738723919"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14900.371911855844,
            "unit": "ns",
            "range": "± 6.075686811769376"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 123878.53632463727,
            "unit": "ns",
            "range": "± 752.9090906935244"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20765.974658672625,
            "unit": "ns",
            "range": "± 47.86181641440564"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21597.03369140625,
            "unit": "ns",
            "range": "± 175.1798065441131"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16250.566017659505,
            "unit": "ns",
            "range": "± 149.61340182082915"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15244.488129679363,
            "unit": "ns",
            "range": "± 59.23891715928287"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 132277.94830729166,
            "unit": "ns",
            "range": "± 811.4843908665911"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479647636,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16789.449455769856,
            "unit": "ns",
            "range": "± 165.49903699611693"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16941.380462646484,
            "unit": "ns",
            "range": "± 13.931601208723276"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15312.317665608723,
            "unit": "ns",
            "range": "± 82.56299396620052"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14564.139923095703,
            "unit": "ns",
            "range": "± 37.03654047762628"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 123241.64950796273,
            "unit": "ns",
            "range": "± 209.3944078654003"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20364.73492079515,
            "unit": "ns",
            "range": "± 41.95444553319106"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20417.49430847168,
            "unit": "ns",
            "range": "± 193.05039965931005"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16245.493721516927,
            "unit": "ns",
            "range": "± 109.29384103660698"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15181.177455647787,
            "unit": "ns",
            "range": "± 84.08729013485916"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 131169.17474834734,
            "unit": "ns",
            "range": "± 289.020978468712"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553464245,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16824.685139973957,
            "unit": "ns",
            "range": "± 213.1636864388078"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16014.599192301432,
            "unit": "ns",
            "range": "± 25.230817326211856"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14838.086338806152,
            "unit": "ns",
            "range": "± 49.53996057973956"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14479.920202128093,
            "unit": "ns",
            "range": "± 66.17487096379162"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 122365.9323404948,
            "unit": "ns",
            "range": "± 511.2662357580884"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21091.14723968506,
            "unit": "ns",
            "range": "± 23.067985284949472"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21952.880895996095,
            "unit": "ns",
            "range": "± 153.36017643992957"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16214.151289876301,
            "unit": "ns",
            "range": "± 107.70548909140541"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15442.614155695988,
            "unit": "ns",
            "range": "± 15.816233513269367"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 130185.0015963041,
            "unit": "ns",
            "range": "± 131.0482473764959"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655709630,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16850.124631754556,
            "unit": "ns",
            "range": "± 146.87289363446516"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16443.607696533203,
            "unit": "ns",
            "range": "± 110.4228903429741"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15061.452379499164,
            "unit": "ns",
            "range": "± 58.745680832550406"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14384.41560160319,
            "unit": "ns",
            "range": "± 63.80499948236279"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 120282.52443440755,
            "unit": "ns",
            "range": "± 456.7750470421519"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20923.79881286621,
            "unit": "ns",
            "range": "± 102.23051219173266"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20892.575848897297,
            "unit": "ns",
            "range": "± 18.071571547425417"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16614.615567525227,
            "unit": "ns",
            "range": "± 12.134490308825516"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15229.967812093098,
            "unit": "ns",
            "range": "± 110.0656885643645"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 131842.06953938803,
            "unit": "ns",
            "range": "± 371.6279932928946"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253916404,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16821.132551926832,
            "unit": "ns",
            "range": "± 43.75827266980704"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 17607.87616475423,
            "unit": "ns",
            "range": "± 30.160901816677484"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15887.843614850726,
            "unit": "ns",
            "range": "± 29.440428060197295"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14804.701937748836,
            "unit": "ns",
            "range": "± 7.8608697453266885"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 122214.83342488606,
            "unit": "ns",
            "range": "± 119.46262797310736"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20313.008761088055,
            "unit": "ns",
            "range": "± 54.843316123414766"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20712.74208186223,
            "unit": "ns",
            "range": "± 14.847598856635766"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16570.101645333427,
            "unit": "ns",
            "range": "± 87.21657120064931"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15236.339617411295,
            "unit": "ns",
            "range": "± 31.063192606630615"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 133999.99583217077,
            "unit": "ns",
            "range": "± 206.41314662154295"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788566878,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16800.23285929362,
            "unit": "ns",
            "range": "± 29.073005188357826"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16604.62512817383,
            "unit": "ns",
            "range": "± 158.25245054147496"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15005.372981262208,
            "unit": "ns",
            "range": "± 48.375640773127394"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14180.994767252605,
            "unit": "ns",
            "range": "± 59.265940077352504"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 124655.19941057477,
            "unit": "ns",
            "range": "± 299.9770868552587"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20451.67980702718,
            "unit": "ns",
            "range": "± 26.303922056448055"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21087.881110636394,
            "unit": "ns",
            "range": "± 113.35376011547557"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16442.938757760185,
            "unit": "ns",
            "range": "± 86.76398470547454"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14943.42420414516,
            "unit": "ns",
            "range": "± 47.41582203948993"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 135438.9047200521,
            "unit": "ns",
            "range": "± 999.8055125833467"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050306865,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 17473.690051269532,
            "unit": "ns",
            "range": "± 115.8069790678873"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 16336.914698282877,
            "unit": "ns",
            "range": "± 14.048630987037587"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15941.535030110677,
            "unit": "ns",
            "range": "± 121.291687955623"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 15101.11975479126,
            "unit": "ns",
            "range": "± 10.169220693139412"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 119492.732421875,
            "unit": "ns",
            "range": "± 491.05134830693265"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20889.82822418213,
            "unit": "ns",
            "range": "± 19.526774880642826"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 22477.226291910807,
            "unit": "ns",
            "range": "± 133.36696650226526"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16301.864059448242,
            "unit": "ns",
            "range": "± 97.96019285509041"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15372.179794311523,
            "unit": "ns",
            "range": "± 24.32685457860409"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 127797.11628069196,
            "unit": "ns",
            "range": "± 680.9450748299055"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368820216,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16982.512945992607,
            "unit": "ns",
            "range": "± 72.10925275785101"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15969.969357808432,
            "unit": "ns",
            "range": "± 28.56165709185006"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15180.627231852213,
            "unit": "ns",
            "range": "± 105.11756552641384"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14778.34071858724,
            "unit": "ns",
            "range": "± 65.03755794380683"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 119282.29889787946,
            "unit": "ns",
            "range": "± 636.816866673156"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21339.801629202706,
            "unit": "ns",
            "range": "± 21.998440480885534"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 21368.805809529622,
            "unit": "ns",
            "range": "± 117.87790901202925"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16440.03200639997,
            "unit": "ns",
            "range": "± 86.0215727541031"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15642.302161583533,
            "unit": "ns",
            "range": "± 62.72035597520181"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 130683.00163386419,
            "unit": "ns",
            "range": "± 228.37056690212222"
          }
        ]
      }
    ],
    "Lua.LuaScripts (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd766248719caf2817592e988a5e67edc22b511b",
          "message": "Implementing BDN Perf pipeline (#758)\n\n* The CI scripts, YML and config files to check perf using BDN benchmarking.  Also, a fix in ClusterBench for and renamed Lua Runner benchmarking\r\n\r\n* Cleaned up the debug message and updated couple expected values\r\n\r\n* Updated SAddRem - windows - to 130 from 118.  Also removed unncesssary build statement in YML\r\n\r\n* Proof of concept for Performance run on ADO using BDN\r\n\r\n* Comment out number of Cores check so can try proof of concept on ADO perf machines\r\n\r\n* Getting close to having BDN working\r\n\r\n* Fixed RespLuaStress\r\n\r\n* Fixed issue in Lua Runner Stress\r\n\r\n* Updated config values, set charting and commit comment as separate tasks\r\n\r\n* Updated config values\r\n\r\n* Minor change to YML (remove pull requests) and updated LuaRunner config value\r\n\r\n* One more config value fix\r\n\r\n* Added a task to do the push\r\n\r\n* Putting back to push chart in the chart task and not a separate one\r\n\r\n* Moved the permissions to full workflow\r\n\r\n* Just minor to add commits\r\n\r\n* Adding actions: write permit since actions default to read only\r\n\r\n* Set up the commit comment for BDN as well as summary to show current vs previous BDN perf numbers\r\n\r\n* A few fixes\r\n\r\n* Updated BDN perf YML, config files and ps1 script\r\n\r\n* Versioning issue with BDN test files, fixed now\r\n\r\n* Bump threshold to 35% (135%) to trigger perf failure\r\n\r\n* Set to Linux only to reduce number of consectutive tests which caused push collisions with GitHub\r\n\r\n* Just Windows only test run\r\n\r\n* Putting it back to both OS for the tests\r\n\r\n* Set threshhold to 50% (150%) as seeing BDN ran twice on same code sometimes is in 40%+ range of difference.\r\n\r\n* Big change where using continuousbenchmark branch for all data for continuous benchmarking and also changed to where script is only checking allocated values and let github-action-benchmark compare mean values\r\n\r\n* Updated ClusterBench to get main changes\r\n\r\n* Fix issue with Cluster BDN is not able to access folder so setting to tmp which does have access\r\n\r\n* Bumping threshold to 50% (150%) as mean value in RespParseStress can vary into the 40% from run to run.\r\n\r\n* First update\r\n\r\n* Hiding the Gen0 column for Lua benchmark\r\n\r\n* Updated BDN test infrastructure to match the new BDN org.\r\n\r\n* Fix bug in ObjectOperations\r\n\r\n* Set max items on chart to 50 ... can modify later if want\r\n\r\n* Added the run on push to main\r\n\r\n* Put Performance Pipeline back\r\n\r\n* Fixed the default case when no parameters sent to ps1\r\n\r\n* Cleaned up config files:\r\nhave shorter names for values\r\nnot have configuration or framework (moved to ps1 file)\r\nnot have windows / linux differnce in expected\r\nMoved acceptable allocated range to script\r\n\r\nmodified the script:\r\nto only load values for the specific test instead of looking for all values\r\nchanges to match the changes in config (shorter names, etc)\r\n\r\n* Big update to where moved to a single config file and the ps1 file does not need to be updated when new BDNs are added.\r\n\r\n* Added workflow_dispatch: to deploy website yml so we can manually deploy website if we want\r\n\r\n* Updated alert-threshold from 150% to 140%. If too many false positives we can raise it back. Also, removed darrenge from the alert CC line as no need for that.\r\n\r\n* Removed the commit comment / comparison to previous commit task. Still will get  summary data in the specific workflow run and still uploads data to charts (when pushing to main).\r\n\r\n* Minor update - comments only",
          "timestamp": "2024-12-11T11:29:32-08:00",
          "tree_id": "a262ac843488b7afb61ad91dfb2a488917243391",
          "url": "https://github.com/microsoft/garnet/commit/dd766248719caf2817592e988a5e67edc22b511b"
        },
        "date": 1733945593350,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 118.94960220043475,
            "unit": "ns",
            "range": "± 0.5506268557624937"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 196.96039472307478,
            "unit": "ns",
            "range": "± 1.847880626516076"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 338.9589309692383,
            "unit": "ns",
            "range": "± 1.3672840053709572"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2177.157504741962,
            "unit": "ns",
            "range": "± 5.719918682476675"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aabc0bb831f2313bce41c43c29c9c2b0e434cb00",
          "message": "handle uninitialized epoch value merge (#874)\n\n* handle uninitialized epoch value merge\r\n\r\n* release 1.0.47",
          "timestamp": "2024-12-11T14:03:36-08:00",
          "tree_id": "ca83e06a72e78b6bab3872148b9e3eb5cb476269",
          "url": "https://github.com/microsoft/garnet/commit/aabc0bb831f2313bce41c43c29c9c2b0e434cb00"
        },
        "date": 1733954952114,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 118.7998129771306,
            "unit": "ns",
            "range": "± 0.21908129056803408"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 197.72530873616537,
            "unit": "ns",
            "range": "± 0.7294867494106906"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 348.9277805600847,
            "unit": "ns",
            "range": "± 1.383211976520477"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2300.2125040690103,
            "unit": "ns",
            "range": "± 7.630543276907122"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf1d4b66c442284f95c8db51e57274ba07316561",
          "message": "Bump nanoid from 3.3.7 to 3.3.8 in /website (#873)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: darrenge <darrenge@microsoft.com>",
          "timestamp": "2024-12-11T15:37:40-08:00",
          "tree_id": "1d3dbe6f308895a822d913fd3960c803796cb264",
          "url": "https://github.com/microsoft/garnet/commit/cf1d4b66c442284f95c8db51e57274ba07316561"
        },
        "date": 1733960574101,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 119.14459807532174,
            "unit": "ns",
            "range": "± 0.3660769381254266"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 199.2306879588536,
            "unit": "ns",
            "range": "± 0.5518417003601191"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 375.7016086578369,
            "unit": "ns",
            "range": "± 1.6975957132018156"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2232.765680948893,
            "unit": "ns",
            "range": "± 5.105933284802233"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d4c7448569063ea786802a0580acf465108e037",
          "message": "Add ReadOnly Support for IDevice (#870)\n\n* add readOnly flag in streamProvider for LocalStorageDevice\r\n\r\n* add linux readOnly flag for managed device\r\n\r\n* add explicit readOnly assignment for parameter",
          "timestamp": "2024-12-12T13:03:41-08:00",
          "tree_id": "3d591691e9ac0cfb714d98096a0580abab554b23",
          "url": "https://github.com/microsoft/garnet/commit/0d4c7448569063ea786802a0580acf465108e037"
        },
        "date": 1734037659462,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 119.03251684629001,
            "unit": "ns",
            "range": "± 0.34285699310425927"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 195.39373837984525,
            "unit": "ns",
            "range": "± 0.3169037884462412"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 345.68349633898055,
            "unit": "ns",
            "range": "± 1.7389724438888132"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2297.857460608849,
            "unit": "ns",
            "range": "± 17.781840282795734"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2c2261c72948136f6af9dfdfefc86ebb02c686a",
          "message": "CustomCommandManager + CustomCommandManagerSession to use auto-expandable maps (#848)\n\n* wip\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* Comments + tests\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* fix\r\n\r\n* format\r\n\r\n* Adding a non-concurrent ExpandableMap\r\n\r\n* small fix\r\n\r\n* Switching to SingleWriterMultiReaderLock\r\n\r\n* Some thread-safety related fixes\r\n\r\n* Added some async tests for command registration\r\n\r\n* small bugfixes\r\n\r\n* format",
          "timestamp": "2024-12-12T18:49:23-08:00",
          "tree_id": "27ea42b0a4d6b834a7f450d12100d29e8b94f077",
          "url": "https://github.com/microsoft/garnet/commit/f2c2261c72948136f6af9dfdfefc86ebb02c686a"
        },
        "date": 1734058427158,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 119.74014895302909,
            "unit": "ns",
            "range": "± 0.45041522118550353"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 197.5832462310791,
            "unit": "ns",
            "range": "± 1.0200458228299951"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 380.48488934834796,
            "unit": "ns",
            "range": "± 1.506920265920848"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2260.3265322171724,
            "unit": "ns",
            "range": "± 3.6334205329863405"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "kmontrose@microsoft.com",
            "name": "kevin-montrose",
            "username": "kevin-montrose"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa004d372a23731e3e5f0fa65d701c4a4d62b381",
          "message": "Fixes for SCRIPT commands and behavior (#860)\n\n* fix FastBasicRespCommandsInfo construction and lookup; which incidentally fixes EVALSHA when scripting is enabled\r\n\r\n* fix MultiKeySlotVerify - keys past the second were not correctly visited\r\n\r\n* break SCRIPT into appropriate subcommands; update command info; fix SCRIPT EXISTS to match Redis behavior; tests for SCRIPT|* ACLs; DRY up SCRIPT command implementations\r\n\r\n* test script failures, match Redis error messages\r\n\r\n* remove byte[] allocations from evalsha path (amongst others); should get the Lua overhead down to just the NLua + locking stuff\r\n\r\n* add test for multi-hash version of SCRIPT|EXIST; fix bug where hash casing matters (matching Redis by defaulting to upper case hashes values); remove debug code\r\n\r\n* fix formatting\r\n\r\n* uppercase some test cases I missed\r\n\r\n* add EVALSHA to cluster slot tests\r\n\r\n* restore lower case hashes; erroneously thought Redis used upper case\r\n\r\n* add ScriptOperations to benchmark this change\r\n\r\n* formatting fixes\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-12T23:23:53-08:00",
          "tree_id": "8c0664ade6b6572a8af295961a2d61a846b60756",
          "url": "https://github.com/microsoft/garnet/commit/aa004d372a23731e3e5f0fa65d701c4a4d62b381"
        },
        "date": 1734074900993,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 118.91997030803135,
            "unit": "ns",
            "range": "± 0.20277037390447447"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 198.0091997555324,
            "unit": "ns",
            "range": "± 0.5610556993055554"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 368.3410867055257,
            "unit": "ns",
            "range": "± 1.5830210027680114"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2207.8350830078125,
            "unit": "ns",
            "range": "± 6.548283732583232"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca0222960f0145302eb1fc9896f680f9aff5a4d1",
          "message": "Streaming snapshot checkpoint in Tsavorite (#824)\n\n* Mild refactor in preparation\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* fix tests to not cover steaming snapshot as it is not a traditional checkpoint\r\n\r\n* add unit test\r\n\r\n* fix tests\r\n\r\n* fix test\r\n\r\n* updates\r\n\r\n* Support maxAddress during liveness checks\r\n\r\n* improvements to api\r\n\r\n* Add SetVersion API\r\n\r\n* more checks\r\n\r\n* add comment\r\n\r\n* add comments",
          "timestamp": "2024-12-13T10:25:49-08:00",
          "tree_id": "917be4f308af8da9ec7782faa5069a09f2b873c5",
          "url": "https://github.com/microsoft/garnet/commit/ca0222960f0145302eb1fc9896f680f9aff5a4d1"
        },
        "date": 1734114611615,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 119.74222489765712,
            "unit": "ns",
            "range": "± 0.5490570349186782"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 237.26182324545724,
            "unit": "ns",
            "range": "± 0.6595858054264361"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 334.62127538827747,
            "unit": "ns",
            "range": "± 1.0756906614215322"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2174.8532431466238,
            "unit": "ns",
            "range": "± 6.100110959369057"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f679b0b683e4e94fa2a3ebb2689708ec2efee74",
          "message": "Added BDN for all hash commands (#879)\n\n* Added BDN for all hash commands\r\n\r\n* Moved BDN of hash set to separate class",
          "timestamp": "2024-12-13T12:50:11-08:00",
          "tree_id": "66c04dc8b338f40aeb360419fc1953dcc219abbc",
          "url": "https://github.com/microsoft/garnet/commit/3f679b0b683e4e94fa2a3ebb2689708ec2efee74"
        },
        "date": 1734123271551,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 120.53964478628976,
            "unit": "ns",
            "range": "± 0.4016821559725115"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 197.49478560227615,
            "unit": "ns",
            "range": "± 0.6825218304383088"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 345.83641460963656,
            "unit": "ns",
            "range": "± 0.9854517639587962"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2193.2872772216797,
            "unit": "ns",
            "range": "± 6.831529966912213"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "178dc21b572263c4421e2602e41cc243cb94f507",
          "message": "Fix writing output for scan (#880)\n\n* Writing output for scan was not handling output buffer (dcurr, dend) correctly. Also, it was not handling large keys correctly.\r\n\r\n* update version",
          "timestamp": "2024-12-13T13:55:49-08:00",
          "tree_id": "1966c990a96fa84a42747ad14ce5480535196e57",
          "url": "https://github.com/microsoft/garnet/commit/178dc21b572263c4421e2602e41cc243cb94f507"
        },
        "date": 1734127244774,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 119.75100517272949,
            "unit": "ns",
            "range": "± 0.35697685890350617"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 197.90039221445718,
            "unit": "ns",
            "range": "± 0.8197762498729011"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 349.50909981360803,
            "unit": "ns",
            "range": "± 1.1821976652289297"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2195.6814399132363,
            "unit": "ns",
            "range": "± 9.224287326801104"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1ce0dafecaba15335e8e0767a6eeb441b72e56c",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#862)\n\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T14:08:03-08:00",
          "tree_id": "b2aa23d9235558527754332fab728fa03d60007b",
          "url": "https://github.com/microsoft/garnet/commit/f1ce0dafecaba15335e8e0767a6eeb441b72e56c"
        },
        "date": 1734127988050,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 116.51095610398512,
            "unit": "ns",
            "range": "± 0.5381799394588281"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 232.24732081095377,
            "unit": "ns",
            "range": "± 0.5428899455035645"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 351.0677178700765,
            "unit": "ns",
            "range": "± 4.706008512577614"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2215.359992980957,
            "unit": "ns",
            "range": "± 15.37753602876763"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132291528,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 120.34016132354736,
            "unit": "ns",
            "range": "± 0.20672160040670085"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 201.85771147410074,
            "unit": "ns",
            "range": "± 0.5139906500204126"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 382.65794004712785,
            "unit": "ns",
            "range": "± 2.527150378081036"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2169.370346069336,
            "unit": "ns",
            "range": "± 8.086485518834541"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734133848582,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 118.70746612548828,
            "unit": "ns",
            "range": "± 0.1561440198216799"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 200.24508578436715,
            "unit": "ns",
            "range": "± 0.6924044769517104"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 354.46671758379256,
            "unit": "ns",
            "range": "± 1.660998849058668"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2281.8643136457963,
            "unit": "ns",
            "range": "± 78.46298311109284"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377149917,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 119.29225554833046,
            "unit": "ns",
            "range": "± 0.3467290979114484"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 197.1500015258789,
            "unit": "ns",
            "range": "± 0.5589125122985179"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 341.7323772723858,
            "unit": "ns",
            "range": "± 5.589666904635364"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2227.791507427509,
            "unit": "ns",
            "range": "± 8.128177990362854"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392650564,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 119.37900384267171,
            "unit": "ns",
            "range": "± 0.3248239276023877"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 197.85602887471518,
            "unit": "ns",
            "range": "± 0.35414677417510276"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 400.345253944397,
            "unit": "ns",
            "range": "± 1.054924873997155"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2227.3683166503906,
            "unit": "ns",
            "range": "± 6.422616836422211"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483571972,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 120.23134742464337,
            "unit": "ns",
            "range": "± 0.21576264129369194"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 235.7056999206543,
            "unit": "ns",
            "range": "± 0.6018905236315426"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 399.536200932094,
            "unit": "ns",
            "range": "± 1.5548152968139315"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 2202.071980067662,
            "unit": "ns",
            "range": "± 4.718900153740782"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559429966,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 132.1999247868856,
            "unit": "ns",
            "range": "± 0.8612927595730926"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 196.07309699058533,
            "unit": "ns",
            "range": "± 0.19709423644443935"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 319.05596415201825,
            "unit": "ns",
            "range": "± 0.4432622592526687"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 287.87380536397296,
            "unit": "ns",
            "range": "± 0.4644673057607764"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578679070,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 128.6981050784771,
            "unit": "ns",
            "range": "± 0.4689945826176145"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 215.75374603271484,
            "unit": "ns",
            "range": "± 0.33392175479184605"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 330.43293952941895,
            "unit": "ns",
            "range": "± 0.37767400875431895"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 291.6379383632115,
            "unit": "ns",
            "range": "± 0.685434885025172"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734595911284,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 126.49250213916486,
            "unit": "ns",
            "range": "± 0.6544763767056437"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 197.83673967633928,
            "unit": "ns",
            "range": "± 0.44157991022783655"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 334.4305185171274,
            "unit": "ns",
            "range": "± 0.7430946185904482"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 294.3707840783255,
            "unit": "ns",
            "range": "± 0.6089617467528639"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643322966,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 128.52911790211996,
            "unit": "ns",
            "range": "± 0.41317959996327164"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 204.6912942613874,
            "unit": "ns",
            "range": "± 0.4140316056495741"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 319.66874599456787,
            "unit": "ns",
            "range": "± 0.6686091658058759"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 278.94521126380334,
            "unit": "ns",
            "range": "± 0.6624276152977646"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647634413,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 129.44029172261557,
            "unit": "ns",
            "range": "± 0.7053574040920065"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 201.2830036027091,
            "unit": "ns",
            "range": "± 0.25927843603653783"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 322.15265205928256,
            "unit": "ns",
            "range": "± 0.8277077197246052"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 284.29649557386125,
            "unit": "ns",
            "range": "± 0.7533063322226389"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652397503,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 130.19526554987982,
            "unit": "ns",
            "range": "± 0.5113552972709001"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 200.67571798960367,
            "unit": "ns",
            "range": "± 0.30905029634433967"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 311.9860363006592,
            "unit": "ns",
            "range": "± 0.592525766521176"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 282.6888697487967,
            "unit": "ns",
            "range": "± 0.8628570777829071"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747077539,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 132.6215420450483,
            "unit": "ns",
            "range": "± 0.40398244897298435"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 197.4855166215163,
            "unit": "ns",
            "range": "± 0.5254124445504662"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 332.8772953578404,
            "unit": "ns",
            "range": "± 1.1272987209375345"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 301.41448293413436,
            "unit": "ns",
            "range": "± 0.7319052335470602"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906689450,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 127.72604737962995,
            "unit": "ns",
            "range": "± 0.6888937111819108"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 209.15582009724207,
            "unit": "ns",
            "range": "± 0.7839538362860707"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 309.1608558382307,
            "unit": "ns",
            "range": "± 0.3565865191101994"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 304.1752592722575,
            "unit": "ns",
            "range": "± 0.7804468548563537"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407521687,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 128.2861598332723,
            "unit": "ns",
            "range": "± 0.7995815641151796"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 196.28779888153076,
            "unit": "ns",
            "range": "± 0.5506576159442722"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 318.2504619870867,
            "unit": "ns",
            "range": "± 0.6687900441849078"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 307.2752316792806,
            "unit": "ns",
            "range": "± 0.716704978854636"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187201542,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 127.34290191105434,
            "unit": "ns",
            "range": "± 0.6599625382690543"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 200.12327092034477,
            "unit": "ns",
            "range": "± 0.317007162160333"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 319.8631103222187,
            "unit": "ns",
            "range": "± 1.0324452789308671"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 293.2307549885341,
            "unit": "ns",
            "range": "± 3.264467437715123"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283014142,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 128.2785987854004,
            "unit": "ns",
            "range": "± 0.5443118145152765"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 214.71327940622965,
            "unit": "ns",
            "range": "± 0.5909323234932446"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 314.6019275371845,
            "unit": "ns",
            "range": "± 0.3564318927494174"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 283.0795447031657,
            "unit": "ns",
            "range": "± 0.5961291118701592"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376089888,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 129.61177984873453,
            "unit": "ns",
            "range": "± 0.4404862612091625"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 199.26693269184656,
            "unit": "ns",
            "range": "± 0.3510550433724438"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 325.72054862976074,
            "unit": "ns",
            "range": "± 0.3938049721108289"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 288.8717761406532,
            "unit": "ns",
            "range": "± 0.7874264271428344"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461831012,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 130.81154823303223,
            "unit": "ns",
            "range": "± 0.74501977898484"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 196.7867136001587,
            "unit": "ns",
            "range": "± 0.3894923714622413"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 320.37159374782016,
            "unit": "ns",
            "range": "± 0.6271441326440719"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 304.475736618042,
            "unit": "ns",
            "range": "± 0.5303336965895615"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479627072,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 129.01916662851968,
            "unit": "ns",
            "range": "± 0.883723553822328"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 200.51422754923502,
            "unit": "ns",
            "range": "± 0.7245556881319892"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 323.43643052237377,
            "unit": "ns",
            "range": "± 0.7214816546996424"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 300.182503920335,
            "unit": "ns",
            "range": "± 0.586297425030365"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553435619,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 126.91544124058315,
            "unit": "ns",
            "range": "± 0.882114484803059"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 196.48879210154215,
            "unit": "ns",
            "range": "± 0.4874374641666622"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 314.6899127960205,
            "unit": "ns",
            "range": "± 0.5945656024546058"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 297.573607308524,
            "unit": "ns",
            "range": "± 0.915916628111354"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655701934,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: None)",
            "value": 127.01994088979868,
            "unit": "ns",
            "range": "± 0.5012032295993475"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: None)",
            "value": 196.8163283665975,
            "unit": "ns",
            "range": "± 1.4381953919829058"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: None)",
            "value": 309.22952038901195,
            "unit": "ns",
            "range": "± 0.5444771454011922"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: None)",
            "value": 285.7838789621989,
            "unit": "ns",
            "range": "± 0.7966593185023921"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254397326,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,Limit)",
            "value": 141.0792521068028,
            "unit": "ns",
            "range": "± 0.3827896461635107"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,Limit)",
            "value": 178.85401884714761,
            "unit": "ns",
            "range": "± 0.5605540427173535"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,Limit)",
            "value": 251.8514667238508,
            "unit": "ns",
            "range": "± 0.5218948791383471"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,Limit)",
            "value": 261.0210963657924,
            "unit": "ns",
            "range": "± 0.44779280050685927"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,None)",
            "value": 131.6897678375244,
            "unit": "ns",
            "range": "± 0.28908145061623935"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,None)",
            "value": 167.86709944407144,
            "unit": "ns",
            "range": "± 0.2339530402178879"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,None)",
            "value": 254.30589744022913,
            "unit": "ns",
            "range": "± 0.3777020631759636"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,None)",
            "value": 260.7789925166539,
            "unit": "ns",
            "range": "± 0.9501875171432236"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Native,None)",
            "value": 133.99687180152307,
            "unit": "ns",
            "range": "± 0.2833023619594721"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Native,None)",
            "value": 167.17975536982217,
            "unit": "ns",
            "range": "± 0.2262828243516825"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Native,None)",
            "value": 249.2296282450358,
            "unit": "ns",
            "range": "± 0.32526155485490044"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Native,None)",
            "value": 267.1464883364164,
            "unit": "ns",
            "range": "± 0.3387453143378255"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,Limit)",
            "value": 138.49372012274605,
            "unit": "ns",
            "range": "± 0.15776543271760746"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,Limit)",
            "value": 175.19775720743033,
            "unit": "ns",
            "range": "± 0.42896507537922"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,Limit)",
            "value": 253.66022109985352,
            "unit": "ns",
            "range": "± 0.4466718449009389"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,Limit)",
            "value": 257.8983170645578,
            "unit": "ns",
            "range": "± 0.8941660950195337"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,None)",
            "value": 139.50923000063216,
            "unit": "ns",
            "range": "± 0.17044019763335"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,None)",
            "value": 163.04883786610193,
            "unit": "ns",
            "range": "± 0.16111159687335236"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,None)",
            "value": 267.360991698045,
            "unit": "ns",
            "range": "± 0.27592107585341386"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,None)",
            "value": 276.7944886134221,
            "unit": "ns",
            "range": "± 0.7789778519468825"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737789041887,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,Limit)",
            "value": 147.51746313912528,
            "unit": "ns",
            "range": "± 0.9546625772271502"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,Limit)",
            "value": 174.69554130847638,
            "unit": "ns",
            "range": "± 0.30865990790711234"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,Limit)",
            "value": 254.13089990615845,
            "unit": "ns",
            "range": "± 0.11109957710950241"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,Limit)",
            "value": 264.12736085745007,
            "unit": "ns",
            "range": "± 0.39005265169533837"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,None)",
            "value": 143.541157245636,
            "unit": "ns",
            "range": "± 0.16576371634855908"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,None)",
            "value": 166.8572187423706,
            "unit": "ns",
            "range": "± 0.344325727754996"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,None)",
            "value": 260.2424349103655,
            "unit": "ns",
            "range": "± 0.4603837032260217"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,None)",
            "value": 268.18611281258717,
            "unit": "ns",
            "range": "± 0.40790808950273727"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Native,None)",
            "value": 130.11269410451254,
            "unit": "ns",
            "range": "± 0.12747204379297405"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Native,None)",
            "value": 170.58740854263306,
            "unit": "ns",
            "range": "± 0.6420266294944769"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Native,None)",
            "value": 270.140134371244,
            "unit": "ns",
            "range": "± 0.6864726541522262"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Native,None)",
            "value": 260.2312124692477,
            "unit": "ns",
            "range": "± 0.4468903780595413"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,Limit)",
            "value": 150.71719544274467,
            "unit": "ns",
            "range": "± 0.37721936000286327"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,Limit)",
            "value": 180.70565382639566,
            "unit": "ns",
            "range": "± 0.4663557397414994"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,Limit)",
            "value": 266.71226501464844,
            "unit": "ns",
            "range": "± 0.7568015985572389"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,Limit)",
            "value": 263.64686489105225,
            "unit": "ns",
            "range": "± 0.4571030638315691"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,None)",
            "value": 132.8230040413993,
            "unit": "ns",
            "range": "± 0.3761820677287956"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,None)",
            "value": 166.84094746907553,
            "unit": "ns",
            "range": "± 0.42886812804344104"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,None)",
            "value": 256.30538122994557,
            "unit": "ns",
            "range": "± 0.667577977917446"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,None)",
            "value": 268.6742051442464,
            "unit": "ns",
            "range": "± 0.7024707326073496"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050843301,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,Limit)",
            "value": 148.3703511101859,
            "unit": "ns",
            "range": "± 0.28346456871794445"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,Limit)",
            "value": 176.81962966918945,
            "unit": "ns",
            "range": "± 0.5444901991499335"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,Limit)",
            "value": 256.76176364605243,
            "unit": "ns",
            "range": "± 0.4461940524563185"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,Limit)",
            "value": 267.83801225515515,
            "unit": "ns",
            "range": "± 0.6940896174741779"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,None)",
            "value": 139.22271887461343,
            "unit": "ns",
            "range": "± 0.26624317020142857"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,None)",
            "value": 172.4666503759531,
            "unit": "ns",
            "range": "± 0.22950278195349988"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,None)",
            "value": 253.401061466762,
            "unit": "ns",
            "range": "± 0.4769719508148628"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,None)",
            "value": 273.0928262074788,
            "unit": "ns",
            "range": "± 0.6608933520351208"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Native,None)",
            "value": 145.34303225003757,
            "unit": "ns",
            "range": "± 0.4814644116907471"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Native,None)",
            "value": 162.96392168317522,
            "unit": "ns",
            "range": "± 0.18999913811749675"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Native,None)",
            "value": 289.52702008760895,
            "unit": "ns",
            "range": "± 0.5439306441691869"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Native,None)",
            "value": 259.93625322977704,
            "unit": "ns",
            "range": "± 0.8157202199749161"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,Limit)",
            "value": 133.15914777609018,
            "unit": "ns",
            "range": "± 0.25441050105711327"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,Limit)",
            "value": 176.98972591987024,
            "unit": "ns",
            "range": "± 0.2691471425175529"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,Limit)",
            "value": 255.45528093973795,
            "unit": "ns",
            "range": "± 0.57909326718549"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,Limit)",
            "value": 270.4205109522893,
            "unit": "ns",
            "range": "± 0.24378945540767047"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,None)",
            "value": 147.24398295084634,
            "unit": "ns",
            "range": "± 0.9921253668174964"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,None)",
            "value": 169.59230048315865,
            "unit": "ns",
            "range": "± 0.22019472449803848"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,None)",
            "value": 261.21966044108075,
            "unit": "ns",
            "range": "± 0.9126263026277879"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,None)",
            "value": 274.0760389963786,
            "unit": "ns",
            "range": "± 0.9434072103734222"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369336147,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,Limit)",
            "value": 131.14298922674996,
            "unit": "ns",
            "range": "± 0.21064693367254086"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,Limit)",
            "value": 175.40240628378731,
            "unit": "ns",
            "range": "± 0.4427001535216773"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,Limit)",
            "value": 257.0730413709368,
            "unit": "ns",
            "range": "± 0.5015208330289807"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,Limit)",
            "value": 266.3654293332781,
            "unit": "ns",
            "range": "± 0.45226868468829307"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Managed,None)",
            "value": 130.28411070505777,
            "unit": "ns",
            "range": "± 0.4310605518936799"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Managed,None)",
            "value": 169.0466018823477,
            "unit": "ns",
            "range": "± 0.20663347015777006"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Managed,None)",
            "value": 250.155238310496,
            "unit": "ns",
            "range": "± 0.2667845240731718"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Managed,None)",
            "value": 259.5806666782924,
            "unit": "ns",
            "range": "± 0.3894801708784164"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Native,None)",
            "value": 133.61411889394125,
            "unit": "ns",
            "range": "± 0.3032619263317936"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Native,None)",
            "value": 171.34197858663705,
            "unit": "ns",
            "range": "± 0.10745270011294744"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Native,None)",
            "value": 265.85964759190875,
            "unit": "ns",
            "range": "± 0.29168439994268236"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Native,None)",
            "value": 271.9467016366812,
            "unit": "ns",
            "range": "± 1.123154270150415"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,Limit)",
            "value": 136.97024413517542,
            "unit": "ns",
            "range": "± 0.29604333101442404"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,Limit)",
            "value": 170.3509203592936,
            "unit": "ns",
            "range": "± 0.46465822149222524"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,Limit)",
            "value": 256.2014954430716,
            "unit": "ns",
            "range": "± 0.3229227994860655"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,Limit)",
            "value": 267.6279874948355,
            "unit": "ns",
            "range": "± 0.5128966483334731"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script1(Params: Tracked,None)",
            "value": 133.77346651894706,
            "unit": "ns",
            "range": "± 0.3322760701369452"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script2(Params: Tracked,None)",
            "value": 173.20185559136527,
            "unit": "ns",
            "range": "± 0.2775681942421763"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script3(Params: Tracked,None)",
            "value": 252.96323458353677,
            "unit": "ns",
            "range": "± 0.40056213625605724"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScripts.Script4(Params: Tracked,None)",
            "value": 261.15941365559894,
            "unit": "ns",
            "range": "± 0.4090437184404929"
          }
        ]
      }
    ],
    "Operations.BasicOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd766248719caf2817592e988a5e67edc22b511b",
          "message": "Implementing BDN Perf pipeline (#758)\n\n* The CI scripts, YML and config files to check perf using BDN benchmarking.  Also, a fix in ClusterBench for and renamed Lua Runner benchmarking\r\n\r\n* Cleaned up the debug message and updated couple expected values\r\n\r\n* Updated SAddRem - windows - to 130 from 118.  Also removed unncesssary build statement in YML\r\n\r\n* Proof of concept for Performance run on ADO using BDN\r\n\r\n* Comment out number of Cores check so can try proof of concept on ADO perf machines\r\n\r\n* Getting close to having BDN working\r\n\r\n* Fixed RespLuaStress\r\n\r\n* Fixed issue in Lua Runner Stress\r\n\r\n* Updated config values, set charting and commit comment as separate tasks\r\n\r\n* Updated config values\r\n\r\n* Minor change to YML (remove pull requests) and updated LuaRunner config value\r\n\r\n* One more config value fix\r\n\r\n* Added a task to do the push\r\n\r\n* Putting back to push chart in the chart task and not a separate one\r\n\r\n* Moved the permissions to full workflow\r\n\r\n* Just minor to add commits\r\n\r\n* Adding actions: write permit since actions default to read only\r\n\r\n* Set up the commit comment for BDN as well as summary to show current vs previous BDN perf numbers\r\n\r\n* A few fixes\r\n\r\n* Updated BDN perf YML, config files and ps1 script\r\n\r\n* Versioning issue with BDN test files, fixed now\r\n\r\n* Bump threshold to 35% (135%) to trigger perf failure\r\n\r\n* Set to Linux only to reduce number of consectutive tests which caused push collisions with GitHub\r\n\r\n* Just Windows only test run\r\n\r\n* Putting it back to both OS for the tests\r\n\r\n* Set threshhold to 50% (150%) as seeing BDN ran twice on same code sometimes is in 40%+ range of difference.\r\n\r\n* Big change where using continuousbenchmark branch for all data for continuous benchmarking and also changed to where script is only checking allocated values and let github-action-benchmark compare mean values\r\n\r\n* Updated ClusterBench to get main changes\r\n\r\n* Fix issue with Cluster BDN is not able to access folder so setting to tmp which does have access\r\n\r\n* Bumping threshold to 50% (150%) as mean value in RespParseStress can vary into the 40% from run to run.\r\n\r\n* First update\r\n\r\n* Hiding the Gen0 column for Lua benchmark\r\n\r\n* Updated BDN test infrastructure to match the new BDN org.\r\n\r\n* Fix bug in ObjectOperations\r\n\r\n* Set max items on chart to 50 ... can modify later if want\r\n\r\n* Added the run on push to main\r\n\r\n* Put Performance Pipeline back\r\n\r\n* Fixed the default case when no parameters sent to ps1\r\n\r\n* Cleaned up config files:\r\nhave shorter names for values\r\nnot have configuration or framework (moved to ps1 file)\r\nnot have windows / linux differnce in expected\r\nMoved acceptable allocated range to script\r\n\r\nmodified the script:\r\nto only load values for the specific test instead of looking for all values\r\nchanges to match the changes in config (shorter names, etc)\r\n\r\n* Big update to where moved to a single config file and the ps1 file does not need to be updated when new BDNs are added.\r\n\r\n* Added workflow_dispatch: to deploy website yml so we can manually deploy website if we want\r\n\r\n* Updated alert-threshold from 150% to 140%. If too many false positives we can raise it back. Also, removed darrenge from the alert CC line as no need for that.\r\n\r\n* Removed the commit comment / comparison to previous commit task. Still will get  summary data in the specific workflow run and still uploads data to charts (when pushing to main).\r\n\r\n* Minor update - comments only",
          "timestamp": "2024-12-11T11:29:32-08:00",
          "tree_id": "a262ac843488b7afb61ad91dfb2a488917243391",
          "url": "https://github.com/microsoft/garnet/commit/dd766248719caf2817592e988a5e67edc22b511b"
        },
        "date": 1733945703687,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1831.505635579427,
            "unit": "ns",
            "range": "± 2.522101318082666"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1797.3664011274066,
            "unit": "ns",
            "range": "± 1.5588078809308605"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1796.9469657311072,
            "unit": "ns",
            "range": "± 1.833924576647507"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aabc0bb831f2313bce41c43c29c9c2b0e434cb00",
          "message": "handle uninitialized epoch value merge (#874)\n\n* handle uninitialized epoch value merge\r\n\r\n* release 1.0.47",
          "timestamp": "2024-12-11T14:03:36-08:00",
          "tree_id": "ca83e06a72e78b6bab3872148b9e3eb5cb476269",
          "url": "https://github.com/microsoft/garnet/commit/aabc0bb831f2313bce41c43c29c9c2b0e434cb00"
        },
        "date": 1733954941552,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1801.6040420532227,
            "unit": "ns",
            "range": "± 2.7111548713863063"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1798.2487519582112,
            "unit": "ns",
            "range": "± 2.6704434702094604"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1797.4522654215496,
            "unit": "ns",
            "range": "± 1.0830107984431454"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf1d4b66c442284f95c8db51e57274ba07316561",
          "message": "Bump nanoid from 3.3.7 to 3.3.8 in /website (#873)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: darrenge <darrenge@microsoft.com>",
          "timestamp": "2024-12-11T15:37:40-08:00",
          "tree_id": "1d3dbe6f308895a822d913fd3960c803796cb264",
          "url": "https://github.com/microsoft/garnet/commit/cf1d4b66c442284f95c8db51e57274ba07316561"
        },
        "date": 1733960502355,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1805.1137669881184,
            "unit": "ns",
            "range": "± 4.130819341803971"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1802.1579889150767,
            "unit": "ns",
            "range": "± 4.9610093589003785"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1893.122444152832,
            "unit": "ns",
            "range": "± 4.542563782986088"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d4c7448569063ea786802a0580acf465108e037",
          "message": "Add ReadOnly Support for IDevice (#870)\n\n* add readOnly flag in streamProvider for LocalStorageDevice\r\n\r\n* add linux readOnly flag for managed device\r\n\r\n* add explicit readOnly assignment for parameter",
          "timestamp": "2024-12-12T13:03:41-08:00",
          "tree_id": "3d591691e9ac0cfb714d98096a0580abab554b23",
          "url": "https://github.com/microsoft/garnet/commit/0d4c7448569063ea786802a0580acf465108e037"
        },
        "date": 1734037769814,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1833.1541442871094,
            "unit": "ns",
            "range": "± 9.710247933876424"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1797.0524088541667,
            "unit": "ns",
            "range": "± 1.8476782490745238"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1765.564647087684,
            "unit": "ns",
            "range": "± 2.006228705041631"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2c2261c72948136f6af9dfdfefc86ebb02c686a",
          "message": "CustomCommandManager + CustomCommandManagerSession to use auto-expandable maps (#848)\n\n* wip\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* Comments + tests\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* fix\r\n\r\n* format\r\n\r\n* Adding a non-concurrent ExpandableMap\r\n\r\n* small fix\r\n\r\n* Switching to SingleWriterMultiReaderLock\r\n\r\n* Some thread-safety related fixes\r\n\r\n* Added some async tests for command registration\r\n\r\n* small bugfixes\r\n\r\n* format",
          "timestamp": "2024-12-12T18:49:23-08:00",
          "tree_id": "27ea42b0a4d6b834a7f450d12100d29e8b94f077",
          "url": "https://github.com/microsoft/garnet/commit/f2c2261c72948136f6af9dfdfefc86ebb02c686a"
        },
        "date": 1734058434799,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1832.1977070399694,
            "unit": "ns",
            "range": "± 3.844040999945732"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1860.386085510254,
            "unit": "ns",
            "range": "± 1.981372391580459"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1676.490947178432,
            "unit": "ns",
            "range": "± 3.811236128607291"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "kmontrose@microsoft.com",
            "name": "kevin-montrose",
            "username": "kevin-montrose"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa004d372a23731e3e5f0fa65d701c4a4d62b381",
          "message": "Fixes for SCRIPT commands and behavior (#860)\n\n* fix FastBasicRespCommandsInfo construction and lookup; which incidentally fixes EVALSHA when scripting is enabled\r\n\r\n* fix MultiKeySlotVerify - keys past the second were not correctly visited\r\n\r\n* break SCRIPT into appropriate subcommands; update command info; fix SCRIPT EXISTS to match Redis behavior; tests for SCRIPT|* ACLs; DRY up SCRIPT command implementations\r\n\r\n* test script failures, match Redis error messages\r\n\r\n* remove byte[] allocations from evalsha path (amongst others); should get the Lua overhead down to just the NLua + locking stuff\r\n\r\n* add test for multi-hash version of SCRIPT|EXIST; fix bug where hash casing matters (matching Redis by defaulting to upper case hashes values); remove debug code\r\n\r\n* fix formatting\r\n\r\n* uppercase some test cases I missed\r\n\r\n* add EVALSHA to cluster slot tests\r\n\r\n* restore lower case hashes; erroneously thought Redis used upper case\r\n\r\n* add ScriptOperations to benchmark this change\r\n\r\n* formatting fixes\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-12T23:23:53-08:00",
          "tree_id": "8c0664ade6b6572a8af295961a2d61a846b60756",
          "url": "https://github.com/microsoft/garnet/commit/aa004d372a23731e3e5f0fa65d701c4a4d62b381"
        },
        "date": 1734074970971,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1827.8260503496442,
            "unit": "ns",
            "range": "± 1.8022209056904919"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1794.9956734975178,
            "unit": "ns",
            "range": "± 0.5119753935558303"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1795.9675516401019,
            "unit": "ns",
            "range": "± 2.4026949652645184"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca0222960f0145302eb1fc9896f680f9aff5a4d1",
          "message": "Streaming snapshot checkpoint in Tsavorite (#824)\n\n* Mild refactor in preparation\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* fix tests to not cover steaming snapshot as it is not a traditional checkpoint\r\n\r\n* add unit test\r\n\r\n* fix tests\r\n\r\n* fix test\r\n\r\n* updates\r\n\r\n* Support maxAddress during liveness checks\r\n\r\n* improvements to api\r\n\r\n* Add SetVersion API\r\n\r\n* more checks\r\n\r\n* add comment\r\n\r\n* add comments",
          "timestamp": "2024-12-13T10:25:49-08:00",
          "tree_id": "917be4f308af8da9ec7782faa5069a09f2b873c5",
          "url": "https://github.com/microsoft/garnet/commit/ca0222960f0145302eb1fc9896f680f9aff5a4d1"
        },
        "date": 1734114648442,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1828.630324772426,
            "unit": "ns",
            "range": "± 1.0481144197143868"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1801.5761920383998,
            "unit": "ns",
            "range": "± 3.55577327646557"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1798.025945516733,
            "unit": "ns",
            "range": "± 0.8614618073550709"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f679b0b683e4e94fa2a3ebb2689708ec2efee74",
          "message": "Added BDN for all hash commands (#879)\n\n* Added BDN for all hash commands\r\n\r\n* Moved BDN of hash set to separate class",
          "timestamp": "2024-12-13T12:50:11-08:00",
          "tree_id": "66c04dc8b338f40aeb360419fc1953dcc219abbc",
          "url": "https://github.com/microsoft/garnet/commit/3f679b0b683e4e94fa2a3ebb2689708ec2efee74"
        },
        "date": 1734123283203,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1800.0114168439593,
            "unit": "ns",
            "range": "± 2.602342484960901"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1798.7258402506511,
            "unit": "ns",
            "range": "± 1.966655570902119"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1892.030838557652,
            "unit": "ns",
            "range": "± 2.1560368455299517"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "178dc21b572263c4421e2602e41cc243cb94f507",
          "message": "Fix writing output for scan (#880)\n\n* Writing output for scan was not handling output buffer (dcurr, dend) correctly. Also, it was not handling large keys correctly.\r\n\r\n* update version",
          "timestamp": "2024-12-13T13:55:49-08:00",
          "tree_id": "1966c990a96fa84a42747ad14ce5480535196e57",
          "url": "https://github.com/microsoft/garnet/commit/178dc21b572263c4421e2602e41cc243cb94f507"
        },
        "date": 1734127277273,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1802.3931694030762,
            "unit": "ns",
            "range": "± 4.162003362634572"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1797.6640701293945,
            "unit": "ns",
            "range": "± 2.3164427654689796"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1891.8601853506905,
            "unit": "ns",
            "range": "± 2.122743157466951"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1ce0dafecaba15335e8e0767a6eeb441b72e56c",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#862)\n\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T14:08:03-08:00",
          "tree_id": "b2aa23d9235558527754332fab728fa03d60007b",
          "url": "https://github.com/microsoft/garnet/commit/f1ce0dafecaba15335e8e0767a6eeb441b72e56c"
        },
        "date": 1734127929888,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1962.1582285563152,
            "unit": "ns",
            "range": "± 10.559681204305475"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1804.2882124582927,
            "unit": "ns",
            "range": "± 6.563261832667698"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1798.4642573765345,
            "unit": "ns",
            "range": "± 4.6214567706292184"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132223906,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1800.3425461905342,
            "unit": "ns",
            "range": "± 3.4434896369612247"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1797.5399080912273,
            "unit": "ns",
            "range": "± 2.411522044710215"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1796.8630423912634,
            "unit": "ns",
            "range": "± 2.7871924236344405"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734133885615,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1804.0136745997838,
            "unit": "ns",
            "range": "± 9.55138705698261"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1795.9429740905762,
            "unit": "ns",
            "range": "± 1.8163453242896128"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1807.436888558524,
            "unit": "ns",
            "range": "± 0.9428259191894169"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377136392,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1860.1007052830287,
            "unit": "ns",
            "range": "± 30.34234447867424"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1710.4654678931604,
            "unit": "ns",
            "range": "± 4.974218021147557"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1894.777706691197,
            "unit": "ns",
            "range": "± 2.49496707920841"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392605362,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1846.742923443134,
            "unit": "ns",
            "range": "± 23.437119605789395"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1798.584624699184,
            "unit": "ns",
            "range": "± 2.233800505641151"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1892.7347056070964,
            "unit": "ns",
            "range": "± 2.5077026545494414"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483525385,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1836.9046274820964,
            "unit": "ns",
            "range": "± 7.282993501960292"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1796.975275186392,
            "unit": "ns",
            "range": "± 1.7701578071754702"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1892.1420778547015,
            "unit": "ns",
            "range": "± 4.210300659972793"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559411934,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1956.8048623891978,
            "unit": "ns",
            "range": "± 2.003373093476045"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1797.0442390441895,
            "unit": "ns",
            "range": "± 2.4607065094189347"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1798.1922516456018,
            "unit": "ns",
            "range": "± 1.5534657977010717"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578627996,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1925.0295198880708,
            "unit": "ns",
            "range": "± 2.891172351809368"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1706.098393031529,
            "unit": "ns",
            "range": "± 2.035653457169153"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1796.77551814488,
            "unit": "ns",
            "range": "± 2.5775259607164047"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734595929766,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1957.1855545043945,
            "unit": "ns",
            "range": "± 2.5042016827991778"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1892.645250047956,
            "unit": "ns",
            "range": "± 2.893188024895827"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1893.1951795305524,
            "unit": "ns",
            "range": "± 2.3378657277949393"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643349769,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1759.4507916768391,
            "unit": "ns",
            "range": "± 13.660607604049737"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1911.8325642177037,
            "unit": "ns",
            "range": "± 5.277817664615905"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1911.237678527832,
            "unit": "ns",
            "range": "± 11.029018546635832"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647599387,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1741.5368226858286,
            "unit": "ns",
            "range": "± 3.1176164904220407"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1895.3436034066337,
            "unit": "ns",
            "range": "± 2.676770033942465"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1891.830130985805,
            "unit": "ns",
            "range": "± 0.9828083013950348"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652434626,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1742.8324508666992,
            "unit": "ns",
            "range": "± 2.777946157121821"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1893.6009270804268,
            "unit": "ns",
            "range": "± 2.378227354933072"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1895.1578521728516,
            "unit": "ns",
            "range": "± 3.032483192073589"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747056748,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1798.3697255452473,
            "unit": "ns",
            "range": "± 2.03870048507861"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1765.6852858407158,
            "unit": "ns",
            "range": "± 1.6397134865790812"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1675.6122809190017,
            "unit": "ns",
            "range": "± 2.278480786181495"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906724419,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1801.2228693280902,
            "unit": "ns",
            "range": "± 2.8198042481034946"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1775.6595318134014,
            "unit": "ns",
            "range": "± 3.2755168562468033"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1769.7658675057548,
            "unit": "ns",
            "range": "± 2.494969498135742"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407565137,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1805.1469802856445,
            "unit": "ns",
            "range": "± 5.103775324110044"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1679.6868030841533,
            "unit": "ns",
            "range": "± 4.143353377928588"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1676.3306209019252,
            "unit": "ns",
            "range": "± 1.8840038927657774"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187262514,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1801.2733239393967,
            "unit": "ns",
            "range": "± 1.8610775278078455"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1771.9402900108923,
            "unit": "ns",
            "range": "± 4.609619387840037"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1770.8243506295341,
            "unit": "ns",
            "range": "± 2.8138498178310294"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283021070,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1801.23964037214,
            "unit": "ns",
            "range": "± 2.877018357296696"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1773.9693196614583,
            "unit": "ns",
            "range": "± 6.723835463223429"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1772.8574616568428,
            "unit": "ns",
            "range": "± 6.7222148906113945"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376078658,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1803.166675567627,
            "unit": "ns",
            "range": "± 7.709961598662323"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1767.953953376183,
            "unit": "ns",
            "range": "± 1.377701767849493"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1678.821781703404,
            "unit": "ns",
            "range": "± 6.064461184734794"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461869164,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1834.9918229239327,
            "unit": "ns",
            "range": "± 5.730038383321007"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1768.279756818499,
            "unit": "ns",
            "range": "± 2.9510856551764504"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1768.9255714416504,
            "unit": "ns",
            "range": "± 5.292737994778779"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479644756,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1831.4987863813128,
            "unit": "ns",
            "range": "± 2.533515011599383"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1836.2650108337402,
            "unit": "ns",
            "range": "± 12.070575822475902"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1799.13729258946,
            "unit": "ns",
            "range": "± 2.8537805153090865"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553634711,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1797.88976082435,
            "unit": "ns",
            "range": "± 1.6972980472054442"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1892.2856110792893,
            "unit": "ns",
            "range": "± 2.472002244442465"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1797.03856248122,
            "unit": "ns",
            "range": "± 2.1447185929781045"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655809683,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1738.6528968811035,
            "unit": "ns",
            "range": "± 1.690246884068945"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1828.451706812932,
            "unit": "ns",
            "range": "± 2.4606150675410197"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1737.4553753779485,
            "unit": "ns",
            "range": "± 2.9633900314369077"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254388776,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1891.4360318865095,
            "unit": "ns",
            "range": "± 2.8532694398251652"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1714.242172241211,
            "unit": "ns",
            "range": "± 10.863462448856307"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1737.5158991132464,
            "unit": "ns",
            "range": "± 1.9794063798002837"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788966039,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1800.2684048243932,
            "unit": "ns",
            "range": "± 2.328219611396324"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1797.5058555603027,
            "unit": "ns",
            "range": "± 1.6693371921021007"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1827.4111454303447,
            "unit": "ns",
            "range": "± 1.125995426022407"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050721210,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1800.936750265268,
            "unit": "ns",
            "range": "± 2.909467241409817"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1796.835600535075,
            "unit": "ns",
            "range": "± 1.937251593561364"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1828.309508732387,
            "unit": "ns",
            "range": "± 1.6927102097019202"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369224333,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: ACL)",
            "value": 1831.711299602802,
            "unit": "ns",
            "range": "± 2.3523607834866525"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: AOF)",
            "value": 1952.5150844029017,
            "unit": "ns",
            "range": "± 3.0078928433053913"
          },
          {
            "name": "BDN.benchmark.Operations.BasicOperations.InlinePing(Params: None)",
            "value": 1860.0606282552083,
            "unit": "ns",
            "range": "± 2.3009591917770416"
          }
        ]
      }
    ],
    "Cluster.ClusterMigrate (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd766248719caf2817592e988a5e67edc22b511b",
          "message": "Implementing BDN Perf pipeline (#758)\n\n* The CI scripts, YML and config files to check perf using BDN benchmarking.  Also, a fix in ClusterBench for and renamed Lua Runner benchmarking\r\n\r\n* Cleaned up the debug message and updated couple expected values\r\n\r\n* Updated SAddRem - windows - to 130 from 118.  Also removed unncesssary build statement in YML\r\n\r\n* Proof of concept for Performance run on ADO using BDN\r\n\r\n* Comment out number of Cores check so can try proof of concept on ADO perf machines\r\n\r\n* Getting close to having BDN working\r\n\r\n* Fixed RespLuaStress\r\n\r\n* Fixed issue in Lua Runner Stress\r\n\r\n* Updated config values, set charting and commit comment as separate tasks\r\n\r\n* Updated config values\r\n\r\n* Minor change to YML (remove pull requests) and updated LuaRunner config value\r\n\r\n* One more config value fix\r\n\r\n* Added a task to do the push\r\n\r\n* Putting back to push chart in the chart task and not a separate one\r\n\r\n* Moved the permissions to full workflow\r\n\r\n* Just minor to add commits\r\n\r\n* Adding actions: write permit since actions default to read only\r\n\r\n* Set up the commit comment for BDN as well as summary to show current vs previous BDN perf numbers\r\n\r\n* A few fixes\r\n\r\n* Updated BDN perf YML, config files and ps1 script\r\n\r\n* Versioning issue with BDN test files, fixed now\r\n\r\n* Bump threshold to 35% (135%) to trigger perf failure\r\n\r\n* Set to Linux only to reduce number of consectutive tests which caused push collisions with GitHub\r\n\r\n* Just Windows only test run\r\n\r\n* Putting it back to both OS for the tests\r\n\r\n* Set threshhold to 50% (150%) as seeing BDN ran twice on same code sometimes is in 40%+ range of difference.\r\n\r\n* Big change where using continuousbenchmark branch for all data for continuous benchmarking and also changed to where script is only checking allocated values and let github-action-benchmark compare mean values\r\n\r\n* Updated ClusterBench to get main changes\r\n\r\n* Fix issue with Cluster BDN is not able to access folder so setting to tmp which does have access\r\n\r\n* Bumping threshold to 50% (150%) as mean value in RespParseStress can vary into the 40% from run to run.\r\n\r\n* First update\r\n\r\n* Hiding the Gen0 column for Lua benchmark\r\n\r\n* Updated BDN test infrastructure to match the new BDN org.\r\n\r\n* Fix bug in ObjectOperations\r\n\r\n* Set max items on chart to 50 ... can modify later if want\r\n\r\n* Added the run on push to main\r\n\r\n* Put Performance Pipeline back\r\n\r\n* Fixed the default case when no parameters sent to ps1\r\n\r\n* Cleaned up config files:\r\nhave shorter names for values\r\nnot have configuration or framework (moved to ps1 file)\r\nnot have windows / linux differnce in expected\r\nMoved acceptable allocated range to script\r\n\r\nmodified the script:\r\nto only load values for the specific test instead of looking for all values\r\nchanges to match the changes in config (shorter names, etc)\r\n\r\n* Big update to where moved to a single config file and the ps1 file does not need to be updated when new BDNs are added.\r\n\r\n* Added workflow_dispatch: to deploy website yml so we can manually deploy website if we want\r\n\r\n* Updated alert-threshold from 150% to 140%. If too many false positives we can raise it back. Also, removed darrenge from the alert CC line as no need for that.\r\n\r\n* Removed the commit comment / comparison to previous commit task. Still will get  summary data in the specific workflow run and still uploads data to charts (when pushing to main).\r\n\r\n* Minor update - comments only",
          "timestamp": "2024-12-11T11:29:32-08:00",
          "tree_id": "a262ac843488b7afb61ad91dfb2a488917243391",
          "url": "https://github.com/microsoft/garnet/commit/dd766248719caf2817592e988a5e67edc22b511b"
        },
        "date": 1733945699695,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35231.01152692522,
            "unit": "ns",
            "range": "± 63.123414397766815"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35631.76785982572,
            "unit": "ns",
            "range": "± 83.41572140388364"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30711.87764485677,
            "unit": "ns",
            "range": "± 38.20843164837711"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29761.76055908203,
            "unit": "ns",
            "range": "± 16.48970854221574"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aabc0bb831f2313bce41c43c29c9c2b0e434cb00",
          "message": "handle uninitialized epoch value merge (#874)\n\n* handle uninitialized epoch value merge\r\n\r\n* release 1.0.47",
          "timestamp": "2024-12-11T14:03:36-08:00",
          "tree_id": "ca83e06a72e78b6bab3872148b9e3eb5cb476269",
          "url": "https://github.com/microsoft/garnet/commit/aabc0bb831f2313bce41c43c29c9c2b0e434cb00"
        },
        "date": 1733954933140,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35183.64140437199,
            "unit": "ns",
            "range": "± 43.91052235097413"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36228.62418038504,
            "unit": "ns",
            "range": "± 41.29936949306911"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30541.725667317707,
            "unit": "ns",
            "range": "± 38.66615234094002"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30239.96840256911,
            "unit": "ns",
            "range": "± 23.811136403012576"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf1d4b66c442284f95c8db51e57274ba07316561",
          "message": "Bump nanoid from 3.3.7 to 3.3.8 in /website (#873)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: darrenge <darrenge@microsoft.com>",
          "timestamp": "2024-12-11T15:37:40-08:00",
          "tree_id": "1d3dbe6f308895a822d913fd3960c803796cb264",
          "url": "https://github.com/microsoft/garnet/commit/cf1d4b66c442284f95c8db51e57274ba07316561"
        },
        "date": 1733960543151,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35659.20715332031,
            "unit": "ns",
            "range": "± 64.99989349672872"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36502.40091959635,
            "unit": "ns",
            "range": "± 38.927651267151866"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30768.25002034505,
            "unit": "ns",
            "range": "± 27.043372744217884"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29802.15563092913,
            "unit": "ns",
            "range": "± 108.97475896849727"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d4c7448569063ea786802a0580acf465108e037",
          "message": "Add ReadOnly Support for IDevice (#870)\n\n* add readOnly flag in streamProvider for LocalStorageDevice\r\n\r\n* add linux readOnly flag for managed device\r\n\r\n* add explicit readOnly assignment for parameter",
          "timestamp": "2024-12-12T13:03:41-08:00",
          "tree_id": "3d591691e9ac0cfb714d98096a0580abab554b23",
          "url": "https://github.com/microsoft/garnet/commit/0d4c7448569063ea786802a0580acf465108e037"
        },
        "date": 1734037762836,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36939.19154575893,
            "unit": "ns",
            "range": "± 359.79236645503295"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 39209.50703938802,
            "unit": "ns",
            "range": "± 308.4202090554712"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 33406.21724446615,
            "unit": "ns",
            "range": "± 398.6167973776636"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 32963.14261300223,
            "unit": "ns",
            "range": "± 284.6650855830644"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2c2261c72948136f6af9dfdfefc86ebb02c686a",
          "message": "CustomCommandManager + CustomCommandManagerSession to use auto-expandable maps (#848)\n\n* wip\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* Comments + tests\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* fix\r\n\r\n* format\r\n\r\n* Adding a non-concurrent ExpandableMap\r\n\r\n* small fix\r\n\r\n* Switching to SingleWriterMultiReaderLock\r\n\r\n* Some thread-safety related fixes\r\n\r\n* Added some async tests for command registration\r\n\r\n* small bugfixes\r\n\r\n* format",
          "timestamp": "2024-12-12T18:49:23-08:00",
          "tree_id": "27ea42b0a4d6b834a7f450d12100d29e8b94f077",
          "url": "https://github.com/microsoft/garnet/commit/f2c2261c72948136f6af9dfdfefc86ebb02c686a"
        },
        "date": 1734058472606,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35505.49774169922,
            "unit": "ns",
            "range": "± 23.664529744825447"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 41335.62316894531,
            "unit": "ns",
            "range": "± 66.15817402671948"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31436.942545572918,
            "unit": "ns",
            "range": "± 27.01281700508599"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30043.15216064453,
            "unit": "ns",
            "range": "± 35.10359186313279"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "kmontrose@microsoft.com",
            "name": "kevin-montrose",
            "username": "kevin-montrose"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa004d372a23731e3e5f0fa65d701c4a4d62b381",
          "message": "Fixes for SCRIPT commands and behavior (#860)\n\n* fix FastBasicRespCommandsInfo construction and lookup; which incidentally fixes EVALSHA when scripting is enabled\r\n\r\n* fix MultiKeySlotVerify - keys past the second were not correctly visited\r\n\r\n* break SCRIPT into appropriate subcommands; update command info; fix SCRIPT EXISTS to match Redis behavior; tests for SCRIPT|* ACLs; DRY up SCRIPT command implementations\r\n\r\n* test script failures, match Redis error messages\r\n\r\n* remove byte[] allocations from evalsha path (amongst others); should get the Lua overhead down to just the NLua + locking stuff\r\n\r\n* add test for multi-hash version of SCRIPT|EXIST; fix bug where hash casing matters (matching Redis by defaulting to upper case hashes values); remove debug code\r\n\r\n* fix formatting\r\n\r\n* uppercase some test cases I missed\r\n\r\n* add EVALSHA to cluster slot tests\r\n\r\n* restore lower case hashes; erroneously thought Redis used upper case\r\n\r\n* add ScriptOperations to benchmark this change\r\n\r\n* formatting fixes\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-12T23:23:53-08:00",
          "tree_id": "8c0664ade6b6572a8af295961a2d61a846b60756",
          "url": "https://github.com/microsoft/garnet/commit/aa004d372a23731e3e5f0fa65d701c4a4d62b381"
        },
        "date": 1734074897156,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34496.04056222098,
            "unit": "ns",
            "range": "± 37.01008344819957"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36314.82426570012,
            "unit": "ns",
            "range": "± 82.97044239637255"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30686.0355922154,
            "unit": "ns",
            "range": "± 38.781728118645084"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30343.80144391741,
            "unit": "ns",
            "range": "± 33.014863095444305"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca0222960f0145302eb1fc9896f680f9aff5a4d1",
          "message": "Streaming snapshot checkpoint in Tsavorite (#824)\n\n* Mild refactor in preparation\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* fix tests to not cover steaming snapshot as it is not a traditional checkpoint\r\n\r\n* add unit test\r\n\r\n* fix tests\r\n\r\n* fix test\r\n\r\n* updates\r\n\r\n* Support maxAddress during liveness checks\r\n\r\n* improvements to api\r\n\r\n* Add SetVersion API\r\n\r\n* more checks\r\n\r\n* add comment\r\n\r\n* add comments",
          "timestamp": "2024-12-13T10:25:49-08:00",
          "tree_id": "917be4f308af8da9ec7782faa5069a09f2b873c5",
          "url": "https://github.com/microsoft/garnet/commit/ca0222960f0145302eb1fc9896f680f9aff5a4d1"
        },
        "date": 1734114644249,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34407.08748953683,
            "unit": "ns",
            "range": "± 51.16392430172031"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35762.91084289551,
            "unit": "ns",
            "range": "± 666.2198325713799"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31325.515747070312,
            "unit": "ns",
            "range": "± 23.556805045301967"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29802.06059047154,
            "unit": "ns",
            "range": "± 96.77267191690427"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f679b0b683e4e94fa2a3ebb2689708ec2efee74",
          "message": "Added BDN for all hash commands (#879)\n\n* Added BDN for all hash commands\r\n\r\n* Moved BDN of hash set to separate class",
          "timestamp": "2024-12-13T12:50:11-08:00",
          "tree_id": "66c04dc8b338f40aeb360419fc1953dcc219abbc",
          "url": "https://github.com/microsoft/garnet/commit/3f679b0b683e4e94fa2a3ebb2689708ec2efee74"
        },
        "date": 1734123257699,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34413.578142438615,
            "unit": "ns",
            "range": "± 47.88722361436912"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35597.464861188615,
            "unit": "ns",
            "range": "± 50.060757221708386"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30643.378624549277,
            "unit": "ns",
            "range": "± 26.933333696276094"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30120.384623209637,
            "unit": "ns",
            "range": "± 48.38764528418534"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "178dc21b572263c4421e2602e41cc243cb94f507",
          "message": "Fix writing output for scan (#880)\n\n* Writing output for scan was not handling output buffer (dcurr, dend) correctly. Also, it was not handling large keys correctly.\r\n\r\n* update version",
          "timestamp": "2024-12-13T13:55:49-08:00",
          "tree_id": "1966c990a96fa84a42747ad14ce5480535196e57",
          "url": "https://github.com/microsoft/garnet/commit/178dc21b572263c4421e2602e41cc243cb94f507"
        },
        "date": 1734127260462,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35640.77279227121,
            "unit": "ns",
            "range": "± 41.58697469592664"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35228.52870396205,
            "unit": "ns",
            "range": "± 101.47584349736589"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31510.585327148438,
            "unit": "ns",
            "range": "± 37.47316591056229"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30232.608032226562,
            "unit": "ns",
            "range": "± 21.75489049541768"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1ce0dafecaba15335e8e0767a6eeb441b72e56c",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#862)\n\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T14:08:03-08:00",
          "tree_id": "b2aa23d9235558527754332fab728fa03d60007b",
          "url": "https://github.com/microsoft/garnet/commit/f1ce0dafecaba15335e8e0767a6eeb441b72e56c"
        },
        "date": 1734128000024,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35196.244303385414,
            "unit": "ns",
            "range": "± 37.664136499031045"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35741.835239955355,
            "unit": "ns",
            "range": "± 88.099518493931"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30949.528401692707,
            "unit": "ns",
            "range": "± 29.424194018469024"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30814.778355189734,
            "unit": "ns",
            "range": "± 28.162306963012945"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132256795,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36095.56509164663,
            "unit": "ns",
            "range": "± 86.74661398972759"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37857.70743233817,
            "unit": "ns",
            "range": "± 74.36234422868483"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31529.040120442707,
            "unit": "ns",
            "range": "± 27.170961281859054"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29857.222638811385,
            "unit": "ns",
            "range": "± 43.18995606026196"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734133914244,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34766.38700045072,
            "unit": "ns",
            "range": "± 26.425005762797884"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35931.94087101863,
            "unit": "ns",
            "range": "± 93.37348985527404"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32134.933302137586,
            "unit": "ns",
            "range": "± 1065.5826374107655"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29631.740010579426,
            "unit": "ns",
            "range": "± 29.79259381281045"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377200246,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35017.289079938615,
            "unit": "ns",
            "range": "± 42.60543619047139"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35643.835957845055,
            "unit": "ns",
            "range": "± 256.62906421243395"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30475.752912248885,
            "unit": "ns",
            "range": "± 29.501324358575946"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29652.95908610026,
            "unit": "ns",
            "range": "± 25.879932107325835"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392603986,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34991.866193498885,
            "unit": "ns",
            "range": "± 51.21874423236381"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 43327.36685616629,
            "unit": "ns",
            "range": "± 63.25931401762376"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31102.151925223214,
            "unit": "ns",
            "range": "± 38.83744306115426"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30192.11600167411,
            "unit": "ns",
            "range": "± 91.0608750489367"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483565380,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34960.81237792969,
            "unit": "ns",
            "range": "± 214.10384320891606"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36996.79659329928,
            "unit": "ns",
            "range": "± 98.30084304352089"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32588.295288085938,
            "unit": "ns",
            "range": "± 87.29314338238345"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30977.762654622395,
            "unit": "ns",
            "range": "± 172.8552055724161"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559418631,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35558.997286283055,
            "unit": "ns",
            "range": "± 23.590929515735194"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35692.83360072545,
            "unit": "ns",
            "range": "± 53.69414202216921"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31272.916666666668,
            "unit": "ns",
            "range": "± 27.86453993044973"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29982.713521321613,
            "unit": "ns",
            "range": "± 130.79062076241846"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578690221,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 37480.01525878906,
            "unit": "ns",
            "range": "± 150.71194676104568"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35274.66561453683,
            "unit": "ns",
            "range": "± 50.17629806352062"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31196.74095740685,
            "unit": "ns",
            "range": "± 41.39014496297693"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30593.71877817007,
            "unit": "ns",
            "range": "± 85.77590099051973"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734595944136,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35014.723307291664,
            "unit": "ns",
            "range": "± 81.65589140519104"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35464.253743489586,
            "unit": "ns",
            "range": "± 38.613294015940376"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31004.425659179688,
            "unit": "ns",
            "range": "± 31.779518987489894"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30026.26015799386,
            "unit": "ns",
            "range": "± 65.73755922288645"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643345355,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35080.750732421875,
            "unit": "ns",
            "range": "± 46.392748688877084"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35846.47674560547,
            "unit": "ns",
            "range": "± 42.69699322807037"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31149.076625279016,
            "unit": "ns",
            "range": "± 31.39952806094743"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29823.347909109933,
            "unit": "ns",
            "range": "± 26.7927398830035"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647669081,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34400.39530436198,
            "unit": "ns",
            "range": "± 50.51449010669611"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35617.90684291295,
            "unit": "ns",
            "range": "± 37.575184348243226"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30907.918701171875,
            "unit": "ns",
            "range": "± 158.8119871154085"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29682.94189453125,
            "unit": "ns",
            "range": "± 150.81653094320671"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652423530,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36193.30491286058,
            "unit": "ns",
            "range": "± 47.43407909278956"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36894.24525669643,
            "unit": "ns",
            "range": "± 27.856875576285088"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30704.66570172991,
            "unit": "ns",
            "range": "± 22.06783702310936"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30230.61043875558,
            "unit": "ns",
            "range": "± 24.70081974753666"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747051524,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34782.75800432478,
            "unit": "ns",
            "range": "± 76.37723640341733"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37183.35178920201,
            "unit": "ns",
            "range": "± 57.16298641691147"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30999.64773995536,
            "unit": "ns",
            "range": "± 25.399307163627384"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 31006.55517578125,
            "unit": "ns",
            "range": "± 57.55856761039118"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906723404,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34635.95755440848,
            "unit": "ns",
            "range": "± 23.167586913751695"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36774.24447195871,
            "unit": "ns",
            "range": "± 58.87991859153299"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30753.353881835938,
            "unit": "ns",
            "range": "± 40.62420579855332"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29914.41476004464,
            "unit": "ns",
            "range": "± 61.95757461752689"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407534634,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34350.25939941406,
            "unit": "ns",
            "range": "± 60.53643957059713"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37021.62569486178,
            "unit": "ns",
            "range": "± 108.10867250968616"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31407.405744280135,
            "unit": "ns",
            "range": "± 37.895115595114575"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30568.523559570312,
            "unit": "ns",
            "range": "± 97.87894849047893"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187245988,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35377.063424246655,
            "unit": "ns",
            "range": "± 39.80219757583295"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35548.69384765625,
            "unit": "ns",
            "range": "± 46.002057262234125"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30579.362253042367,
            "unit": "ns",
            "range": "± 42.23747243528301"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30352.6127406529,
            "unit": "ns",
            "range": "± 246.38784602441612"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283024525,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35130.9579031808,
            "unit": "ns",
            "range": "± 36.825373207501855"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35273.45406668527,
            "unit": "ns",
            "range": "± 106.83336200993601"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 32243.893432617188,
            "unit": "ns",
            "range": "± 310.08479890195207"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30037.77048746745,
            "unit": "ns",
            "range": "± 108.49562627362924"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376101154,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34553.358677455355,
            "unit": "ns",
            "range": "± 61.81262755743221"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35779.15696364183,
            "unit": "ns",
            "range": "± 37.398709357281625"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30836.241032527043,
            "unit": "ns",
            "range": "± 22.461642261705368"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30871.488647460938,
            "unit": "ns",
            "range": "± 48.38692683812301"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461810166,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 36393.14982096354,
            "unit": "ns",
            "range": "± 60.9107789969365"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36621.2168375651,
            "unit": "ns",
            "range": "± 52.12082173313824"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30956.317138671875,
            "unit": "ns",
            "range": "± 41.420797760003914"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29812.71453857422,
            "unit": "ns",
            "range": "± 70.44759034729871"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479644532,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34237.19569614955,
            "unit": "ns",
            "range": "± 26.708929212536866"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 35661.34687151228,
            "unit": "ns",
            "range": "± 57.09468555060798"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31491.13006591797,
            "unit": "ns",
            "range": "± 36.69356557191656"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30453.082275390625,
            "unit": "ns",
            "range": "± 39.135693165158834"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553435060,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34345.5312093099,
            "unit": "ns",
            "range": "± 25.04604578099529"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36776.79530552455,
            "unit": "ns",
            "range": "± 66.48557247620052"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30652.733503069197,
            "unit": "ns",
            "range": "± 19.734352271524866"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30678.165108816964,
            "unit": "ns",
            "range": "± 32.122490680423"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655666702,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34743.52373395647,
            "unit": "ns",
            "range": "± 58.6786500508839"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36440.464430588945,
            "unit": "ns",
            "range": "± 70.84605812028086"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31433.589390345984,
            "unit": "ns",
            "range": "± 27.85310217163006"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29765.448216029577,
            "unit": "ns",
            "range": "± 36.91728188306699"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254110392,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 33999.5356633113,
            "unit": "ns",
            "range": "± 42.07932911487104"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36255.797903878345,
            "unit": "ns",
            "range": "± 34.06701638697097"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31950.56610107422,
            "unit": "ns",
            "range": "± 32.81387393570576"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 29789.874703543526,
            "unit": "ns",
            "range": "± 108.5198562182462"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788760328,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35692.23109654018,
            "unit": "ns",
            "range": "± 40.50489838972942"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36011.87090192522,
            "unit": "ns",
            "range": "± 46.56338402076107"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31083.106892903645,
            "unit": "ns",
            "range": "± 183.75716049759617"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30721.636149088543,
            "unit": "ns",
            "range": "± 42.09322151603886"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050553014,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 34573.43183244978,
            "unit": "ns",
            "range": "± 111.93137530985777"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 36726.34460449219,
            "unit": "ns",
            "range": "± 62.72983628430508"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 30259.23309326172,
            "unit": "ns",
            "range": "± 15.47818838466454"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30539.984566824776,
            "unit": "ns",
            "range": "± 59.70107633905727"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369036817,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Get(Params: None)",
            "value": 35068.851579938615,
            "unit": "ns",
            "range": "± 49.6234962429625"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.Set(Params: None)",
            "value": 37150.39498465402,
            "unit": "ns",
            "range": "± 45.939169161014355"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MGet(Params: None)",
            "value": 31315.449829101562,
            "unit": "ns",
            "range": "± 36.80392528975144"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterMigrate.MSet(Params: None)",
            "value": 30755.152079264324,
            "unit": "ns",
            "range": "± 34.6916623473927"
          }
        ]
      }
    ],
    "Operations.ObjectOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd766248719caf2817592e988a5e67edc22b511b",
          "message": "Implementing BDN Perf pipeline (#758)\n\n* The CI scripts, YML and config files to check perf using BDN benchmarking.  Also, a fix in ClusterBench for and renamed Lua Runner benchmarking\r\n\r\n* Cleaned up the debug message and updated couple expected values\r\n\r\n* Updated SAddRem - windows - to 130 from 118.  Also removed unncesssary build statement in YML\r\n\r\n* Proof of concept for Performance run on ADO using BDN\r\n\r\n* Comment out number of Cores check so can try proof of concept on ADO perf machines\r\n\r\n* Getting close to having BDN working\r\n\r\n* Fixed RespLuaStress\r\n\r\n* Fixed issue in Lua Runner Stress\r\n\r\n* Updated config values, set charting and commit comment as separate tasks\r\n\r\n* Updated config values\r\n\r\n* Minor change to YML (remove pull requests) and updated LuaRunner config value\r\n\r\n* One more config value fix\r\n\r\n* Added a task to do the push\r\n\r\n* Putting back to push chart in the chart task and not a separate one\r\n\r\n* Moved the permissions to full workflow\r\n\r\n* Just minor to add commits\r\n\r\n* Adding actions: write permit since actions default to read only\r\n\r\n* Set up the commit comment for BDN as well as summary to show current vs previous BDN perf numbers\r\n\r\n* A few fixes\r\n\r\n* Updated BDN perf YML, config files and ps1 script\r\n\r\n* Versioning issue with BDN test files, fixed now\r\n\r\n* Bump threshold to 35% (135%) to trigger perf failure\r\n\r\n* Set to Linux only to reduce number of consectutive tests which caused push collisions with GitHub\r\n\r\n* Just Windows only test run\r\n\r\n* Putting it back to both OS for the tests\r\n\r\n* Set threshhold to 50% (150%) as seeing BDN ran twice on same code sometimes is in 40%+ range of difference.\r\n\r\n* Big change where using continuousbenchmark branch for all data for continuous benchmarking and also changed to where script is only checking allocated values and let github-action-benchmark compare mean values\r\n\r\n* Updated ClusterBench to get main changes\r\n\r\n* Fix issue with Cluster BDN is not able to access folder so setting to tmp which does have access\r\n\r\n* Bumping threshold to 50% (150%) as mean value in RespParseStress can vary into the 40% from run to run.\r\n\r\n* First update\r\n\r\n* Hiding the Gen0 column for Lua benchmark\r\n\r\n* Updated BDN test infrastructure to match the new BDN org.\r\n\r\n* Fix bug in ObjectOperations\r\n\r\n* Set max items on chart to 50 ... can modify later if want\r\n\r\n* Added the run on push to main\r\n\r\n* Put Performance Pipeline back\r\n\r\n* Fixed the default case when no parameters sent to ps1\r\n\r\n* Cleaned up config files:\r\nhave shorter names for values\r\nnot have configuration or framework (moved to ps1 file)\r\nnot have windows / linux differnce in expected\r\nMoved acceptable allocated range to script\r\n\r\nmodified the script:\r\nto only load values for the specific test instead of looking for all values\r\nchanges to match the changes in config (shorter names, etc)\r\n\r\n* Big update to where moved to a single config file and the ps1 file does not need to be updated when new BDNs are added.\r\n\r\n* Added workflow_dispatch: to deploy website yml so we can manually deploy website if we want\r\n\r\n* Updated alert-threshold from 150% to 140%. If too many false positives we can raise it back. Also, removed darrenge from the alert CC line as no need for that.\r\n\r\n* Removed the commit comment / comparison to previous commit task. Still will get  summary data in the specific workflow run and still uploads data to charts (when pushing to main).\r\n\r\n* Minor update - comments only",
          "timestamp": "2024-12-11T11:29:32-08:00",
          "tree_id": "a262ac843488b7afb61ad91dfb2a488917243391",
          "url": "https://github.com/microsoft/garnet/commit/dd766248719caf2817592e988a5e67edc22b511b"
        },
        "date": 1733945738338,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 144728.39332798548,
            "unit": "ns",
            "range": "± 667.6109749202394"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 132743.62956891741,
            "unit": "ns",
            "range": "± 1136.4738013828216"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 128313.80084228516,
            "unit": "ns",
            "range": "± 406.89306730997146"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 156098.4109700521,
            "unit": "ns",
            "range": "± 1408.4105144527127"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 163059.17862955728,
            "unit": "ns",
            "range": "± 730.035540389783"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 149673.6108049665,
            "unit": "ns",
            "range": "± 387.25518984762647"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 143921.6282610212,
            "unit": "ns",
            "range": "± 1156.892797393514"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 166792.2929513114,
            "unit": "ns",
            "range": "± 1860.802954755072"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 143451.69231305804,
            "unit": "ns",
            "range": "± 1226.2578893810407"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 139975.39958844866,
            "unit": "ns",
            "range": "± 696.6439726906873"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 129606.39870042067,
            "unit": "ns",
            "range": "± 424.89048378304926"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 163564.05001627604,
            "unit": "ns",
            "range": "± 1826.8429241037347"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aabc0bb831f2313bce41c43c29c9c2b0e434cb00",
          "message": "handle uninitialized epoch value merge (#874)\n\n* handle uninitialized epoch value merge\r\n\r\n* release 1.0.47",
          "timestamp": "2024-12-11T14:03:36-08:00",
          "tree_id": "ca83e06a72e78b6bab3872148b9e3eb5cb476269",
          "url": "https://github.com/microsoft/garnet/commit/aabc0bb831f2313bce41c43c29c9c2b0e434cb00"
        },
        "date": 1733954979860,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 144355.9291788737,
            "unit": "ns",
            "range": "± 444.548660894369"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 130746.7486328125,
            "unit": "ns",
            "range": "± 1190.0352491957597"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 128650.45971679688,
            "unit": "ns",
            "range": "± 182.01858073842848"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 155837.85543619792,
            "unit": "ns",
            "range": "± 2306.604408858616"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 160598.79954427082,
            "unit": "ns",
            "range": "± 2167.27996061447"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 150458.03397623697,
            "unit": "ns",
            "range": "± 1287.4763675276777"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 153106.2109781901,
            "unit": "ns",
            "range": "± 384.9860720807187"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 172461.94659016927,
            "unit": "ns",
            "range": "± 1410.619128742746"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 145173.95924595423,
            "unit": "ns",
            "range": "± 376.28048367915505"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 133717.6591715495,
            "unit": "ns",
            "range": "± 994.890082158522"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 128395.35541643415,
            "unit": "ns",
            "range": "± 1847.2453674610779"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 159900.15244140624,
            "unit": "ns",
            "range": "± 1856.5519960606166"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf1d4b66c442284f95c8db51e57274ba07316561",
          "message": "Bump nanoid from 3.3.7 to 3.3.8 in /website (#873)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: darrenge <darrenge@microsoft.com>",
          "timestamp": "2024-12-11T15:37:40-08:00",
          "tree_id": "1d3dbe6f308895a822d913fd3960c803796cb264",
          "url": "https://github.com/microsoft/garnet/commit/cf1d4b66c442284f95c8db51e57274ba07316561"
        },
        "date": 1733960627432,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 144334.12056477866,
            "unit": "ns",
            "range": "± 1515.2035373668623"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 134671.63266225962,
            "unit": "ns",
            "range": "± 135.75866586127302"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 127227.7950032552,
            "unit": "ns",
            "range": "± 699.1427052001696"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 156155.8666469029,
            "unit": "ns",
            "range": "± 1607.5118124222354"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 161778.13122558594,
            "unit": "ns",
            "range": "± 322.1698493761811"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 150154.54260253906,
            "unit": "ns",
            "range": "± 1258.0014383452253"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 143134.39482770648,
            "unit": "ns",
            "range": "± 1219.050775416086"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 177147.0678100586,
            "unit": "ns",
            "range": "± 757.8421587461456"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 154641.32880108172,
            "unit": "ns",
            "range": "± 225.31674704870136"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 140713.3338704427,
            "unit": "ns",
            "range": "± 1286.5676513734927"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 128507.48196847098,
            "unit": "ns",
            "range": "± 929.2610338223931"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 173150.70163574218,
            "unit": "ns",
            "range": "± 1532.4151059223332"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d4c7448569063ea786802a0580acf465108e037",
          "message": "Add ReadOnly Support for IDevice (#870)\n\n* add readOnly flag in streamProvider for LocalStorageDevice\r\n\r\n* add linux readOnly flag for managed device\r\n\r\n* add explicit readOnly assignment for parameter",
          "timestamp": "2024-12-12T13:03:41-08:00",
          "tree_id": "3d591691e9ac0cfb714d98096a0580abab554b23",
          "url": "https://github.com/microsoft/garnet/commit/0d4c7448569063ea786802a0580acf465108e037"
        },
        "date": 1734037795898,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 148464.58318219866,
            "unit": "ns",
            "range": "± 874.1941433118228"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 134592.05627441406,
            "unit": "ns",
            "range": "± 292.1635613708191"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 127354.80939592634,
            "unit": "ns",
            "range": "± 156.3658875286149"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 169325.0433000837,
            "unit": "ns",
            "range": "± 1504.2844939292513"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 161231.87925368088,
            "unit": "ns",
            "range": "± 1045.9915833779514"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 152644.43380301338,
            "unit": "ns",
            "range": "± 663.898398234611"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 143336.85180664062,
            "unit": "ns",
            "range": "± 851.362730846135"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 181209.05179268974,
            "unit": "ns",
            "range": "± 1470.8148327249928"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 143056.149937221,
            "unit": "ns",
            "range": "± 1087.4822621050291"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 134394.11490885416,
            "unit": "ns",
            "range": "± 271.69488618873754"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 134852.583984375,
            "unit": "ns",
            "range": "± 2097.3311475902037"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 157174.97017728366,
            "unit": "ns",
            "range": "± 741.20837896449"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2c2261c72948136f6af9dfdfefc86ebb02c686a",
          "message": "CustomCommandManager + CustomCommandManagerSession to use auto-expandable maps (#848)\n\n* wip\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* Comments + tests\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* fix\r\n\r\n* format\r\n\r\n* Adding a non-concurrent ExpandableMap\r\n\r\n* small fix\r\n\r\n* Switching to SingleWriterMultiReaderLock\r\n\r\n* Some thread-safety related fixes\r\n\r\n* Added some async tests for command registration\r\n\r\n* small bugfixes\r\n\r\n* format",
          "timestamp": "2024-12-12T18:49:23-08:00",
          "tree_id": "27ea42b0a4d6b834a7f450d12100d29e8b94f077",
          "url": "https://github.com/microsoft/garnet/commit/f2c2261c72948136f6af9dfdfefc86ebb02c686a"
        },
        "date": 1734058530214,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 147067.677734375,
            "unit": "ns",
            "range": "± 472.2896675726806"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 129246.42373422477,
            "unit": "ns",
            "range": "± 224.92611041064657"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 131393.38916015625,
            "unit": "ns",
            "range": "± 848.3700200800151"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 158191.18684895834,
            "unit": "ns",
            "range": "± 1568.1100311511868"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 165057.67190987724,
            "unit": "ns",
            "range": "± 490.1653366401623"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 149379.690234375,
            "unit": "ns",
            "range": "± 859.3018045604219"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 146170.82404436384,
            "unit": "ns",
            "range": "± 1007.5720992857634"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 173845.9683268229,
            "unit": "ns",
            "range": "± 2924.3494104390998"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 147606.0072893415,
            "unit": "ns",
            "range": "± 379.1247039366477"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 129868.9307454427,
            "unit": "ns",
            "range": "± 829.0132707099801"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 132180.29985700335,
            "unit": "ns",
            "range": "± 732.4948394897012"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 154374.48948567707,
            "unit": "ns",
            "range": "± 1296.51661701581"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "kmontrose@microsoft.com",
            "name": "kevin-montrose",
            "username": "kevin-montrose"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa004d372a23731e3e5f0fa65d701c4a4d62b381",
          "message": "Fixes for SCRIPT commands and behavior (#860)\n\n* fix FastBasicRespCommandsInfo construction and lookup; which incidentally fixes EVALSHA when scripting is enabled\r\n\r\n* fix MultiKeySlotVerify - keys past the second were not correctly visited\r\n\r\n* break SCRIPT into appropriate subcommands; update command info; fix SCRIPT EXISTS to match Redis behavior; tests for SCRIPT|* ACLs; DRY up SCRIPT command implementations\r\n\r\n* test script failures, match Redis error messages\r\n\r\n* remove byte[] allocations from evalsha path (amongst others); should get the Lua overhead down to just the NLua + locking stuff\r\n\r\n* add test for multi-hash version of SCRIPT|EXIST; fix bug where hash casing matters (matching Redis by defaulting to upper case hashes values); remove debug code\r\n\r\n* fix formatting\r\n\r\n* uppercase some test cases I missed\r\n\r\n* add EVALSHA to cluster slot tests\r\n\r\n* restore lower case hashes; erroneously thought Redis used upper case\r\n\r\n* add ScriptOperations to benchmark this change\r\n\r\n* formatting fixes\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-12T23:23:53-08:00",
          "tree_id": "8c0664ade6b6572a8af295961a2d61a846b60756",
          "url": "https://github.com/microsoft/garnet/commit/aa004d372a23731e3e5f0fa65d701c4a4d62b381"
        },
        "date": 1734075010063,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 146741.77053598256,
            "unit": "ns",
            "range": "± 618.0743879402081"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 134445.08349609375,
            "unit": "ns",
            "range": "± 271.48172024067435"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 129599.96943010602,
            "unit": "ns",
            "range": "± 1364.0615325836186"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 156585.3662283761,
            "unit": "ns",
            "range": "± 839.3469168523584"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 161458.125,
            "unit": "ns",
            "range": "± 873.9017938265946"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 151577.17471078725,
            "unit": "ns",
            "range": "± 342.8506840501759"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 142169.42276204427,
            "unit": "ns",
            "range": "± 1943.8547741960072"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 164776.23733723958,
            "unit": "ns",
            "range": "± 1645.816683555271"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 145753.1678936298,
            "unit": "ns",
            "range": "± 290.9458896801717"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 137653.94051106772,
            "unit": "ns",
            "range": "± 322.05133238710334"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 125382.53315429688,
            "unit": "ns",
            "range": "± 1171.3355604994906"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 158078.58188476562,
            "unit": "ns",
            "range": "± 1952.107670038775"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca0222960f0145302eb1fc9896f680f9aff5a4d1",
          "message": "Streaming snapshot checkpoint in Tsavorite (#824)\n\n* Mild refactor in preparation\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* fix tests to not cover steaming snapshot as it is not a traditional checkpoint\r\n\r\n* add unit test\r\n\r\n* fix tests\r\n\r\n* fix test\r\n\r\n* updates\r\n\r\n* Support maxAddress during liveness checks\r\n\r\n* improvements to api\r\n\r\n* Add SetVersion API\r\n\r\n* more checks\r\n\r\n* add comment\r\n\r\n* add comments",
          "timestamp": "2024-12-13T10:25:49-08:00",
          "tree_id": "917be4f308af8da9ec7782faa5069a09f2b873c5",
          "url": "https://github.com/microsoft/garnet/commit/ca0222960f0145302eb1fc9896f680f9aff5a4d1"
        },
        "date": 1734114720259,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 147045.70027669272,
            "unit": "ns",
            "range": "± 394.1003510027787"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 134655.0275065104,
            "unit": "ns",
            "range": "± 470.02538217332"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 126456.59610421317,
            "unit": "ns",
            "range": "± 493.42064405149154"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 155118.07929338727,
            "unit": "ns",
            "range": "± 2114.3555332167275"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 165795.89330240886,
            "unit": "ns",
            "range": "± 1431.3439374055674"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 167848.89666341146,
            "unit": "ns",
            "range": "± 380.2585446122252"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 145408.5904017857,
            "unit": "ns",
            "range": "± 1482.2963678156689"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 166172.34111328126,
            "unit": "ns",
            "range": "± 810.5453549765443"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 149636.82205636162,
            "unit": "ns",
            "range": "± 369.4579468428834"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 138517.06323242188,
            "unit": "ns",
            "range": "± 1053.4252028880742"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 128154.68358435997,
            "unit": "ns",
            "range": "± 1011.0937787745179"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 156840.4056640625,
            "unit": "ns",
            "range": "± 1747.0456797118907"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f679b0b683e4e94fa2a3ebb2689708ec2efee74",
          "message": "Added BDN for all hash commands (#879)\n\n* Added BDN for all hash commands\r\n\r\n* Moved BDN of hash set to separate class",
          "timestamp": "2024-12-13T12:50:11-08:00",
          "tree_id": "66c04dc8b338f40aeb360419fc1953dcc219abbc",
          "url": "https://github.com/microsoft/garnet/commit/3f679b0b683e4e94fa2a3ebb2689708ec2efee74"
        },
        "date": 1734123276671,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 145197.21875,
            "unit": "ns",
            "range": "± 755.5776814970166"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 134201.71975911458,
            "unit": "ns",
            "range": "± 1080.8675993721258"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 124623.5852708083,
            "unit": "ns",
            "range": "± 287.7316606212516"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 163068.06234975962,
            "unit": "ns",
            "range": "± 535.1827864854533"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 147421.36254882812,
            "unit": "ns",
            "range": "± 533.8511987711012"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 145834.66429036457,
            "unit": "ns",
            "range": "± 663.4813670138681"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 146406.7286295573,
            "unit": "ns",
            "range": "± 1096.6424990579692"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 141871.45576171874,
            "unit": "ns",
            "range": "± 647.9589480369611"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 129557.92365373884,
            "unit": "ns",
            "range": "± 1478.0881763022305"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "178dc21b572263c4421e2602e41cc243cb94f507",
          "message": "Fix writing output for scan (#880)\n\n* Writing output for scan was not handling output buffer (dcurr, dend) correctly. Also, it was not handling large keys correctly.\r\n\r\n* update version",
          "timestamp": "2024-12-13T13:55:49-08:00",
          "tree_id": "1966c990a96fa84a42747ad14ce5480535196e57",
          "url": "https://github.com/microsoft/garnet/commit/178dc21b572263c4421e2602e41cc243cb94f507"
        },
        "date": 1734127232566,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 148808.72138671874,
            "unit": "ns",
            "range": "± 1100.796684842558"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 134395.17452298678,
            "unit": "ns",
            "range": "± 941.9285873341939"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 126998.00455147879,
            "unit": "ns",
            "range": "± 1114.1416355003169"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 165737.13863699776,
            "unit": "ns",
            "range": "± 1186.972648808962"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 151499.76246744793,
            "unit": "ns",
            "range": "± 1178.778108827621"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 143961.70407339244,
            "unit": "ns",
            "range": "± 773.761290381161"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 147308.7321026142,
            "unit": "ns",
            "range": "± 193.46386195834353"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 142932.91481526694,
            "unit": "ns",
            "range": "± 214.45303320628543"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 127996.12950032552,
            "unit": "ns",
            "range": "± 1214.0518845051618"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1ce0dafecaba15335e8e0767a6eeb441b72e56c",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#862)\n\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T14:08:03-08:00",
          "tree_id": "b2aa23d9235558527754332fab728fa03d60007b",
          "url": "https://github.com/microsoft/garnet/commit/f1ce0dafecaba15335e8e0767a6eeb441b72e56c"
        },
        "date": 1734127959166,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 145587.5902005709,
            "unit": "ns",
            "range": "± 640.6353555112221"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 134884.65919596356,
            "unit": "ns",
            "range": "± 1195.5399024486615"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 126631.40576171875,
            "unit": "ns",
            "range": "± 1223.726157148509"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 165465.23413085938,
            "unit": "ns",
            "range": "± 592.1732140121417"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 162370.4053955078,
            "unit": "ns",
            "range": "± 1026.355258878365"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 145692.57236891525,
            "unit": "ns",
            "range": "± 1955.0941028020723"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 144173.47855050224,
            "unit": "ns",
            "range": "± 280.2150212677339"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 135630.2940673828,
            "unit": "ns",
            "range": "± 911.6610059030398"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 127274.3854654948,
            "unit": "ns",
            "range": "± 1558.4335902124133"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132229666,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 145566.60442243304,
            "unit": "ns",
            "range": "± 1254.233186467935"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 132581.07631429037,
            "unit": "ns",
            "range": "± 246.69123983906763"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 127384.04912923177,
            "unit": "ns",
            "range": "± 1008.0190711432613"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 165181.683140346,
            "unit": "ns",
            "range": "± 496.7173221831663"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 160727.72725423178,
            "unit": "ns",
            "range": "± 378.48621233279437"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 149776.81434983475,
            "unit": "ns",
            "range": "± 724.3322950539765"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 150951.7583211263,
            "unit": "ns",
            "range": "± 347.89402713279827"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 146906.21271623884,
            "unit": "ns",
            "range": "± 948.2049118077787"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 127702.8850003756,
            "unit": "ns",
            "range": "± 697.2793785905457"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734133859727,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 146038.79979529747,
            "unit": "ns",
            "range": "± 990.2744445936086"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 133483.19339192708,
            "unit": "ns",
            "range": "± 1280.210878092559"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 127004.07920619419,
            "unit": "ns",
            "range": "± 1132.778433508933"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 162683.28981236048,
            "unit": "ns",
            "range": "± 1341.8894297745344"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 157723.68116978236,
            "unit": "ns",
            "range": "± 767.7419091994147"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 146393.85392252603,
            "unit": "ns",
            "range": "± 1860.8634267914633"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 146555.3283203125,
            "unit": "ns",
            "range": "± 1497.9847549603287"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 144313.95389498197,
            "unit": "ns",
            "range": "± 546.0870898164778"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 128286.98223005023,
            "unit": "ns",
            "range": "± 1301.0122035122845"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377152716,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 143503.64390211838,
            "unit": "ns",
            "range": "± 145.27100942354733"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 138710.1912516276,
            "unit": "ns",
            "range": "± 845.5114509781625"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 127620.65216936384,
            "unit": "ns",
            "range": "± 1246.2441783136305"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 162440.9580453726,
            "unit": "ns",
            "range": "± 555.9295638193214"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 150023.25010172525,
            "unit": "ns",
            "range": "± 394.85081561360374"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 150387.87758789063,
            "unit": "ns",
            "range": "± 369.0147153539714"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 146285.21546223958,
            "unit": "ns",
            "range": "± 1270.84176683415"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 138458.08855731672,
            "unit": "ns",
            "range": "± 486.9300159591556"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 128916.42420247397,
            "unit": "ns",
            "range": "± 1598.5143059302197"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392626003,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 144482.5581711989,
            "unit": "ns",
            "range": "± 1197.0536476226212"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 137301.17061941963,
            "unit": "ns",
            "range": "± 1616.8506614951602"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 129615.17148061898,
            "unit": "ns",
            "range": "± 1202.8248735096404"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 164300.39700520833,
            "unit": "ns",
            "range": "± 980.906778220457"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 153529.35084751673,
            "unit": "ns",
            "range": "± 1433.0625941367152"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 144468.8676106771,
            "unit": "ns",
            "range": "± 1634.4523626769858"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 146055.4584679237,
            "unit": "ns",
            "range": "± 250.5001736583408"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 133174.57392578124,
            "unit": "ns",
            "range": "± 561.2763612062146"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 139711.3309500558,
            "unit": "ns",
            "range": "± 797.8033007222023"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483559345,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 147130.1375732422,
            "unit": "ns",
            "range": "± 740.7144915495448"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 137640.972202846,
            "unit": "ns",
            "range": "± 339.93129812080554"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 127651.41911969866,
            "unit": "ns",
            "range": "± 596.179958657364"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 162851.87704031807,
            "unit": "ns",
            "range": "± 1171.7043427659414"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 150193.55275065106,
            "unit": "ns",
            "range": "± 1117.0638076647658"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 141954.60091458834,
            "unit": "ns",
            "range": "± 785.3321161151259"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 152642.65954589844,
            "unit": "ns",
            "range": "± 324.6478907995732"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 135529.85353190106,
            "unit": "ns",
            "range": "± 1265.5448090928048"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 129625.38936360677,
            "unit": "ns",
            "range": "± 972.1241974898426"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559395418,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 149119.75258789063,
            "unit": "ns",
            "range": "± 1124.4860857812173"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 137819.40451284556,
            "unit": "ns",
            "range": "± 343.4046806112848"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 131134.29664713543,
            "unit": "ns",
            "range": "± 916.9202234737203"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 164450.41144670759,
            "unit": "ns",
            "range": "± 499.22272917296635"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 156494.83319963727,
            "unit": "ns",
            "range": "± 459.79500486553417"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 144182.30948893228,
            "unit": "ns",
            "range": "± 996.4603890492059"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 149955.34817708333,
            "unit": "ns",
            "range": "± 1058.6796167667735"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 136774.9946777344,
            "unit": "ns",
            "range": "± 637.3531233321568"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 130859.43225097656,
            "unit": "ns",
            "range": "± 1358.6881985163584"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578685508,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 147545.3746431791,
            "unit": "ns",
            "range": "± 340.568987498204"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 134412.0964073768,
            "unit": "ns",
            "range": "± 304.48214914288604"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 131930.70462239583,
            "unit": "ns",
            "range": "± 1524.2420796654749"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 165431.9527024489,
            "unit": "ns",
            "range": "± 422.8182202938922"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 152638.96681722006,
            "unit": "ns",
            "range": "± 461.22159770459433"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 142222.35205078125,
            "unit": "ns",
            "range": "± 895.5634302340886"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 148100.33883901744,
            "unit": "ns",
            "range": "± 415.17861154859185"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 134999.00034743088,
            "unit": "ns",
            "range": "± 213.14547303310087"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 130018.9615641276,
            "unit": "ns",
            "range": "± 1043.3564201046086"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734595873213,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 149393.18214634486,
            "unit": "ns",
            "range": "± 861.789478460925"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 138132.064839681,
            "unit": "ns",
            "range": "± 466.12143689120916"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 129880.99650691106,
            "unit": "ns",
            "range": "± 862.4168261754759"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 162713.36146763392,
            "unit": "ns",
            "range": "± 839.4719504479747"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 153918.62104143415,
            "unit": "ns",
            "range": "± 728.6179930620091"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 145798.40795898438,
            "unit": "ns",
            "range": "± 1868.5043991966952"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 146180.0502232143,
            "unit": "ns",
            "range": "± 365.1293514135366"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 137908.24625069756,
            "unit": "ns",
            "range": "± 560.8532503118109"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 133660.54634602866,
            "unit": "ns",
            "range": "± 1570.7038399074222"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643318399,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 149371.40583496093,
            "unit": "ns",
            "range": "± 1342.1731628303135"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 134528.04294057994,
            "unit": "ns",
            "range": "± 321.25109033811674"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 127014.37173665364,
            "unit": "ns",
            "range": "± 1365.5385625009142"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 162667.0348795573,
            "unit": "ns",
            "range": "± 408.4313219658065"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 152548.70340983072,
            "unit": "ns",
            "range": "± 1019.9556836701696"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 145342.77481515068,
            "unit": "ns",
            "range": "± 568.9699594297269"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 143818.0591430664,
            "unit": "ns",
            "range": "± 208.90700897903557"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 144190.07194010416,
            "unit": "ns",
            "range": "± 459.91382610666903"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 130161.25346491887,
            "unit": "ns",
            "range": "± 920.0196120072112"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647597302,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 148138.30365862165,
            "unit": "ns",
            "range": "± 677.6061912426018"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 136145.00343540736,
            "unit": "ns",
            "range": "± 1402.1982259829354"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 129241.38464355469,
            "unit": "ns",
            "range": "± 416.0801339046335"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 162428.45799153644,
            "unit": "ns",
            "range": "± 493.09337697216546"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 158315.45900065106,
            "unit": "ns",
            "range": "± 586.0021400321583"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 142888.76049804688,
            "unit": "ns",
            "range": "± 1522.067339730458"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 143887.56571138822,
            "unit": "ns",
            "range": "± 444.94064730744026"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 136715.99530901227,
            "unit": "ns",
            "range": "± 460.6171017406554"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 132606.76493013822,
            "unit": "ns",
            "range": "± 567.1215820653538"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652867174,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 168684.01864698456,
            "unit": "ns",
            "range": "± 8901.772425129784"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 159653.11356689452,
            "unit": "ns",
            "range": "± 10456.72019255114"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 143030.89491271973,
            "unit": "ns",
            "range": "± 8634.41199132428"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 183327.41441761365,
            "unit": "ns",
            "range": "± 6767.022057438152"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 180779.5588623047,
            "unit": "ns",
            "range": "± 12991.616361258748"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 163325.47594482423,
            "unit": "ns",
            "range": "± 10687.611627448161"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 168883.59687943893,
            "unit": "ns",
            "range": "± 11468.354885588684"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 151069.8085863518,
            "unit": "ns",
            "range": "± 10175.780447150992"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 159196.88803378018,
            "unit": "ns",
            "range": "± 5878.51689142035"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747033236,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 153491.9292689732,
            "unit": "ns",
            "range": "± 794.4520812753486"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 134277.46559495194,
            "unit": "ns",
            "range": "± 396.37878390228656"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 126371.35024789664,
            "unit": "ns",
            "range": "± 691.5814533438509"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 164557.19794108073,
            "unit": "ns",
            "range": "± 1341.272035734548"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 159440.37231445312,
            "unit": "ns",
            "range": "± 648.3692881901269"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 148301.6091064453,
            "unit": "ns",
            "range": "± 1464.7633169669557"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 149079.83588518415,
            "unit": "ns",
            "range": "± 946.7624807455094"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 133476.99350992838,
            "unit": "ns",
            "range": "± 302.7577393264451"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 132830.33707101006,
            "unit": "ns",
            "range": "± 1070.0060749511767"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906683844,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 146604.486328125,
            "unit": "ns",
            "range": "± 276.8437708722346"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 147190.57591145832,
            "unit": "ns",
            "range": "± 873.8495340691674"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 128506.67975725446,
            "unit": "ns",
            "range": "± 380.21608395789417"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 163170.98618570963,
            "unit": "ns",
            "range": "± 538.9185945992621"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 155259.99082728795,
            "unit": "ns",
            "range": "± 2447.9188505205257"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 148203.35084635418,
            "unit": "ns",
            "range": "± 1260.3991185603184"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 147684.81228402944,
            "unit": "ns",
            "range": "± 453.61631608565017"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 133815.03856482872,
            "unit": "ns",
            "range": "± 383.131599469486"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 132729.45564778647,
            "unit": "ns",
            "range": "± 1849.5419876616338"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407532400,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 145688.7530517578,
            "unit": "ns",
            "range": "± 466.9762389723868"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 135598.50189208984,
            "unit": "ns",
            "range": "± 283.3586657208073"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 129493.16291155134,
            "unit": "ns",
            "range": "± 540.7591749000591"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 162095.28056989398,
            "unit": "ns",
            "range": "± 1060.5474498170447"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 149675.27708217077,
            "unit": "ns",
            "range": "± 295.6721829751"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 145868.78579477163,
            "unit": "ns",
            "range": "± 786.606270425237"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 148113.74195963543,
            "unit": "ns",
            "range": "± 1281.1278188972055"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 134997.9946637835,
            "unit": "ns",
            "range": "± 1348.1914893726764"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 127457.87396709736,
            "unit": "ns",
            "range": "± 435.1835408924367"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187232387,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 150489.86994628905,
            "unit": "ns",
            "range": "± 612.0947089008961"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 137556.84508463542,
            "unit": "ns",
            "range": "± 1074.1322735624012"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 129589.56097881611,
            "unit": "ns",
            "range": "± 615.9252621576452"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 171190.1334716797,
            "unit": "ns",
            "range": "± 1104.5768256797962"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 152072.44611467634,
            "unit": "ns",
            "range": "± 1562.883183090414"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 145897.24643554687,
            "unit": "ns",
            "range": "± 1129.815351312623"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 148706.10757211538,
            "unit": "ns",
            "range": "± 330.70060187928937"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 135965.89151436943,
            "unit": "ns",
            "range": "± 677.9308152138327"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 127603.73197428386,
            "unit": "ns",
            "range": "± 785.105846835396"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283021696,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 149993.1001915565,
            "unit": "ns",
            "range": "± 660.5266795550828"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 135101.41095377604,
            "unit": "ns",
            "range": "± 1345.4472507263288"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 124481.63100961539,
            "unit": "ns",
            "range": "± 826.9311477794135"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 168736.87081473213,
            "unit": "ns",
            "range": "± 990.5845470126443"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 153884.30576985676,
            "unit": "ns",
            "range": "± 863.862569062072"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 143750.58779296876,
            "unit": "ns",
            "range": "± 1918.7380118883323"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 150138.34069010417,
            "unit": "ns",
            "range": "± 529.3498518279632"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 137229.85366210938,
            "unit": "ns",
            "range": "± 1414.7943628186017"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 126229.35097249348,
            "unit": "ns",
            "range": "± 399.5516561388261"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376069580,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 151151.59535435267,
            "unit": "ns",
            "range": "± 857.2992222688067"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 136084.2752278646,
            "unit": "ns",
            "range": "± 1117.208817252666"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 131462.18559919085,
            "unit": "ns",
            "range": "± 812.9782678967815"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 166816.60196126302,
            "unit": "ns",
            "range": "± 1190.3212311918305"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 154928.077671596,
            "unit": "ns",
            "range": "± 666.436294728213"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 145923.9303448017,
            "unit": "ns",
            "range": "± 848.1435977933634"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 148350.8502034505,
            "unit": "ns",
            "range": "± 1292.2617216361625"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 136288.40799153646,
            "unit": "ns",
            "range": "± 880.0031478282267"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 127491.87881234977,
            "unit": "ns",
            "range": "± 488.07044404789514"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461807784,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 152810.61436360676,
            "unit": "ns",
            "range": "± 773.8052556195659"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 137347.98413085938,
            "unit": "ns",
            "range": "± 320.3944513898284"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 126515.43845778245,
            "unit": "ns",
            "range": "± 448.5864456786826"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 166179.57091471355,
            "unit": "ns",
            "range": "± 883.8041627243293"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 154320.71676870494,
            "unit": "ns",
            "range": "± 440.0946878212106"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 147663.17691476006,
            "unit": "ns",
            "range": "± 1336.7428152785183"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 152513.87280273438,
            "unit": "ns",
            "range": "± 1071.4922923674972"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 137925.48655348556,
            "unit": "ns",
            "range": "± 1072.3610025528862"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 127509.58483886719,
            "unit": "ns",
            "range": "± 712.401550182387"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479610757,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 152655.47659737724,
            "unit": "ns",
            "range": "± 869.9234692752842"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 135687.89624023438,
            "unit": "ns",
            "range": "± 1257.157298552822"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 135027.88607584636,
            "unit": "ns",
            "range": "± 976.1949281776929"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 171496.96568080358,
            "unit": "ns",
            "range": "± 429.32542589744884"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 153912.27962239584,
            "unit": "ns",
            "range": "± 1018.8820379595716"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 144597.11708984376,
            "unit": "ns",
            "range": "± 743.1394068236436"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 148159.1831542969,
            "unit": "ns",
            "range": "± 647.6395976743246"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 143389.89840932994,
            "unit": "ns",
            "range": "± 316.71839586844965"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 130733.46651785714,
            "unit": "ns",
            "range": "± 732.788377715205"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553438555,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 149347.4176595052,
            "unit": "ns",
            "range": "± 1111.457338770269"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 138160.63309151787,
            "unit": "ns",
            "range": "± 873.7272503700328"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 127615.62291666666,
            "unit": "ns",
            "range": "± 899.6433622670298"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 169506.65236002606,
            "unit": "ns",
            "range": "± 1166.9807500554296"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 153259.4847063337,
            "unit": "ns",
            "range": "± 778.7761549319"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 149930.04065755208,
            "unit": "ns",
            "range": "± 1026.5261999748634"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 155080.23217773438,
            "unit": "ns",
            "range": "± 401.43668410944946"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 138696.20694405693,
            "unit": "ns",
            "range": "± 390.83800796294975"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 128769.24621582031,
            "unit": "ns",
            "range": "± 538.0567339219436"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655661970,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 150538.07151442306,
            "unit": "ns",
            "range": "± 522.5598077041465"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 137215.2612116887,
            "unit": "ns",
            "range": "± 411.96081647474847"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 126235.39552408854,
            "unit": "ns",
            "range": "± 728.5456037667585"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 165556.87165715144,
            "unit": "ns",
            "range": "± 608.7059830877929"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 161091.45084322416,
            "unit": "ns",
            "range": "± 537.1508877419028"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 154378.14229910713,
            "unit": "ns",
            "range": "± 1011.9360154601047"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 145389.4588623047,
            "unit": "ns",
            "range": "± 411.7582125670853"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 139147.57143554688,
            "unit": "ns",
            "range": "± 977.6371485335166"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 129005.77497746394,
            "unit": "ns",
            "range": "± 520.447263234745"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253899737,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 147963.24977463944,
            "unit": "ns",
            "range": "± 340.29499100863245"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 136062.00788225446,
            "unit": "ns",
            "range": "± 302.25848929413485"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 131528.74411621093,
            "unit": "ns",
            "range": "± 490.44464813542504"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 163095.72147623697,
            "unit": "ns",
            "range": "± 824.474989305176"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 151026.66177133413,
            "unit": "ns",
            "range": "± 661.344865827995"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 146022.96913364955,
            "unit": "ns",
            "range": "± 1012.9305453221202"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 154153.91240234376,
            "unit": "ns",
            "range": "± 873.2413466699949"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 137478.8632405599,
            "unit": "ns",
            "range": "± 316.5512232884322"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 130086.8234375,
            "unit": "ns",
            "range": "± 925.6928718194129"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788535309,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 153408.99588216146,
            "unit": "ns",
            "range": "± 856.4917215686992"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 137650.11208089194,
            "unit": "ns",
            "range": "± 308.78539394242614"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 130393.42102050781,
            "unit": "ns",
            "range": "± 403.00629457053685"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 177161.73298527644,
            "unit": "ns",
            "range": "± 416.4003781779182"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 149856.27193196616,
            "unit": "ns",
            "range": "± 1331.0350148202376"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 148336.21854073662,
            "unit": "ns",
            "range": "± 1644.7327818959025"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 156064.76222446986,
            "unit": "ns",
            "range": "± 677.4752858805102"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 140053.71431477866,
            "unit": "ns",
            "range": "± 770.7301497344142"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 141355.66122233073,
            "unit": "ns",
            "range": "± 982.3811551686766"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050290051,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 165480.7655843099,
            "unit": "ns",
            "range": "± 833.0867874065161"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 136475.8661934989,
            "unit": "ns",
            "range": "± 535.7188481297909"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 135461.93132672991,
            "unit": "ns",
            "range": "± 699.4237010666095"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 172724.07835286457,
            "unit": "ns",
            "range": "± 1626.5009422395565"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 152340.9719889323,
            "unit": "ns",
            "range": "± 1701.4181607011838"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 149750.88173828126,
            "unit": "ns",
            "range": "± 1481.265177462875"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 152137.6075439453,
            "unit": "ns",
            "range": "± 836.2873464872882"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 146653.0679361979,
            "unit": "ns",
            "range": "± 1198.2793959701653"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 131734.3618815104,
            "unit": "ns",
            "range": "± 946.1665256741106"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368809934,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 159797.29342447917,
            "unit": "ns",
            "range": "± 1228.808878564982"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 136915.93040248327,
            "unit": "ns",
            "range": "± 952.8387852762851"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 131639.80455603966,
            "unit": "ns",
            "range": "± 888.7262385276989"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 176555.72589983259,
            "unit": "ns",
            "range": "± 724.7481445087396"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 154675.64377848306,
            "unit": "ns",
            "range": "± 363.8103008296207"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 148374.45012555804,
            "unit": "ns",
            "range": "± 1165.638272932578"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 152783.7944824219,
            "unit": "ns",
            "range": "± 911.4594534265758"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 136796.01161295574,
            "unit": "ns",
            "range": "± 967.2206354616536"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 130372.20891927084,
            "unit": "ns",
            "range": "± 895.3137712615527"
          }
        ]
      }
    ],
    "Cluster.ClusterOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd766248719caf2817592e988a5e67edc22b511b",
          "message": "Implementing BDN Perf pipeline (#758)\n\n* The CI scripts, YML and config files to check perf using BDN benchmarking.  Also, a fix in ClusterBench for and renamed Lua Runner benchmarking\r\n\r\n* Cleaned up the debug message and updated couple expected values\r\n\r\n* Updated SAddRem - windows - to 130 from 118.  Also removed unncesssary build statement in YML\r\n\r\n* Proof of concept for Performance run on ADO using BDN\r\n\r\n* Comment out number of Cores check so can try proof of concept on ADO perf machines\r\n\r\n* Getting close to having BDN working\r\n\r\n* Fixed RespLuaStress\r\n\r\n* Fixed issue in Lua Runner Stress\r\n\r\n* Updated config values, set charting and commit comment as separate tasks\r\n\r\n* Updated config values\r\n\r\n* Minor change to YML (remove pull requests) and updated LuaRunner config value\r\n\r\n* One more config value fix\r\n\r\n* Added a task to do the push\r\n\r\n* Putting back to push chart in the chart task and not a separate one\r\n\r\n* Moved the permissions to full workflow\r\n\r\n* Just minor to add commits\r\n\r\n* Adding actions: write permit since actions default to read only\r\n\r\n* Set up the commit comment for BDN as well as summary to show current vs previous BDN perf numbers\r\n\r\n* A few fixes\r\n\r\n* Updated BDN perf YML, config files and ps1 script\r\n\r\n* Versioning issue with BDN test files, fixed now\r\n\r\n* Bump threshold to 35% (135%) to trigger perf failure\r\n\r\n* Set to Linux only to reduce number of consectutive tests which caused push collisions with GitHub\r\n\r\n* Just Windows only test run\r\n\r\n* Putting it back to both OS for the tests\r\n\r\n* Set threshhold to 50% (150%) as seeing BDN ran twice on same code sometimes is in 40%+ range of difference.\r\n\r\n* Big change where using continuousbenchmark branch for all data for continuous benchmarking and also changed to where script is only checking allocated values and let github-action-benchmark compare mean values\r\n\r\n* Updated ClusterBench to get main changes\r\n\r\n* Fix issue with Cluster BDN is not able to access folder so setting to tmp which does have access\r\n\r\n* Bumping threshold to 50% (150%) as mean value in RespParseStress can vary into the 40% from run to run.\r\n\r\n* First update\r\n\r\n* Hiding the Gen0 column for Lua benchmark\r\n\r\n* Updated BDN test infrastructure to match the new BDN org.\r\n\r\n* Fix bug in ObjectOperations\r\n\r\n* Set max items on chart to 50 ... can modify later if want\r\n\r\n* Added the run on push to main\r\n\r\n* Put Performance Pipeline back\r\n\r\n* Fixed the default case when no parameters sent to ps1\r\n\r\n* Cleaned up config files:\r\nhave shorter names for values\r\nnot have configuration or framework (moved to ps1 file)\r\nnot have windows / linux differnce in expected\r\nMoved acceptable allocated range to script\r\n\r\nmodified the script:\r\nto only load values for the specific test instead of looking for all values\r\nchanges to match the changes in config (shorter names, etc)\r\n\r\n* Big update to where moved to a single config file and the ps1 file does not need to be updated when new BDNs are added.\r\n\r\n* Added workflow_dispatch: to deploy website yml so we can manually deploy website if we want\r\n\r\n* Updated alert-threshold from 150% to 140%. If too many false positives we can raise it back. Also, removed darrenge from the alert CC line as no need for that.\r\n\r\n* Removed the commit comment / comparison to previous commit task. Still will get  summary data in the specific workflow run and still uploads data to charts (when pushing to main).\r\n\r\n* Minor update - comments only",
          "timestamp": "2024-12-11T11:29:32-08:00",
          "tree_id": "a262ac843488b7afb61ad91dfb2a488917243391",
          "url": "https://github.com/microsoft/garnet/commit/dd766248719caf2817592e988a5e67edc22b511b"
        },
        "date": 1733945797915,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16558.074442545574,
            "unit": "ns",
            "range": "± 13.806187993742991"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14575.02692086356,
            "unit": "ns",
            "range": "± 15.813772485918737"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14765.599605015346,
            "unit": "ns",
            "range": "± 13.807189118122695"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13767.161305745443,
            "unit": "ns",
            "range": "± 30.87169737734063"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 125745.26529947917,
            "unit": "ns",
            "range": "± 129.23972438383524"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19224.73882039388,
            "unit": "ns",
            "range": "± 15.022291644942896"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18220.3373500279,
            "unit": "ns",
            "range": "± 23.706054108998806"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15331.322152273995,
            "unit": "ns",
            "range": "± 28.343644607901965"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14445.847429547992,
            "unit": "ns",
            "range": "± 30.36792519294839"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 143747.8008563702,
            "unit": "ns",
            "range": "± 152.34953338259336"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aabc0bb831f2313bce41c43c29c9c2b0e434cb00",
          "message": "handle uninitialized epoch value merge (#874)\n\n* handle uninitialized epoch value merge\r\n\r\n* release 1.0.47",
          "timestamp": "2024-12-11T14:03:36-08:00",
          "tree_id": "ca83e06a72e78b6bab3872148b9e3eb5cb476269",
          "url": "https://github.com/microsoft/garnet/commit/aabc0bb831f2313bce41c43c29c9c2b0e434cb00"
        },
        "date": 1733955003493,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15971.828402005709,
            "unit": "ns",
            "range": "± 23.650003719425833"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14740.02545674642,
            "unit": "ns",
            "range": "± 56.45251640799231"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15674.37510172526,
            "unit": "ns",
            "range": "± 16.713748770297325"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 12981.318155924479,
            "unit": "ns",
            "range": "± 10.106842467390154"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 135161.70479910713,
            "unit": "ns",
            "range": "± 117.87679432308585"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19816.620744977678,
            "unit": "ns",
            "range": "± 22.979283109362274"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18546.80851527623,
            "unit": "ns",
            "range": "± 39.597936061904676"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15775.86188683143,
            "unit": "ns",
            "range": "± 32.693240483403244"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14115.128707885742,
            "unit": "ns",
            "range": "± 35.864057086039615"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 142151.05678013392,
            "unit": "ns",
            "range": "± 184.30404104037348"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf1d4b66c442284f95c8db51e57274ba07316561",
          "message": "Bump nanoid from 3.3.7 to 3.3.8 in /website (#873)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: darrenge <darrenge@microsoft.com>",
          "timestamp": "2024-12-11T15:37:40-08:00",
          "tree_id": "1d3dbe6f308895a822d913fd3960c803796cb264",
          "url": "https://github.com/microsoft/garnet/commit/cf1d4b66c442284f95c8db51e57274ba07316561"
        },
        "date": 1733960738879,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16192.694396972656,
            "unit": "ns",
            "range": "± 21.714039837739875"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14651.671600341797,
            "unit": "ns",
            "range": "± 14.86956617096633"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14697.94880793645,
            "unit": "ns",
            "range": "± 13.204689795388562"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13462.419891357422,
            "unit": "ns",
            "range": "± 7.718603509698207"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 127652.17633928571,
            "unit": "ns",
            "range": "± 143.99545936398096"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 20572.020263671875,
            "unit": "ns",
            "range": "± 34.9785467524874"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18281.519024188703,
            "unit": "ns",
            "range": "± 28.38393810977675"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15111.499786376953,
            "unit": "ns",
            "range": "± 72.33255975979118"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 13939.10878499349,
            "unit": "ns",
            "range": "± 46.82187373505319"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 134592.41420200892,
            "unit": "ns",
            "range": "± 163.8116093839856"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d4c7448569063ea786802a0580acf465108e037",
          "message": "Add ReadOnly Support for IDevice (#870)\n\n* add readOnly flag in streamProvider for LocalStorageDevice\r\n\r\n* add linux readOnly flag for managed device\r\n\r\n* add explicit readOnly assignment for parameter",
          "timestamp": "2024-12-12T13:03:41-08:00",
          "tree_id": "3d591691e9ac0cfb714d98096a0580abab554b23",
          "url": "https://github.com/microsoft/garnet/commit/0d4c7448569063ea786802a0580acf465108e037"
        },
        "date": 1734037913048,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16216.236441476005,
            "unit": "ns",
            "range": "± 13.495682909872151"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14679.898071289062,
            "unit": "ns",
            "range": "± 14.31487746855269"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14527.525438581195,
            "unit": "ns",
            "range": "± 37.515001578987544"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13099.007415771484,
            "unit": "ns",
            "range": "± 12.41961904526673"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 126903.60270182292,
            "unit": "ns",
            "range": "± 235.2064453828613"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21334.392874581474,
            "unit": "ns",
            "range": "± 62.486819310887384"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18326.69499715169,
            "unit": "ns",
            "range": "± 18.34074258509876"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15275.374094645182,
            "unit": "ns",
            "range": "± 15.154475865593417"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14333.641706194196,
            "unit": "ns",
            "range": "± 20.95077379690548"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 133713.91078404017,
            "unit": "ns",
            "range": "± 170.07474387261868"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2c2261c72948136f6af9dfdfefc86ebb02c686a",
          "message": "CustomCommandManager + CustomCommandManagerSession to use auto-expandable maps (#848)\n\n* wip\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* Comments + tests\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* fix\r\n\r\n* format\r\n\r\n* Adding a non-concurrent ExpandableMap\r\n\r\n* small fix\r\n\r\n* Switching to SingleWriterMultiReaderLock\r\n\r\n* Some thread-safety related fixes\r\n\r\n* Added some async tests for command registration\r\n\r\n* small bugfixes\r\n\r\n* format",
          "timestamp": "2024-12-12T18:49:23-08:00",
          "tree_id": "27ea42b0a4d6b834a7f450d12100d29e8b94f077",
          "url": "https://github.com/microsoft/garnet/commit/f2c2261c72948136f6af9dfdfefc86ebb02c686a"
        },
        "date": 1734058630445,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16398.685564313615,
            "unit": "ns",
            "range": "± 25.556749734532417"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14748.867906842914,
            "unit": "ns",
            "range": "± 20.286949191850788"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14315.662892659506,
            "unit": "ns",
            "range": "± 29.155088054795527"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13347.171529134115,
            "unit": "ns",
            "range": "± 29.18758951115779"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 136228.9829799107,
            "unit": "ns",
            "range": "± 181.96901757102736"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19707.960408528645,
            "unit": "ns",
            "range": "± 36.00528176621694"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18249.378531319755,
            "unit": "ns",
            "range": "± 35.999809457852905"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15371.126556396484,
            "unit": "ns",
            "range": "± 33.181857858367934"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 13958.411254882812,
            "unit": "ns",
            "range": "± 27.877803971017947"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 140624.3611653646,
            "unit": "ns",
            "range": "± 183.59357758839207"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "kmontrose@microsoft.com",
            "name": "kevin-montrose",
            "username": "kevin-montrose"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa004d372a23731e3e5f0fa65d701c4a4d62b381",
          "message": "Fixes for SCRIPT commands and behavior (#860)\n\n* fix FastBasicRespCommandsInfo construction and lookup; which incidentally fixes EVALSHA when scripting is enabled\r\n\r\n* fix MultiKeySlotVerify - keys past the second were not correctly visited\r\n\r\n* break SCRIPT into appropriate subcommands; update command info; fix SCRIPT EXISTS to match Redis behavior; tests for SCRIPT|* ACLs; DRY up SCRIPT command implementations\r\n\r\n* test script failures, match Redis error messages\r\n\r\n* remove byte[] allocations from evalsha path (amongst others); should get the Lua overhead down to just the NLua + locking stuff\r\n\r\n* add test for multi-hash version of SCRIPT|EXIST; fix bug where hash casing matters (matching Redis by defaulting to upper case hashes values); remove debug code\r\n\r\n* fix formatting\r\n\r\n* uppercase some test cases I missed\r\n\r\n* add EVALSHA to cluster slot tests\r\n\r\n* restore lower case hashes; erroneously thought Redis used upper case\r\n\r\n* add ScriptOperations to benchmark this change\r\n\r\n* formatting fixes\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-12T23:23:53-08:00",
          "tree_id": "8c0664ade6b6572a8af295961a2d61a846b60756",
          "url": "https://github.com/microsoft/garnet/commit/aa004d372a23731e3e5f0fa65d701c4a4d62b381"
        },
        "date": 1734075055530,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15814.652076134314,
            "unit": "ns",
            "range": "± 31.19638207694393"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14774.718373616537,
            "unit": "ns",
            "range": "± 26.39159097885969"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14427.450125558036,
            "unit": "ns",
            "range": "± 26.745907653722096"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13187.878799438477,
            "unit": "ns",
            "range": "± 15.272614352294791"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 130292.45082310268,
            "unit": "ns",
            "range": "± 154.2149271890937"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19774.579620361328,
            "unit": "ns",
            "range": "± 22.574510222165443"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 17696.361214773995,
            "unit": "ns",
            "range": "± 14.793670816742381"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16426.475524902344,
            "unit": "ns",
            "range": "± 12.348178453525582"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 13906.565958658854,
            "unit": "ns",
            "range": "± 18.344820293758218"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 140177.94095552884,
            "unit": "ns",
            "range": "± 182.26743926278442"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca0222960f0145302eb1fc9896f680f9aff5a4d1",
          "message": "Streaming snapshot checkpoint in Tsavorite (#824)\n\n* Mild refactor in preparation\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* fix tests to not cover steaming snapshot as it is not a traditional checkpoint\r\n\r\n* add unit test\r\n\r\n* fix tests\r\n\r\n* fix test\r\n\r\n* updates\r\n\r\n* Support maxAddress during liveness checks\r\n\r\n* improvements to api\r\n\r\n* Add SetVersion API\r\n\r\n* more checks\r\n\r\n* add comment\r\n\r\n* add comments",
          "timestamp": "2024-12-13T10:25:49-08:00",
          "tree_id": "917be4f308af8da9ec7782faa5069a09f2b873c5",
          "url": "https://github.com/microsoft/garnet/commit/ca0222960f0145302eb1fc9896f680f9aff5a4d1"
        },
        "date": 1734114800931,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16606.876046316964,
            "unit": "ns",
            "range": "± 19.845243468580687"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15011.619743934045,
            "unit": "ns",
            "range": "± 33.87023852742042"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14622.63652256557,
            "unit": "ns",
            "range": "± 181.1866052604927"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13043.775612967354,
            "unit": "ns",
            "range": "± 28.072992924247664"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 130512.55777994792,
            "unit": "ns",
            "range": "± 423.905260739302"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21027.67547607422,
            "unit": "ns",
            "range": "± 23.86672419641754"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 17969.75816999163,
            "unit": "ns",
            "range": "± 16.596967348470443"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15188.745553152901,
            "unit": "ns",
            "range": "± 54.05173964274178"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14451.209024282602,
            "unit": "ns",
            "range": "± 40.56209924229435"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 148772.3291015625,
            "unit": "ns",
            "range": "± 519.9102848403372"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f679b0b683e4e94fa2a3ebb2689708ec2efee74",
          "message": "Added BDN for all hash commands (#879)\n\n* Added BDN for all hash commands\r\n\r\n* Moved BDN of hash set to separate class",
          "timestamp": "2024-12-13T12:50:11-08:00",
          "tree_id": "66c04dc8b338f40aeb360419fc1953dcc219abbc",
          "url": "https://github.com/microsoft/garnet/commit/3f679b0b683e4e94fa2a3ebb2689708ec2efee74"
        },
        "date": 1734123463606,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16007.140677315849,
            "unit": "ns",
            "range": "± 21.800907313185412"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15250.792224590596,
            "unit": "ns",
            "range": "± 22.315661917796916"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14403.66962139423,
            "unit": "ns",
            "range": "± 20.64635240549233"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13194.726210374098,
            "unit": "ns",
            "range": "± 23.30951037299467"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 129272.35576923077,
            "unit": "ns",
            "range": "± 292.2939204286272"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19041.84600830078,
            "unit": "ns",
            "range": "± 38.49919419474342"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20651.66971842448,
            "unit": "ns",
            "range": "± 53.27899188482587"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15602.074105398995,
            "unit": "ns",
            "range": "± 36.45546224895851"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14103.905017559346,
            "unit": "ns",
            "range": "± 17.117259292322576"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 141681.29507211538,
            "unit": "ns",
            "range": "± 211.27308696936765"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "178dc21b572263c4421e2602e41cc243cb94f507",
          "message": "Fix writing output for scan (#880)\n\n* Writing output for scan was not handling output buffer (dcurr, dend) correctly. Also, it was not handling large keys correctly.\r\n\r\n* update version",
          "timestamp": "2024-12-13T13:55:49-08:00",
          "tree_id": "1966c990a96fa84a42747ad14ce5480535196e57",
          "url": "https://github.com/microsoft/garnet/commit/178dc21b572263c4421e2602e41cc243cb94f507"
        },
        "date": 1734127415864,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15977.44639078776,
            "unit": "ns",
            "range": "± 60.1153536915268"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14781.795610700336,
            "unit": "ns",
            "range": "± 30.228727136013546"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14439.727223714193,
            "unit": "ns",
            "range": "± 24.579701047452623"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13257.324570875902,
            "unit": "ns",
            "range": "± 8.187638083124753"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 131847.4698893229,
            "unit": "ns",
            "range": "± 141.42884489177965"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19114.29225376674,
            "unit": "ns",
            "range": "± 28.8094760450955"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 19725.345938546317,
            "unit": "ns",
            "range": "± 32.471258724772994"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15595.553001990686,
            "unit": "ns",
            "range": "± 12.833790790607907"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14762.87981669108,
            "unit": "ns",
            "range": "± 13.454513871435546"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 139347.96840122767,
            "unit": "ns",
            "range": "± 244.27203465150413"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1ce0dafecaba15335e8e0767a6eeb441b72e56c",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#862)\n\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T14:08:03-08:00",
          "tree_id": "b2aa23d9235558527754332fab728fa03d60007b",
          "url": "https://github.com/microsoft/garnet/commit/f1ce0dafecaba15335e8e0767a6eeb441b72e56c"
        },
        "date": 1734128079969,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16191.351318359375,
            "unit": "ns",
            "range": "± 28.287041444419152"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15166.259969075521,
            "unit": "ns",
            "range": "± 16.21127125043033"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14764.936828613281,
            "unit": "ns",
            "range": "± 12.745673083694381"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13102.065922663762,
            "unit": "ns",
            "range": "± 18.373041152690664"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 131178.56241861978,
            "unit": "ns",
            "range": "± 346.4439487295859"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19977.37557547433,
            "unit": "ns",
            "range": "± 31.497719201749746"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18696.14034016927,
            "unit": "ns",
            "range": "± 41.49752626294976"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15486.2451171875,
            "unit": "ns",
            "range": "± 36.36483050249548"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 13827.856336321149,
            "unit": "ns",
            "range": "± 9.17558761329618"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 140047.06561748797,
            "unit": "ns",
            "range": "± 176.88625758861798"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132366397,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16068.944725623498,
            "unit": "ns",
            "range": "± 23.803298698331773"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14794.52154976981,
            "unit": "ns",
            "range": "± 13.610251409794394"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14316.581181117466,
            "unit": "ns",
            "range": "± 16.3864831763141"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13437.525285993304,
            "unit": "ns",
            "range": "± 16.309990338377915"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 130271.63981119792,
            "unit": "ns",
            "range": "± 146.56830332205686"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19954.64148888221,
            "unit": "ns",
            "range": "± 24.01448287300054"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20457.10648756761,
            "unit": "ns",
            "range": "± 27.31537808267716"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15965.363057454428,
            "unit": "ns",
            "range": "± 32.00045192157603"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14809.358626145582,
            "unit": "ns",
            "range": "± 12.99358683441879"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 139570.86181640625,
            "unit": "ns",
            "range": "± 128.69824437102656"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734134048787,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15836.841532389322,
            "unit": "ns",
            "range": "± 13.773462274851251"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15110.299631754557,
            "unit": "ns",
            "range": "± 12.265606111803226"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15044.83652750651,
            "unit": "ns",
            "range": "± 36.10639860209176"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13157.755388532367,
            "unit": "ns",
            "range": "± 16.036790252731162"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 130637.7775493421,
            "unit": "ns",
            "range": "± 1852.788865348187"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19042.63371058873,
            "unit": "ns",
            "range": "± 18.88392405477315"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20621.904296875,
            "unit": "ns",
            "range": "± 45.3703560689139"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15229.558504544771,
            "unit": "ns",
            "range": "± 14.666537792729473"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 13881.787461500902,
            "unit": "ns",
            "range": "± 15.451993619638998"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 142013.427734375,
            "unit": "ns",
            "range": "± 213.57998664572835"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377397395,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16087.73912702288,
            "unit": "ns",
            "range": "± 19.147225534159706"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15726.326802571615,
            "unit": "ns",
            "range": "± 24.73737305015155"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14572.568620954242,
            "unit": "ns",
            "range": "± 13.594171627868494"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13100.350843157086,
            "unit": "ns",
            "range": "± 20.899836019541222"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 131589.9448939732,
            "unit": "ns",
            "range": "± 149.8019621667684"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19518.34455217634,
            "unit": "ns",
            "range": "± 32.6649613106038"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20190.70587158203,
            "unit": "ns",
            "range": "± 152.3627597518587"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15233.334350585938,
            "unit": "ns",
            "range": "± 28.59891342560438"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14027.688925606864,
            "unit": "ns",
            "range": "± 18.2560811308543"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 143372.9443359375,
            "unit": "ns",
            "range": "± 747.082591817688"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392793132,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16063.5866800944,
            "unit": "ns",
            "range": "± 14.1107512562443"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14811.34514441857,
            "unit": "ns",
            "range": "± 12.935477384427505"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14545.215933663505,
            "unit": "ns",
            "range": "± 25.862046117467003"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13294.287436349052,
            "unit": "ns",
            "range": "± 16.86350304578177"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 130304.33349609375,
            "unit": "ns",
            "range": "± 85.12943590600571"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19301.560974121094,
            "unit": "ns",
            "range": "± 19.19233779320933"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 20047.14617047991,
            "unit": "ns",
            "range": "± 83.09646525828033"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15534.50448172433,
            "unit": "ns",
            "range": "± 11.334383400932829"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15307.463684082031,
            "unit": "ns",
            "range": "± 15.310884187052691"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 154110.72998046875,
            "unit": "ns",
            "range": "± 310.36623037257266"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483697809,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16061.265781947544,
            "unit": "ns",
            "range": "± 15.157521838111883"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14707.71953876202,
            "unit": "ns",
            "range": "± 19.73144295074916"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14508.830026479867,
            "unit": "ns",
            "range": "± 18.15764332180265"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13239.79241507394,
            "unit": "ns",
            "range": "± 18.525285251994408"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 131639.2586263021,
            "unit": "ns",
            "range": "± 105.36119249302807"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 18672.892543247766,
            "unit": "ns",
            "range": "± 15.586194107169327"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18121.62898137019,
            "unit": "ns",
            "range": "± 18.18427139836998"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15616.394981971154,
            "unit": "ns",
            "range": "± 15.716031526218702"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15667.400905064174,
            "unit": "ns",
            "range": "± 35.61857409353115"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 142314.27734375,
            "unit": "ns",
            "range": "± 146.62729849760058"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559587935,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15862.93705531529,
            "unit": "ns",
            "range": "± 25.09936376215082"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14724.556262676533,
            "unit": "ns",
            "range": "± 20.26862859793476"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14542.810645470252,
            "unit": "ns",
            "range": "± 17.852299779215155"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13038.839545616736,
            "unit": "ns",
            "range": "± 17.831707760520732"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 129376.0965983073,
            "unit": "ns",
            "range": "± 143.68357026561827"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19354.00202824519,
            "unit": "ns",
            "range": "± 15.756277824641906"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 17938.326314290363,
            "unit": "ns",
            "range": "± 24.24117116941871"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15257.09250313895,
            "unit": "ns",
            "range": "± 12.539179629323728"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14334.24547635592,
            "unit": "ns",
            "range": "± 8.694358177465773"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 140476.513671875,
            "unit": "ns",
            "range": "± 136.85083727185997"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578831367,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15983.733520507812,
            "unit": "ns",
            "range": "± 29.46887042360213"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15044.928305489677,
            "unit": "ns",
            "range": "± 15.85752515139029"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14593.565486027645,
            "unit": "ns",
            "range": "± 13.135240865012518"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13270.464172363281,
            "unit": "ns",
            "range": "± 22.034531301439987"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 135107.1254185268,
            "unit": "ns",
            "range": "± 186.1070878223169"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19205.09796142578,
            "unit": "ns",
            "range": "± 18.419275250310385"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 17950.115027794473,
            "unit": "ns",
            "range": "± 41.73225298131529"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15281.75547281901,
            "unit": "ns",
            "range": "± 25.64497929419865"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14581.515938895089,
            "unit": "ns",
            "range": "± 18.400046723284866"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 139764.9151141827,
            "unit": "ns",
            "range": "± 213.73577393618842"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734596035771,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15900.887298583984,
            "unit": "ns",
            "range": "± 15.820728275399187"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15339.768981933594,
            "unit": "ns",
            "range": "± 22.649212289007128"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14537.635498046875,
            "unit": "ns",
            "range": "± 26.07390342836059"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13880.586896623883,
            "unit": "ns",
            "range": "± 13.948047858943418"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 130099.19108072917,
            "unit": "ns",
            "range": "± 262.24783327876133"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19149.30678147536,
            "unit": "ns",
            "range": "± 34.18388501791951"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18066.278076171875,
            "unit": "ns",
            "range": "± 21.292751166091378"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15558.978474934896,
            "unit": "ns",
            "range": "± 34.355417905146275"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15091.951424734933,
            "unit": "ns",
            "range": "± 19.69641965158364"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 147956.18815104166,
            "unit": "ns",
            "range": "± 124.64751438208292"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643527527,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16065.426635742188,
            "unit": "ns",
            "range": "± 81.85706451988617"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14836.648966471354,
            "unit": "ns",
            "range": "± 69.57704236874193"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14739.252362932477,
            "unit": "ns",
            "range": "± 38.62715811984731"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13373.571472167969,
            "unit": "ns",
            "range": "± 40.67411050222551"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 131434.91385323662,
            "unit": "ns",
            "range": "± 167.75173538852718"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19251.37211726262,
            "unit": "ns",
            "range": "± 73.87775504055061"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18644.752938406808,
            "unit": "ns",
            "range": "± 62.26318412495047"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16078.982761928013,
            "unit": "ns",
            "range": "± 67.06213746307155"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14569.812978108725,
            "unit": "ns",
            "range": "± 188.34803232331868"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 143736.96126302084,
            "unit": "ns",
            "range": "± 954.3185699419655"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647776738,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16084.9267578125,
            "unit": "ns",
            "range": "± 157.14697459688577"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14602.152659098307,
            "unit": "ns",
            "range": "± 63.103253722164084"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14641.772867838541,
            "unit": "ns",
            "range": "± 98.29111409966904"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 12930.77891031901,
            "unit": "ns",
            "range": "± 56.56386362618421"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 135912.66276041666,
            "unit": "ns",
            "range": "± 845.2317287488653"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19243.021443684895,
            "unit": "ns",
            "range": "± 49.893344986358514"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 17975.975254603796,
            "unit": "ns",
            "range": "± 47.82039025930386"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15733.375244140625,
            "unit": "ns",
            "range": "± 73.4537116142582"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14475.039672851562,
            "unit": "ns",
            "range": "± 75.39340464070571"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 144406.88302176338,
            "unit": "ns",
            "range": "± 413.13203958074655"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652584971,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16569.711068960336,
            "unit": "ns",
            "range": "± 14.594093100422374"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15155.37150456355,
            "unit": "ns",
            "range": "± 17.475985618948478"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14335.92997959682,
            "unit": "ns",
            "range": "± 19.12088807005705"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13331.629004845252,
            "unit": "ns",
            "range": "± 16.62531464354748"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 134323.95958533653,
            "unit": "ns",
            "range": "± 161.66056863757817"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19415.867716471355,
            "unit": "ns",
            "range": "± 23.210786363413778"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18044.268681452824,
            "unit": "ns",
            "range": "± 30.18177806745092"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15615.099661690849,
            "unit": "ns",
            "range": "± 17.092958590146782"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14542.591966901507,
            "unit": "ns",
            "range": "± 23.433861140243263"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 143760.05483774038,
            "unit": "ns",
            "range": "± 296.3034543714321"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747224669,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15920.291724571814,
            "unit": "ns",
            "range": "± 9.946748296926698"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15303.440420968192,
            "unit": "ns",
            "range": "± 31.074322891059527"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14141.132405598959,
            "unit": "ns",
            "range": "± 21.18922610575462"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 12992.79416402181,
            "unit": "ns",
            "range": "± 6.213920920442637"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 132640.3355189732,
            "unit": "ns",
            "range": "± 223.21683070649783"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19670.754300631008,
            "unit": "ns",
            "range": "± 13.681613777433258"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18187.569251427285,
            "unit": "ns",
            "range": "± 17.544596732098782"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15137.116394042969,
            "unit": "ns",
            "range": "± 28.296354927961413"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 15346.296183268229,
            "unit": "ns",
            "range": "± 20.912922306943"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 139841.88581194196,
            "unit": "ns",
            "range": "± 130.1727545019277"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906826572,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15856.36509486607,
            "unit": "ns",
            "range": "± 31.151395705312034"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14786.097717285156,
            "unit": "ns",
            "range": "± 14.197002189344843"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14618.157254732572,
            "unit": "ns",
            "range": "± 16.472262157723197"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13041.085756742037,
            "unit": "ns",
            "range": "± 9.107763052212928"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 134392.8019205729,
            "unit": "ns",
            "range": "± 192.85653011621625"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19336.499895368303,
            "unit": "ns",
            "range": "± 18.374057632365318"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 19014.236802321215,
            "unit": "ns",
            "range": "± 40.10564877982924"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15372.327314104352,
            "unit": "ns",
            "range": "± 23.665244673635964"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14121.682891845703,
            "unit": "ns",
            "range": "± 13.767081055244438"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 150319.4789341518,
            "unit": "ns",
            "range": "± 299.3274473447489"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407674575,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15894.070786696215,
            "unit": "ns",
            "range": "± 20.89841761463553"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14920.734288142277,
            "unit": "ns",
            "range": "± 17.465712886076126"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14618.1883591872,
            "unit": "ns",
            "range": "± 14.038324678319542"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13443.349329630533,
            "unit": "ns",
            "range": "± 13.859099354628164"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 134123.95582932694,
            "unit": "ns",
            "range": "± 109.87045701113789"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19422.8515625,
            "unit": "ns",
            "range": "± 13.927725152513764"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18111.124009352465,
            "unit": "ns",
            "range": "± 32.368534672653475"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15614.560808454242,
            "unit": "ns",
            "range": "± 13.354827273072365"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14835.15897478376,
            "unit": "ns",
            "range": "± 16.174925707438074"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 138530.46712239584,
            "unit": "ns",
            "range": "± 202.35780444450705"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187383451,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16037.029012044271,
            "unit": "ns",
            "range": "± 14.933375170078081"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14963.060936560998,
            "unit": "ns",
            "range": "± 13.824614109821518"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14796.897670200893,
            "unit": "ns",
            "range": "± 51.65428303801192"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13012.723323277065,
            "unit": "ns",
            "range": "± 26.93510906575977"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 131857.0646158854,
            "unit": "ns",
            "range": "± 244.9026557622784"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19207.861680250902,
            "unit": "ns",
            "range": "± 46.54313094536085"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18719.249216715496,
            "unit": "ns",
            "range": "± 24.824121512625556"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15475.868811974158,
            "unit": "ns",
            "range": "± 21.209407937144842"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 13936.308415730795,
            "unit": "ns",
            "range": "± 9.45081950000428"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 147253.03431919642,
            "unit": "ns",
            "range": "± 532.1989474827492"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283210639,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16618.49388709435,
            "unit": "ns",
            "range": "± 16.820514591990193"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14521.971482496996,
            "unit": "ns",
            "range": "± 21.17293427481635"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14450.894601004464,
            "unit": "ns",
            "range": "± 15.835724792643207"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13573.730977376303,
            "unit": "ns",
            "range": "± 18.989700593127832"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 131723.3927408854,
            "unit": "ns",
            "range": "± 126.89491988960029"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19965.628153483074,
            "unit": "ns",
            "range": "± 98.14256161735709"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 17924.53824556791,
            "unit": "ns",
            "range": "± 31.849932456151734"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15783.942159016928,
            "unit": "ns",
            "range": "± 107.88861884268277"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14810.475049700055,
            "unit": "ns",
            "range": "± 31.53214758172844"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 141900.67889873797,
            "unit": "ns",
            "range": "± 181.23989745316317"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376214702,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15833.13939021184,
            "unit": "ns",
            "range": "± 30.89452482896761"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14643.306078229632,
            "unit": "ns",
            "range": "± 22.588595957654526"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14517.96155657087,
            "unit": "ns",
            "range": "± 10.836267830348623"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13098.6449608436,
            "unit": "ns",
            "range": "± 20.852495999958144"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 133140.2597280649,
            "unit": "ns",
            "range": "± 197.3839457518273"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21132.743131197414,
            "unit": "ns",
            "range": "± 24.578538443852036"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 19304.611206054688,
            "unit": "ns",
            "range": "± 28.921128688507988"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15940.60762845553,
            "unit": "ns",
            "range": "± 18.02927559230091"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14729.654928354117,
            "unit": "ns",
            "range": "± 29.86198515029438"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 145641.60330636162,
            "unit": "ns",
            "range": "± 240.0386412692425"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461946580,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16503.195190429688,
            "unit": "ns",
            "range": "± 21.032319388134894"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14677.972764235277,
            "unit": "ns",
            "range": "± 16.90577320821574"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14585.876573835101,
            "unit": "ns",
            "range": "± 9.594060637359187"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13035.739237467447,
            "unit": "ns",
            "range": "± 12.425596211620736"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 133002.19029017858,
            "unit": "ns",
            "range": "± 156.99877140035775"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19237.83634730748,
            "unit": "ns",
            "range": "± 21.277150897521217"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18428.602365347055,
            "unit": "ns",
            "range": "± 14.467528103347789"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15935.739949544271,
            "unit": "ns",
            "range": "± 15.917328348854248"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14239.984541672926,
            "unit": "ns",
            "range": "± 10.685534098968377"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 141877.3681640625,
            "unit": "ns",
            "range": "± 183.96615818666945"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479793695,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15933.493477957589,
            "unit": "ns",
            "range": "± 15.244186872806948"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14710.11594136556,
            "unit": "ns",
            "range": "± 15.846875509734272"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14515.819658551898,
            "unit": "ns",
            "range": "± 24.74296610358066"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13746.187264578683,
            "unit": "ns",
            "range": "± 15.359447272933478"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 134163.3510044643,
            "unit": "ns",
            "range": "± 254.97240939572924"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19144.036356608074,
            "unit": "ns",
            "range": "± 27.686056821790437"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 17944.921875,
            "unit": "ns",
            "range": "± 36.699400179970425"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15608.140563964844,
            "unit": "ns",
            "range": "± 18.352222063758013"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 13976.734379359654,
            "unit": "ns",
            "range": "± 11.122780252095295"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 142189.0615609976,
            "unit": "ns",
            "range": "± 361.5402320294543"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553627136,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 16909.112345377605,
            "unit": "ns",
            "range": "± 117.51409949190172"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15556.232343401227,
            "unit": "ns",
            "range": "± 99.52923991428378"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 15197.507120768229,
            "unit": "ns",
            "range": "± 85.10214793300682"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14448.244171142578,
            "unit": "ns",
            "range": "± 89.95604948411388"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 138475.80043247767,
            "unit": "ns",
            "range": "± 467.71234701120824"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 21024.512590680803,
            "unit": "ns",
            "range": "± 129.17809331381773"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18949.521484375,
            "unit": "ns",
            "range": "± 222.13813313175928"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 16404.81475830078,
            "unit": "ns",
            "range": "± 104.29927152056064"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14943.899427141461,
            "unit": "ns",
            "range": "± 74.17703856652727"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 152074.06982421875,
            "unit": "ns",
            "range": "± 1995.7350809014404"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655801691,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15812.62723482572,
            "unit": "ns",
            "range": "± 8.813701318974292"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15360.619119497445,
            "unit": "ns",
            "range": "± 14.034423818256096"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14446.368408203125,
            "unit": "ns",
            "range": "± 17.257470916855656"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13354.174041748047,
            "unit": "ns",
            "range": "± 28.853367310173315"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 133060.72998046875,
            "unit": "ns",
            "range": "± 151.380634982089"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19219.999040876115,
            "unit": "ns",
            "range": "± 24.647490830100452"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18148.884836832684,
            "unit": "ns",
            "range": "± 24.41302694234088"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15539.747365315756,
            "unit": "ns",
            "range": "± 11.281729661261151"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 13982.268742152623,
            "unit": "ns",
            "range": "± 13.819883729299153"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 140921.81396484375,
            "unit": "ns",
            "range": "± 160.0369032726694"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254314102,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15704.26744733538,
            "unit": "ns",
            "range": "± 16.931003227258167"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14863.27405657087,
            "unit": "ns",
            "range": "± 21.271134549199083"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14606.148965018136,
            "unit": "ns",
            "range": "± 156.00870259173564"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 12978.986576625279,
            "unit": "ns",
            "range": "± 34.89792436535526"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 132908.3017202524,
            "unit": "ns",
            "range": "± 149.3970091204067"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 18703.4228515625,
            "unit": "ns",
            "range": "± 36.19450552794393"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18795.73495047433,
            "unit": "ns",
            "range": "± 24.362919262560613"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15293.177678034855,
            "unit": "ns",
            "range": "± 16.796071825091627"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14051.386210123697,
            "unit": "ns",
            "range": "± 27.114118056853773"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 144826.25732421875,
            "unit": "ns",
            "range": "± 180.26962476983996"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788964579,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 17722.505841936385,
            "unit": "ns",
            "range": "± 24.25781624531169"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 17213.037327357702,
            "unit": "ns",
            "range": "± 27.501187953898434"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14177.644675118583,
            "unit": "ns",
            "range": "± 23.30785392576266"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 14751.225062779018,
            "unit": "ns",
            "range": "± 6.169719943331735"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 135579.59594726562,
            "unit": "ns",
            "range": "± 230.88303491534387"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19403.64034016927,
            "unit": "ns",
            "range": "± 22.576838349989153"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 18038.05389404297,
            "unit": "ns",
            "range": "± 12.700466373897013"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15351.534932454428,
            "unit": "ns",
            "range": "± 24.88754601792282"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 13975.2195085798,
            "unit": "ns",
            "range": "± 8.126837817254973"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 141681.1758188101,
            "unit": "ns",
            "range": "± 145.96790687712016"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050781011,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15876.650129045758,
            "unit": "ns",
            "range": "± 13.338884875901124"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 15354.933369954428,
            "unit": "ns",
            "range": "± 19.519298650854584"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14175.130208333334,
            "unit": "ns",
            "range": "± 12.855421578174372"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13543.7746320452,
            "unit": "ns",
            "range": "± 18.117312937592516"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 131000.56233723958,
            "unit": "ns",
            "range": "± 138.42766113484353"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19526.285611666164,
            "unit": "ns",
            "range": "± 46.42492016534587"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 19854.329572405135,
            "unit": "ns",
            "range": "± 51.803172629931"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15487.4924214681,
            "unit": "ns",
            "range": "± 18.797911857564205"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14917.962755475726,
            "unit": "ns",
            "range": "± 15.403878687748028"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 143095.18667367788,
            "unit": "ns",
            "range": "± 89.1163283225843"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369325087,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: DSV)",
            "value": 15788.146318708148,
            "unit": "ns",
            "range": "± 16.904751997727786"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: DSV)",
            "value": 14991.607020451473,
            "unit": "ns",
            "range": "± 7.700909267744056"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: DSV)",
            "value": 14685.241572062174,
            "unit": "ns",
            "range": "± 9.849086363198404"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: DSV)",
            "value": 13166.419110979352,
            "unit": "ns",
            "range": "± 9.585695286507814"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: DSV)",
            "value": 138583.32143930288,
            "unit": "ns",
            "range": "± 255.93770637825153"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Get(Params: None)",
            "value": 19906.47190638951,
            "unit": "ns",
            "range": "± 14.713145761025634"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.Set(Params: None)",
            "value": 19630.36150251116,
            "unit": "ns",
            "range": "± 50.17046450195259"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MGet(Params: None)",
            "value": 15391.673075358072,
            "unit": "ns",
            "range": "± 79.46579680594566"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.MSet(Params: None)",
            "value": 14263.573862711588,
            "unit": "ns",
            "range": "± 40.46702411426988"
          },
          {
            "name": "BDN.benchmark.Cluster.ClusterOperations.CTXNSET(Params: None)",
            "value": 142037.5767299107,
            "unit": "ns",
            "range": "± 170.43195036862602"
          }
        ]
      }
    ],
    "Operations.ObjectOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd766248719caf2817592e988a5e67edc22b511b",
          "message": "Implementing BDN Perf pipeline (#758)\n\n* The CI scripts, YML and config files to check perf using BDN benchmarking.  Also, a fix in ClusterBench for and renamed Lua Runner benchmarking\r\n\r\n* Cleaned up the debug message and updated couple expected values\r\n\r\n* Updated SAddRem - windows - to 130 from 118.  Also removed unncesssary build statement in YML\r\n\r\n* Proof of concept for Performance run on ADO using BDN\r\n\r\n* Comment out number of Cores check so can try proof of concept on ADO perf machines\r\n\r\n* Getting close to having BDN working\r\n\r\n* Fixed RespLuaStress\r\n\r\n* Fixed issue in Lua Runner Stress\r\n\r\n* Updated config values, set charting and commit comment as separate tasks\r\n\r\n* Updated config values\r\n\r\n* Minor change to YML (remove pull requests) and updated LuaRunner config value\r\n\r\n* One more config value fix\r\n\r\n* Added a task to do the push\r\n\r\n* Putting back to push chart in the chart task and not a separate one\r\n\r\n* Moved the permissions to full workflow\r\n\r\n* Just minor to add commits\r\n\r\n* Adding actions: write permit since actions default to read only\r\n\r\n* Set up the commit comment for BDN as well as summary to show current vs previous BDN perf numbers\r\n\r\n* A few fixes\r\n\r\n* Updated BDN perf YML, config files and ps1 script\r\n\r\n* Versioning issue with BDN test files, fixed now\r\n\r\n* Bump threshold to 35% (135%) to trigger perf failure\r\n\r\n* Set to Linux only to reduce number of consectutive tests which caused push collisions with GitHub\r\n\r\n* Just Windows only test run\r\n\r\n* Putting it back to both OS for the tests\r\n\r\n* Set threshhold to 50% (150%) as seeing BDN ran twice on same code sometimes is in 40%+ range of difference.\r\n\r\n* Big change where using continuousbenchmark branch for all data for continuous benchmarking and also changed to where script is only checking allocated values and let github-action-benchmark compare mean values\r\n\r\n* Updated ClusterBench to get main changes\r\n\r\n* Fix issue with Cluster BDN is not able to access folder so setting to tmp which does have access\r\n\r\n* Bumping threshold to 50% (150%) as mean value in RespParseStress can vary into the 40% from run to run.\r\n\r\n* First update\r\n\r\n* Hiding the Gen0 column for Lua benchmark\r\n\r\n* Updated BDN test infrastructure to match the new BDN org.\r\n\r\n* Fix bug in ObjectOperations\r\n\r\n* Set max items on chart to 50 ... can modify later if want\r\n\r\n* Added the run on push to main\r\n\r\n* Put Performance Pipeline back\r\n\r\n* Fixed the default case when no parameters sent to ps1\r\n\r\n* Cleaned up config files:\r\nhave shorter names for values\r\nnot have configuration or framework (moved to ps1 file)\r\nnot have windows / linux differnce in expected\r\nMoved acceptable allocated range to script\r\n\r\nmodified the script:\r\nto only load values for the specific test instead of looking for all values\r\nchanges to match the changes in config (shorter names, etc)\r\n\r\n* Big update to where moved to a single config file and the ps1 file does not need to be updated when new BDNs are added.\r\n\r\n* Added workflow_dispatch: to deploy website yml so we can manually deploy website if we want\r\n\r\n* Updated alert-threshold from 150% to 140%. If too many false positives we can raise it back. Also, removed darrenge from the alert CC line as no need for that.\r\n\r\n* Removed the commit comment / comparison to previous commit task. Still will get  summary data in the specific workflow run and still uploads data to charts (when pushing to main).\r\n\r\n* Minor update - comments only",
          "timestamp": "2024-12-11T11:29:32-08:00",
          "tree_id": "a262ac843488b7afb61ad91dfb2a488917243391",
          "url": "https://github.com/microsoft/garnet/commit/dd766248719caf2817592e988a5e67edc22b511b"
        },
        "date": 1733945963079,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 117469.85614483173,
            "unit": "ns",
            "range": "± 118.20445960057495"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 101654.33255709134,
            "unit": "ns",
            "range": "± 336.13015448341247"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 94977.55039760044,
            "unit": "ns",
            "range": "± 101.4315714587657"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 124513.5968889509,
            "unit": "ns",
            "range": "± 336.1565399510592"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 135552.19563802084,
            "unit": "ns",
            "range": "± 477.0538457125118"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 110716.27371651786,
            "unit": "ns",
            "range": "± 313.58627720752906"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 115650.49264090402,
            "unit": "ns",
            "range": "± 301.2726767340086"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 134771.18577223556,
            "unit": "ns",
            "range": "± 568.2523229533273"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 113091.53279622395,
            "unit": "ns",
            "range": "± 282.0970455083775"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 111425.2022298177,
            "unit": "ns",
            "range": "± 146.2544357108826"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 96716.28865559895,
            "unit": "ns",
            "range": "± 162.94304485938494"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 119671.75211588542,
            "unit": "ns",
            "range": "± 542.1449393168633"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aabc0bb831f2313bce41c43c29c9c2b0e434cb00",
          "message": "handle uninitialized epoch value merge (#874)\n\n* handle uninitialized epoch value merge\r\n\r\n* release 1.0.47",
          "timestamp": "2024-12-11T14:03:36-08:00",
          "tree_id": "ca83e06a72e78b6bab3872148b9e3eb5cb476269",
          "url": "https://github.com/microsoft/garnet/commit/aabc0bb831f2313bce41c43c29c9c2b0e434cb00"
        },
        "date": 1733955225122,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 117657.91585286458,
            "unit": "ns",
            "range": "± 395.0307387124439"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 98876.83959960938,
            "unit": "ns",
            "range": "± 250.13554982077963"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 92904.09138997395,
            "unit": "ns",
            "range": "± 102.57710469788871"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 122700.70393880208,
            "unit": "ns",
            "range": "± 481.5394253723863"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 131762.66764322916,
            "unit": "ns",
            "range": "± 881.6441622073024"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 114055.39916992188,
            "unit": "ns",
            "range": "± 661.6673976752282"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 107621.28819056919,
            "unit": "ns",
            "range": "± 433.1636920027391"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 136735.15787760416,
            "unit": "ns",
            "range": "± 977.9260258655637"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 116343.52792593148,
            "unit": "ns",
            "range": "± 249.84625402093044"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 99682.90123572716,
            "unit": "ns",
            "range": "± 260.4978876207597"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 94299.9544583834,
            "unit": "ns",
            "range": "± 203.97918902979606"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 120511.50599888393,
            "unit": "ns",
            "range": "± 696.4709856889897"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf1d4b66c442284f95c8db51e57274ba07316561",
          "message": "Bump nanoid from 3.3.7 to 3.3.8 in /website (#873)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: darrenge <darrenge@microsoft.com>",
          "timestamp": "2024-12-11T15:37:40-08:00",
          "tree_id": "1d3dbe6f308895a822d913fd3960c803796cb264",
          "url": "https://github.com/microsoft/garnet/commit/cf1d4b66c442284f95c8db51e57274ba07316561"
        },
        "date": 1733960828851,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 116593.3475748698,
            "unit": "ns",
            "range": "± 516.3730861704294"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 104033.29608623798,
            "unit": "ns",
            "range": "± 161.87090300705088"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 98085.92529296875,
            "unit": "ns",
            "range": "± 84.9483517207441"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 126816.02783203125,
            "unit": "ns",
            "range": "± 472.19561063740264"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 131121.10072544642,
            "unit": "ns",
            "range": "± 475.4391220032019"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 110045.25472005208,
            "unit": "ns",
            "range": "± 346.41315573235096"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 108467.96264648438,
            "unit": "ns",
            "range": "± 284.1038503553621"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 130421.05364118304,
            "unit": "ns",
            "range": "± 691.7146000864416"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 116338.47249348958,
            "unit": "ns",
            "range": "± 231.99281303805853"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 110297.1748860677,
            "unit": "ns",
            "range": "± 209.20849533261824"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 94023.35205078125,
            "unit": "ns",
            "range": "± 116.13650667485328"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 130021.17838541667,
            "unit": "ns",
            "range": "± 313.55904348302136"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d4c7448569063ea786802a0580acf465108e037",
          "message": "Add ReadOnly Support for IDevice (#870)\n\n* add readOnly flag in streamProvider for LocalStorageDevice\r\n\r\n* add linux readOnly flag for managed device\r\n\r\n* add explicit readOnly assignment for parameter",
          "timestamp": "2024-12-12T13:03:41-08:00",
          "tree_id": "3d591691e9ac0cfb714d98096a0580abab554b23",
          "url": "https://github.com/microsoft/garnet/commit/0d4c7448569063ea786802a0580acf465108e037"
        },
        "date": 1734037965566,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 113641.48230919472,
            "unit": "ns",
            "range": "± 240.10457908841713"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 98913.42366536458,
            "unit": "ns",
            "range": "± 200.9948349678025"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 96501.7804827009,
            "unit": "ns",
            "range": "± 197.50314565489035"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 129257.92073567708,
            "unit": "ns",
            "range": "± 708.044529123354"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 130608.94775390625,
            "unit": "ns",
            "range": "± 468.09136425576077"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 111809.44661458333,
            "unit": "ns",
            "range": "± 248.43179167809834"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 124643.34542410714,
            "unit": "ns",
            "range": "± 412.5084651025406"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 135039.78553185097,
            "unit": "ns",
            "range": "± 665.3841813222837"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 115858.29467773438,
            "unit": "ns",
            "range": "± 252.72961577597215"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 106498.07047526042,
            "unit": "ns",
            "range": "± 188.50303381936072"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95298.00763811384,
            "unit": "ns",
            "range": "± 236.2681281500387"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 129282.79378255208,
            "unit": "ns",
            "range": "± 974.6468983818551"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2c2261c72948136f6af9dfdfefc86ebb02c686a",
          "message": "CustomCommandManager + CustomCommandManagerSession to use auto-expandable maps (#848)\n\n* wip\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* Comments + tests\r\n\r\n* wip\r\n\r\n* fixes\r\n\r\n* fix\r\n\r\n* format\r\n\r\n* Adding a non-concurrent ExpandableMap\r\n\r\n* small fix\r\n\r\n* Switching to SingleWriterMultiReaderLock\r\n\r\n* Some thread-safety related fixes\r\n\r\n* Added some async tests for command registration\r\n\r\n* small bugfixes\r\n\r\n* format",
          "timestamp": "2024-12-12T18:49:23-08:00",
          "tree_id": "27ea42b0a4d6b834a7f450d12100d29e8b94f077",
          "url": "https://github.com/microsoft/garnet/commit/f2c2261c72948136f6af9dfdfefc86ebb02c686a"
        },
        "date": 1734058717018,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 116214.22932942708,
            "unit": "ns",
            "range": "± 78.97949944848496"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 97392.4543108259,
            "unit": "ns",
            "range": "± 147.6341061417578"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 93973.09919084821,
            "unit": "ns",
            "range": "± 154.68857943244714"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 121251.93743024554,
            "unit": "ns",
            "range": "± 457.91784889670726"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 126843.13720703125,
            "unit": "ns",
            "range": "± 359.70269063514195"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 113535.68237304688,
            "unit": "ns",
            "range": "± 300.9818706997414"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 105952.15876652644,
            "unit": "ns",
            "range": "± 303.51133031953464"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 131526.42578125,
            "unit": "ns",
            "range": "± 869.3067850596786"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 115147.79459635417,
            "unit": "ns",
            "range": "± 188.32108318023344"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 108673.25090680804,
            "unit": "ns",
            "range": "± 142.78057386665182"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 94941.06586162861,
            "unit": "ns",
            "range": "± 199.47444323813497"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 125488.82681039664,
            "unit": "ns",
            "range": "± 353.4912170985075"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "kmontrose@microsoft.com",
            "name": "kevin-montrose",
            "username": "kevin-montrose"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa004d372a23731e3e5f0fa65d701c4a4d62b381",
          "message": "Fixes for SCRIPT commands and behavior (#860)\n\n* fix FastBasicRespCommandsInfo construction and lookup; which incidentally fixes EVALSHA when scripting is enabled\r\n\r\n* fix MultiKeySlotVerify - keys past the second were not correctly visited\r\n\r\n* break SCRIPT into appropriate subcommands; update command info; fix SCRIPT EXISTS to match Redis behavior; tests for SCRIPT|* ACLs; DRY up SCRIPT command implementations\r\n\r\n* test script failures, match Redis error messages\r\n\r\n* remove byte[] allocations from evalsha path (amongst others); should get the Lua overhead down to just the NLua + locking stuff\r\n\r\n* add test for multi-hash version of SCRIPT|EXIST; fix bug where hash casing matters (matching Redis by defaulting to upper case hashes values); remove debug code\r\n\r\n* fix formatting\r\n\r\n* uppercase some test cases I missed\r\n\r\n* add EVALSHA to cluster slot tests\r\n\r\n* restore lower case hashes; erroneously thought Redis used upper case\r\n\r\n* add ScriptOperations to benchmark this change\r\n\r\n* formatting fixes\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-12T23:23:53-08:00",
          "tree_id": "8c0664ade6b6572a8af295961a2d61a846b60756",
          "url": "https://github.com/microsoft/garnet/commit/aa004d372a23731e3e5f0fa65d701c4a4d62b381"
        },
        "date": 1734075219823,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 117602.5850423177,
            "unit": "ns",
            "range": "± 268.14469719984487"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 100068.25648716518,
            "unit": "ns",
            "range": "± 215.98866455187687"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 98195.68969726562,
            "unit": "ns",
            "range": "± 170.2632887826311"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 129471.09562800481,
            "unit": "ns",
            "range": "± 601.4645179170432"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 128720.00325520833,
            "unit": "ns",
            "range": "± 724.5561520499434"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 116062.32125418527,
            "unit": "ns",
            "range": "± 285.29683511968113"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 105981.90133231027,
            "unit": "ns",
            "range": "± 354.13393520164215"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 135189.70249720983,
            "unit": "ns",
            "range": "± 872.1067969842775"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 115300.41591099331,
            "unit": "ns",
            "range": "± 166.86754308278034"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 106325.14729817708,
            "unit": "ns",
            "range": "± 499.8208465048155"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95338.51492745536,
            "unit": "ns",
            "range": "± 246.8452213186863"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 123997.06186147836,
            "unit": "ns",
            "range": "± 719.1933766640254"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca0222960f0145302eb1fc9896f680f9aff5a4d1",
          "message": "Streaming snapshot checkpoint in Tsavorite (#824)\n\n* Mild refactor in preparation\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* updates\r\n\r\n* fix tests to not cover steaming snapshot as it is not a traditional checkpoint\r\n\r\n* add unit test\r\n\r\n* fix tests\r\n\r\n* fix test\r\n\r\n* updates\r\n\r\n* Support maxAddress during liveness checks\r\n\r\n* improvements to api\r\n\r\n* Add SetVersion API\r\n\r\n* more checks\r\n\r\n* add comment\r\n\r\n* add comments",
          "timestamp": "2024-12-13T10:25:49-08:00",
          "tree_id": "917be4f308af8da9ec7782faa5069a09f2b873c5",
          "url": "https://github.com/microsoft/garnet/commit/ca0222960f0145302eb1fc9896f680f9aff5a4d1"
        },
        "date": 1734114928649,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 117135.84798177083,
            "unit": "ns",
            "range": "± 187.1430737430288"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 102171.64132254464,
            "unit": "ns",
            "range": "± 342.4008841905227"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 95367.40397135417,
            "unit": "ns",
            "range": "± 350.4140577051225"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: ACL)",
            "value": 135771.83919270834,
            "unit": "ns",
            "range": "± 594.9988108243732"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 130480.45817057292,
            "unit": "ns",
            "range": "± 405.8453523718878"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 117489.93791852679,
            "unit": "ns",
            "range": "± 1452.651261908386"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 110460.13509114583,
            "unit": "ns",
            "range": "± 1596.394497504247"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: AOF)",
            "value": 130453.11686197917,
            "unit": "ns",
            "range": "± 977.9933246960668"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 117863.3562360491,
            "unit": "ns",
            "range": "± 202.7785370346965"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 104769.48590959821,
            "unit": "ns",
            "range": "± 192.3096648700648"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95717.91120256696,
            "unit": "ns",
            "range": "± 108.29702596150958"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.HSetDel(Params: None)",
            "value": 122163.60595703125,
            "unit": "ns",
            "range": "± 703.501128105373"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f679b0b683e4e94fa2a3ebb2689708ec2efee74",
          "message": "Added BDN for all hash commands (#879)\n\n* Added BDN for all hash commands\r\n\r\n* Moved BDN of hash set to separate class",
          "timestamp": "2024-12-13T12:50:11-08:00",
          "tree_id": "66c04dc8b338f40aeb360419fc1953dcc219abbc",
          "url": "https://github.com/microsoft/garnet/commit/3f679b0b683e4e94fa2a3ebb2689708ec2efee74"
        },
        "date": 1734123459139,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 115062.64386858259,
            "unit": "ns",
            "range": "± 168.8752736031304"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 105443.16162109375,
            "unit": "ns",
            "range": "± 253.66750413562195"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 97432.7627328726,
            "unit": "ns",
            "range": "± 312.7273749022049"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 129291.72252308238,
            "unit": "ns",
            "range": "± 2384.9101900122428"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 124482.71565755208,
            "unit": "ns",
            "range": "± 1355.0766741124824"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 111616.0382952009,
            "unit": "ns",
            "range": "± 452.90685304667704"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 114352.7334359976,
            "unit": "ns",
            "range": "± 240.17060234382208"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 102656.54744466145,
            "unit": "ns",
            "range": "± 245.24017665253007"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95597.30122884114,
            "unit": "ns",
            "range": "± 133.960310466468"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "178dc21b572263c4421e2602e41cc243cb94f507",
          "message": "Fix writing output for scan (#880)\n\n* Writing output for scan was not handling output buffer (dcurr, dend) correctly. Also, it was not handling large keys correctly.\r\n\r\n* update version",
          "timestamp": "2024-12-13T13:55:49-08:00",
          "tree_id": "1966c990a96fa84a42747ad14ce5480535196e57",
          "url": "https://github.com/microsoft/garnet/commit/178dc21b572263c4421e2602e41cc243cb94f507"
        },
        "date": 1734127412919,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 115642.42318960336,
            "unit": "ns",
            "range": "± 102.75278245436874"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 102466.34192833534,
            "unit": "ns",
            "range": "± 202.8306439194994"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 100561.8913922991,
            "unit": "ns",
            "range": "± 160.0906994319792"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 139020.92529296875,
            "unit": "ns",
            "range": "± 330.93826372590314"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 118789.26676432292,
            "unit": "ns",
            "range": "± 1367.0680026826262"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 115630.224609375,
            "unit": "ns",
            "range": "± 419.3880405867164"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 116112.93247767857,
            "unit": "ns",
            "range": "± 325.70703374699957"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 102194.97855050223,
            "unit": "ns",
            "range": "± 271.1996214923902"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 97478.23399135044,
            "unit": "ns",
            "range": "± 225.35990111434828"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1ce0dafecaba15335e8e0767a6eeb441b72e56c",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#862)\n\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T14:08:03-08:00",
          "tree_id": "b2aa23d9235558527754332fab728fa03d60007b",
          "url": "https://github.com/microsoft/garnet/commit/f1ce0dafecaba15335e8e0767a6eeb441b72e56c"
        },
        "date": 1734128140863,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 118704.71976143973,
            "unit": "ns",
            "range": "± 242.04066056775372"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 101687.70426432292,
            "unit": "ns",
            "range": "± 182.8555232010719"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 97941.39506022136,
            "unit": "ns",
            "range": "± 173.81464464314806"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 131557.5732421875,
            "unit": "ns",
            "range": "± 413.5562759601777"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 121853.09012276786,
            "unit": "ns",
            "range": "± 1809.6477469639594"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 116753.09709821429,
            "unit": "ns",
            "range": "± 375.6256127553452"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 115732.48291015625,
            "unit": "ns",
            "range": "± 184.13804250367644"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 102807.2041829427,
            "unit": "ns",
            "range": "± 208.4627278586627"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 98850.12468610491,
            "unit": "ns",
            "range": "± 201.5069162787347"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132329136,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 119788.99739583333,
            "unit": "ns",
            "range": "± 305.86198833475123"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 100460.20670572917,
            "unit": "ns",
            "range": "± 197.590583535323"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 98185.46793619792,
            "unit": "ns",
            "range": "± 253.79178289688934"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 137692.49877929688,
            "unit": "ns",
            "range": "± 313.1019759300935"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 121363.36588541667,
            "unit": "ns",
            "range": "± 1944.1178779070988"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 108216.00717397836,
            "unit": "ns",
            "range": "± 306.0266981971123"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 118370.60546875,
            "unit": "ns",
            "range": "± 800.1728807543527"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 100838.63431490384,
            "unit": "ns",
            "range": "± 127.53967505649548"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 98680.09905133929,
            "unit": "ns",
            "range": "± 205.10962159461997"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734134053726,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 114463.0594889323,
            "unit": "ns",
            "range": "± 191.8600474852767"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 98621.8135579427,
            "unit": "ns",
            "range": "± 226.88147621126745"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 101412.52632141113,
            "unit": "ns",
            "range": "± 1758.5818662879167"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 129331.33382161458,
            "unit": "ns",
            "range": "± 919.1197258199484"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 120020.4150390625,
            "unit": "ns",
            "range": "± 1170.6279527104539"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 124061.46728515625,
            "unit": "ns",
            "range": "± 383.9969529502185"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 117775.8535531851,
            "unit": "ns",
            "range": "± 206.91973810773197"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 103430.6894155649,
            "unit": "ns",
            "range": "± 195.9502351956504"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 98355.10602678571,
            "unit": "ns",
            "range": "± 395.3336358162344"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377304103,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 114620.31062199519,
            "unit": "ns",
            "range": "± 1583.203921993921"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 101830.67708333333,
            "unit": "ns",
            "range": "± 253.97500389876797"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 97592.84580775669,
            "unit": "ns",
            "range": "± 221.90875628704876"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 129444.56411508414,
            "unit": "ns",
            "range": "± 428.02077053094916"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 120631.00341796875,
            "unit": "ns",
            "range": "± 898.0823255409052"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 117381.39078776042,
            "unit": "ns",
            "range": "± 448.9830915806046"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 117584.48311941964,
            "unit": "ns",
            "range": "± 111.7342870503071"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 103258.96362304688,
            "unit": "ns",
            "range": "± 316.9284272989154"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95570.3857421875,
            "unit": "ns",
            "range": "± 191.44852851011865"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392809098,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 119467.15175083706,
            "unit": "ns",
            "range": "± 307.3869156225632"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 103709.81794084821,
            "unit": "ns",
            "range": "± 292.02720152176784"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 97448.48185221355,
            "unit": "ns",
            "range": "± 313.9269585071764"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 132757.5830078125,
            "unit": "ns",
            "range": "± 435.0077955599788"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 117366.10020228794,
            "unit": "ns",
            "range": "± 246.10804797892393"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 111037.65014648438,
            "unit": "ns",
            "range": "± 274.61611362926465"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 126121.71161358173,
            "unit": "ns",
            "range": "± 148.81639455541807"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 105498.98420061384,
            "unit": "ns",
            "range": "± 264.0938894803624"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 99995.43718610491,
            "unit": "ns",
            "range": "± 212.49847304642287"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483707888,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 120307.38431490384,
            "unit": "ns",
            "range": "± 324.2416449763312"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 105396.26934344952,
            "unit": "ns",
            "range": "± 140.14739475840702"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 94781.28763834636,
            "unit": "ns",
            "range": "± 116.01739542384513"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 131927.42745535713,
            "unit": "ns",
            "range": "± 477.5995651271612"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 116374.87182617188,
            "unit": "ns",
            "range": "± 286.3162479676962"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 110618.01382211539,
            "unit": "ns",
            "range": "± 168.67534805149813"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 115447.2383626302,
            "unit": "ns",
            "range": "± 205.27525832500004"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 104193.76307896206,
            "unit": "ns",
            "range": "± 185.20231659528034"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95603.02821568081,
            "unit": "ns",
            "range": "± 274.77792827688484"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559700339,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 119799.83379657452,
            "unit": "ns",
            "range": "± 217.27781330736732"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 101619.49556790866,
            "unit": "ns",
            "range": "± 274.65843096514436"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 93392.15175083706,
            "unit": "ns",
            "range": "± 154.89013003801972"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 125877.42431640625,
            "unit": "ns",
            "range": "± 761.6543963960276"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 118120.13020833333,
            "unit": "ns",
            "range": "± 337.6919397545379"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 108458.0350748698,
            "unit": "ns",
            "range": "± 230.84734803830534"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 122258.80643404447,
            "unit": "ns",
            "range": "± 94.54536535706315"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 106203.30322265625,
            "unit": "ns",
            "range": "± 152.62927039364797"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 96196.00830078125,
            "unit": "ns",
            "range": "± 248.54453461322402"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578827000,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 117101.45176478794,
            "unit": "ns",
            "range": "± 196.5666680982974"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 102098.00327845982,
            "unit": "ns",
            "range": "± 179.87832476408084"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 96040.65813337054,
            "unit": "ns",
            "range": "± 482.7087788823615"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 129209.6923828125,
            "unit": "ns",
            "range": "± 500.18068923040744"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 119317.51302083333,
            "unit": "ns",
            "range": "± 394.13487786975486"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 109429.35791015625,
            "unit": "ns",
            "range": "± 213.64901669443165"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 121355.28727213542,
            "unit": "ns",
            "range": "± 306.67874439874987"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 104552.8826032366,
            "unit": "ns",
            "range": "± 354.7434781348002"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 94905.98929268973,
            "unit": "ns",
            "range": "± 154.15343557546916"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734596085441,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 118187.75503976004,
            "unit": "ns",
            "range": "± 3284.1908210437527"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 106790.99731445312,
            "unit": "ns",
            "range": "± 197.95346537022866"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 94250.7568359375,
            "unit": "ns",
            "range": "± 230.3783450951601"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 132108.6808268229,
            "unit": "ns",
            "range": "± 489.89758324701893"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 121811.71526227679,
            "unit": "ns",
            "range": "± 367.6515119889056"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 110332.1027483259,
            "unit": "ns",
            "range": "± 244.52424022254328"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 116778.53017953727,
            "unit": "ns",
            "range": "± 104.06942394930712"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 103804.99314528245,
            "unit": "ns",
            "range": "± 373.52849107884816"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 98216.31673177083,
            "unit": "ns",
            "range": "± 386.91897570828615"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643480351,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 126238.87288411458,
            "unit": "ns",
            "range": "± 367.3387421756896"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 104915.49769810268,
            "unit": "ns",
            "range": "± 167.4391536199353"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 96002.42135184152,
            "unit": "ns",
            "range": "± 178.49036176553548"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 134184.06005859375,
            "unit": "ns",
            "range": "± 579.3986263416547"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 114842.9704938616,
            "unit": "ns",
            "range": "± 247.71102978211317"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 108346.58203125,
            "unit": "ns",
            "range": "± 194.9861947852116"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 115882.31811523438,
            "unit": "ns",
            "range": "± 214.17853901671637"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 102751.07299804688,
            "unit": "ns",
            "range": "± 179.56932190648791"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95558.9372907366,
            "unit": "ns",
            "range": "± 174.19493124276198"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647806360,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 112222.38647460938,
            "unit": "ns",
            "range": "± 254.13447436575555"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 107228.98821149554,
            "unit": "ns",
            "range": "± 209.9202883098522"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 98492.40984235491,
            "unit": "ns",
            "range": "± 191.4817998967289"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 129201.3192983774,
            "unit": "ns",
            "range": "± 340.705884087572"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 116534.84872671273,
            "unit": "ns",
            "range": "± 205.70449095943977"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 110341.69067382812,
            "unit": "ns",
            "range": "± 234.61115688748637"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 115567.89632161458,
            "unit": "ns",
            "range": "± 345.77199496115026"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 104223.86596679688,
            "unit": "ns",
            "range": "± 194.61364121860143"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95877.57045200893,
            "unit": "ns",
            "range": "± 260.8404021813688"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652574192,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 115266.16559709821,
            "unit": "ns",
            "range": "± 146.59878525919322"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 106992.32224684495,
            "unit": "ns",
            "range": "± 220.94286153013653"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 94935.51722935268,
            "unit": "ns",
            "range": "± 114.31227444686591"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 132299.7713216146,
            "unit": "ns",
            "range": "± 324.67967780775365"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 117147.90974934895,
            "unit": "ns",
            "range": "± 299.6344901822359"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 108796.00394112723,
            "unit": "ns",
            "range": "± 249.8922689302751"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 116764.37284029447,
            "unit": "ns",
            "range": "± 205.01483530773447"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 102578.7967936198,
            "unit": "ns",
            "range": "± 191.09616371020346"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 94656.61987304688,
            "unit": "ns",
            "range": "± 253.04894773174206"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747245976,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 115515.26838030134,
            "unit": "ns",
            "range": "± 244.40833228483447"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 104415.90106670673,
            "unit": "ns",
            "range": "± 166.64027312066642"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 95410.107421875,
            "unit": "ns",
            "range": "± 194.0503205901837"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 130043.27229817708,
            "unit": "ns",
            "range": "± 315.57467212706956"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 117726.3445172991,
            "unit": "ns",
            "range": "± 217.40256606631587"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 108921.61167689732,
            "unit": "ns",
            "range": "± 306.49479545260436"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 115928.19295247395,
            "unit": "ns",
            "range": "± 232.8714451303651"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 102645.02737862723,
            "unit": "ns",
            "range": "± 307.4178594039366"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 98242.96549479167,
            "unit": "ns",
            "range": "± 188.96971114902357"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906810061,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 115779.12510463169,
            "unit": "ns",
            "range": "± 223.12971899529973"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 104263.32571847098,
            "unit": "ns",
            "range": "± 243.64564586138928"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 95687.47680664062,
            "unit": "ns",
            "range": "± 312.8369130241145"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 132117.10286458334,
            "unit": "ns",
            "range": "± 360.92608024666947"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 119691.41188401442,
            "unit": "ns",
            "range": "± 406.3760301717429"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 115734.0070452009,
            "unit": "ns",
            "range": "± 382.575052288506"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 116897.51352163461,
            "unit": "ns",
            "range": "± 299.0519011698049"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 106239.10710261419,
            "unit": "ns",
            "range": "± 306.6313649800571"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 98226.10212053571,
            "unit": "ns",
            "range": "± 154.39270380587604"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407653698,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 115737.83710186298,
            "unit": "ns",
            "range": "± 270.34651300379494"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 105951.29475911458,
            "unit": "ns",
            "range": "± 262.46925621071927"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 95107.17264811198,
            "unit": "ns",
            "range": "± 316.490613282959"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 129157.72135416667,
            "unit": "ns",
            "range": "± 243.52675674982427"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 115839.39034598214,
            "unit": "ns",
            "range": "± 326.6285899136331"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 109830.33813476562,
            "unit": "ns",
            "range": "± 171.57638346967752"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 115541.91807338169,
            "unit": "ns",
            "range": "± 266.77660708660557"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 107138.9657827524,
            "unit": "ns",
            "range": "± 196.90892217825743"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 97942.38037109375,
            "unit": "ns",
            "range": "± 1537.2003852849925"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187405659,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 114612.21557617188,
            "unit": "ns",
            "range": "± 217.957287939686"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 107880.10019155648,
            "unit": "ns",
            "range": "± 273.47206462129475"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 96901.20064871652,
            "unit": "ns",
            "range": "± 274.9619882665255"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 131935.85298978366,
            "unit": "ns",
            "range": "± 442.7403831416877"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 117734.48486328125,
            "unit": "ns",
            "range": "± 341.93115065085715"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 107375.28310922477,
            "unit": "ns",
            "range": "± 238.94485425282133"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 126745.56603064903,
            "unit": "ns",
            "range": "± 200.02268909324354"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 103909.8406110491,
            "unit": "ns",
            "range": "± 184.03065590808487"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 97497.8254045759,
            "unit": "ns",
            "range": "± 195.81829582409148"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283179605,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 118378.18979116586,
            "unit": "ns",
            "range": "± 274.35264856725746"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 102027.71559495192,
            "unit": "ns",
            "range": "± 148.01541664503446"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 96246.96279672477,
            "unit": "ns",
            "range": "± 303.7985278337653"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 131586.29150390625,
            "unit": "ns",
            "range": "± 377.84989290161093"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 116161.3232421875,
            "unit": "ns",
            "range": "± 390.4160486163254"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 109972.94311523438,
            "unit": "ns",
            "range": "± 209.51838820359774"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 118839.74958147321,
            "unit": "ns",
            "range": "± 416.32525171774273"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 103952.33154296875,
            "unit": "ns",
            "range": "± 146.3716230695169"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95016.00254603794,
            "unit": "ns",
            "range": "± 173.62537369513095"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376207085,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 122451.98893229167,
            "unit": "ns",
            "range": "± 283.24934150910417"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 104150.0419108073,
            "unit": "ns",
            "range": "± 243.37122929051384"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 97957.32857840402,
            "unit": "ns",
            "range": "± 166.16624914697735"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 134360.87552584134,
            "unit": "ns",
            "range": "± 1091.4338834325522"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 118393.857421875,
            "unit": "ns",
            "range": "± 1789.212013484271"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 118034.92757161458,
            "unit": "ns",
            "range": "± 294.0489560268633"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 118551.12492487981,
            "unit": "ns",
            "range": "± 496.3816339830664"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 101580.88291713169,
            "unit": "ns",
            "range": "± 132.26642705238228"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 96800.54757254464,
            "unit": "ns",
            "range": "± 110.85804717539416"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736462012808,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 117373.81591796875,
            "unit": "ns",
            "range": "± 460.838185662333"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 104050.17211914062,
            "unit": "ns",
            "range": "± 282.1519773608315"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 100642.98604329427,
            "unit": "ns",
            "range": "± 299.40764263967714"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 129274.24967447917,
            "unit": "ns",
            "range": "± 532.3912916497908"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 115493.34200345553,
            "unit": "ns",
            "range": "± 270.92007967758974"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 110351.8017578125,
            "unit": "ns",
            "range": "± 481.0561984814912"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 120444.66227213542,
            "unit": "ns",
            "range": "± 216.0955514994629"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 101790.19409179688,
            "unit": "ns",
            "range": "± 323.0869120533017"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 94697.67456054688,
            "unit": "ns",
            "range": "± 196.15853291985437"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479777314,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 114900.17351422991,
            "unit": "ns",
            "range": "± 213.1222023694565"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 104029.87060546875,
            "unit": "ns",
            "range": "± 193.84964357808693"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 94731.5190241887,
            "unit": "ns",
            "range": "± 281.89336423934236"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 134783.8344029018,
            "unit": "ns",
            "range": "± 443.1897933630507"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 116379.53857421875,
            "unit": "ns",
            "range": "± 360.76413514110084"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 116155.89948381696,
            "unit": "ns",
            "range": "± 402.84640368248205"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 116259.47004045759,
            "unit": "ns",
            "range": "± 275.27183143987463"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 103510.62622070312,
            "unit": "ns",
            "range": "± 219.0167641802235"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 101631.77577427456,
            "unit": "ns",
            "range": "± 199.45597543134951"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553657171,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 115821.1181640625,
            "unit": "ns",
            "range": "± 224.0992627007291"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 103911.98207310268,
            "unit": "ns",
            "range": "± 262.28441390083725"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 101064.38786433294,
            "unit": "ns",
            "range": "± 101.61551288285403"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 149130.57686941963,
            "unit": "ns",
            "range": "± 452.7623095320466"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 118332.06787109375,
            "unit": "ns",
            "range": "± 419.7888705987497"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 110533.45581054688,
            "unit": "ns",
            "range": "± 1595.167772785193"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 112462.99153645833,
            "unit": "ns",
            "range": "± 260.7482193653444"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 102573.28839983259,
            "unit": "ns",
            "range": "± 260.28110366679545"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 97927.60620117188,
            "unit": "ns",
            "range": "± 234.87794028022432"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655876145,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 118659.57923302284,
            "unit": "ns",
            "range": "± 237.33904707048694"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 100638.43732561384,
            "unit": "ns",
            "range": "± 188.9067182760551"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 98988.30284705528,
            "unit": "ns",
            "range": "± 107.91669859164375"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 131724.49481670672,
            "unit": "ns",
            "range": "± 401.21262696976925"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 116414.26042829241,
            "unit": "ns",
            "range": "± 315.32909118961743"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 112322.57596529447,
            "unit": "ns",
            "range": "± 237.8536983106088"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 114976.57189002403,
            "unit": "ns",
            "range": "± 114.4907303867663"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 102586.01771763393,
            "unit": "ns",
            "range": "± 248.7372540956554"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95443.24340820312,
            "unit": "ns",
            "range": "± 359.5856196411603"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254253057,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 115922.12430513822,
            "unit": "ns",
            "range": "± 181.01005699995784"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 101984.67581612723,
            "unit": "ns",
            "range": "± 237.53827982526445"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 100005.51106770833,
            "unit": "ns",
            "range": "± 110.63381272215756"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 135065.47526041666,
            "unit": "ns",
            "range": "± 633.3828017612112"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 115496.74246651786,
            "unit": "ns",
            "range": "± 217.34795074879517"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 110259.67854817708,
            "unit": "ns",
            "range": "± 316.3927965774478"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 116846.02573939732,
            "unit": "ns",
            "range": "± 129.04889690185604"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 115168.01241361178,
            "unit": "ns",
            "range": "± 287.9680775415977"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 95345.26279994419,
            "unit": "ns",
            "range": "± 204.8070936473042"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788855355,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 124678.74943659856,
            "unit": "ns",
            "range": "± 602.3258518656751"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 105130.73026216947,
            "unit": "ns",
            "range": "± 160.30533337248306"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 99482.22290039062,
            "unit": "ns",
            "range": "± 321.74910972267526"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 136314.30989583334,
            "unit": "ns",
            "range": "± 312.0398907859375"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 134852.6017252604,
            "unit": "ns",
            "range": "± 574.6864559421218"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 114045.05145733173,
            "unit": "ns",
            "range": "± 227.3965399878549"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 119821.96843073919,
            "unit": "ns",
            "range": "± 192.0115434835199"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 107185.23841271034,
            "unit": "ns",
            "range": "± 295.9155289129245"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 96393.99454752605,
            "unit": "ns",
            "range": "± 475.5895668951371"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050643253,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 120884.75247896634,
            "unit": "ns",
            "range": "± 231.9734907380985"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 103793.71134440105,
            "unit": "ns",
            "range": "± 204.61035778972297"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 96187.2871907552,
            "unit": "ns",
            "range": "± 359.2577551822615"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 137051.80382361778,
            "unit": "ns",
            "range": "± 299.05334239042264"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 128194.78196364183,
            "unit": "ns",
            "range": "± 1958.4505597451569"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 111941.59220377605,
            "unit": "ns",
            "range": "± 244.56876828503752"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 122955.771484375,
            "unit": "ns",
            "range": "± 277.0316733815873"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 107537.58626302083,
            "unit": "ns",
            "range": "± 243.49410522396383"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 101505.7548014323,
            "unit": "ns",
            "range": "± 311.0920348317095"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369226561,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: ACL)",
            "value": 118225.08806501116,
            "unit": "ns",
            "range": "± 240.14101374202622"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: ACL)",
            "value": 106497.74954659598,
            "unit": "ns",
            "range": "± 232.52810505234015"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: ACL)",
            "value": 99338.43712439903,
            "unit": "ns",
            "range": "± 291.73506959934963"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: AOF)",
            "value": 144751.66887555804,
            "unit": "ns",
            "range": "± 913.8652987369139"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: AOF)",
            "value": 120190.830078125,
            "unit": "ns",
            "range": "± 378.43784350260023"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: AOF)",
            "value": 114712.62776692708,
            "unit": "ns",
            "range": "± 375.9071069055594"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.ZAddRem(Params: None)",
            "value": 130096.02701822917,
            "unit": "ns",
            "range": "± 744.3964282139219"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.LPushPop(Params: None)",
            "value": 106858.58248197116,
            "unit": "ns",
            "range": "± 168.53123649146556"
          },
          {
            "name": "BDN.benchmark.Operations.ObjectOperations.SAddRem(Params: None)",
            "value": 101332.69205729167,
            "unit": "ns",
            "range": "± 220.49332331173358"
          }
        ]
      }
    ],
    "Operations.RawStringOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132639030,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14816.435294596355,
            "unit": "ns",
            "range": "± 94.47031746751409"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20867.645955012395,
            "unit": "ns",
            "range": "± 62.23709210726049"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18398.01870727539,
            "unit": "ns",
            "range": "± 22.366514890939868"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19889.976309640067,
            "unit": "ns",
            "range": "± 106.39092173710817"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16036.700192260741,
            "unit": "ns",
            "range": "± 121.48324991209529"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10745.905465698243,
            "unit": "ns",
            "range": "± 64.65198556143768"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 23705.533628191268,
            "unit": "ns",
            "range": "± 33.80530274701759"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21846.329234531946,
            "unit": "ns",
            "range": "± 67.75085535183324"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26406.58366699219,
            "unit": "ns",
            "range": "± 248.9055532408708"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26748.1680254255,
            "unit": "ns",
            "range": "± 165.1544381890471"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21939.715114339193,
            "unit": "ns",
            "range": "± 146.1171765020887"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26771.108364868163,
            "unit": "ns",
            "range": "± 165.60410716734407"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25098.915174211776,
            "unit": "ns",
            "range": "± 167.85152025377164"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26941.963915311375,
            "unit": "ns",
            "range": "± 110.07342525922692"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16321.20508066813,
            "unit": "ns",
            "range": "± 15.58166762704221"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 11050.980593872071,
            "unit": "ns",
            "range": "± 63.9937004452282"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26990.272666422527,
            "unit": "ns",
            "range": "± 167.21266068029854"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27124.480870564777,
            "unit": "ns",
            "range": "± 43.895254244510504"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 33351.030102539065,
            "unit": "ns",
            "range": "± 201.26691508370874"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32949.65606689453,
            "unit": "ns",
            "range": "± 152.70987850466912"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15014.184030151368,
            "unit": "ns",
            "range": "± 87.55152195832815"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20030.226927537184,
            "unit": "ns",
            "range": "± 96.66258304701852"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18108.268931070965,
            "unit": "ns",
            "range": "± 35.9250112337681"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18985.955738612585,
            "unit": "ns",
            "range": "± 37.45660220563274"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16185.63039855957,
            "unit": "ns",
            "range": "± 129.11212601003973"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 12123.172189331055,
            "unit": "ns",
            "range": "± 71.73718003803029"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 25848.575937906902,
            "unit": "ns",
            "range": "± 151.72851752805664"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 22483.849430964543,
            "unit": "ns",
            "range": "± 16.997879760971536"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26911.922853597007,
            "unit": "ns",
            "range": "± 164.68100666620697"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 32917.95057326097,
            "unit": "ns",
            "range": "± 114.5120843144981"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734134247792,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15040.84912516276,
            "unit": "ns",
            "range": "± 23.585042481079213"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19540.92861821101,
            "unit": "ns",
            "range": "± 53.69212439264756"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18225.098035176594,
            "unit": "ns",
            "range": "± 37.88709339374149"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19460.130341593424,
            "unit": "ns",
            "range": "± 161.55860936968878"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16288.35307820638,
            "unit": "ns",
            "range": "± 46.856450850652664"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10556.828758748372,
            "unit": "ns",
            "range": "± 83.58258297465694"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21140.534297688802,
            "unit": "ns",
            "range": "± 172.27878763634945"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21586.798568725586,
            "unit": "ns",
            "range": "± 52.065576740190075"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 27743.20965677897,
            "unit": "ns",
            "range": "± 150.2632606930286"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 28531.93859354655,
            "unit": "ns",
            "range": "± 135.10381573634342"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21395.852436610632,
            "unit": "ns",
            "range": "± 158.13741997950402"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 31432.833251953125,
            "unit": "ns",
            "range": "± 86.05449422239947"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25553.994467599052,
            "unit": "ns",
            "range": "± 92.73541936305972"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26730.906129964194,
            "unit": "ns",
            "range": "± 200.26982052778573"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16457.352444966633,
            "unit": "ns",
            "range": "± 18.64974478032745"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10767.130409240723,
            "unit": "ns",
            "range": "± 20.10667250516548"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26527.085503133138,
            "unit": "ns",
            "range": "± 184.82046858944003"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27427.782153320313,
            "unit": "ns",
            "range": "± 147.10154968404245"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 33533.240110270184,
            "unit": "ns",
            "range": "± 325.3444029786193"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 33121.719746907555,
            "unit": "ns",
            "range": "± 75.02687157576486"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15173.479718889508,
            "unit": "ns",
            "range": "± 122.36040817383642"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19957.889942714148,
            "unit": "ns",
            "range": "± 159.23867414031795"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17974.324526468914,
            "unit": "ns",
            "range": "± 28.958586089582848"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19055.313226318358,
            "unit": "ns",
            "range": "± 149.29912050474513"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16453.594492594402,
            "unit": "ns",
            "range": "± 131.2964822803046"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10541.59819139753,
            "unit": "ns",
            "range": "± 70.16661803304315"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 22145.633270263672,
            "unit": "ns",
            "range": "± 40.209250159713356"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21240.92807006836,
            "unit": "ns",
            "range": "± 136.83212188907405"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 32362.708849225724,
            "unit": "ns",
            "range": "± 135.07724733469584"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 32329.27238246373,
            "unit": "ns",
            "range": "± 67.77894808910607"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377553391,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 16411.416407658504,
            "unit": "ns",
            "range": "± 52.23875082391392"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20579.89013264974,
            "unit": "ns",
            "range": "± 172.68709500094968"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18101.901111309344,
            "unit": "ns",
            "range": "± 29.30059075712781"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19521.95375061035,
            "unit": "ns",
            "range": "± 193.27562176698385"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16329.01357014974,
            "unit": "ns",
            "range": "± 47.31578637564349"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10456.176090494791,
            "unit": "ns",
            "range": "± 85.75280535037415"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 22310.687093098957,
            "unit": "ns",
            "range": "± 23.173970114852846"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21968.597871907554,
            "unit": "ns",
            "range": "± 177.1799320184066"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 30027.247102864585,
            "unit": "ns",
            "range": "± 180.9668091956291"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 27556.961475078875,
            "unit": "ns",
            "range": "± 73.64646409857157"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21348.52862548828,
            "unit": "ns",
            "range": "± 181.09318677743363"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 28106.921310424805,
            "unit": "ns",
            "range": "± 51.89961884233096"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 26094.15082397461,
            "unit": "ns",
            "range": "± 193.18122021091492"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26961.936048235213,
            "unit": "ns",
            "range": "± 170.55074721531452"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16137.421095628004,
            "unit": "ns",
            "range": "± 13.119065252079793"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 11059.624062856039,
            "unit": "ns",
            "range": "± 21.767063030626126"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27131.303755696616,
            "unit": "ns",
            "range": "± 199.5235497249134"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27211.90727887835,
            "unit": "ns",
            "range": "± 55.29276852472154"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32890.69977315267,
            "unit": "ns",
            "range": "± 151.04610989253393"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32989.87679617746,
            "unit": "ns",
            "range": "± 142.61731686753805"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14950.251561846051,
            "unit": "ns",
            "range": "± 53.33384994676696"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19904.803990681965,
            "unit": "ns",
            "range": "± 161.27068304952428"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18704.41196148212,
            "unit": "ns",
            "range": "± 68.2097117302401"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19083.050396259016,
            "unit": "ns",
            "range": "± 18.34921218792383"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16008.23681992751,
            "unit": "ns",
            "range": "± 13.575563086528453"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10495.943244934082,
            "unit": "ns",
            "range": "± 22.472439075431005"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21237.61361694336,
            "unit": "ns",
            "range": "± 175.5265739217866"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 22514.2323651995,
            "unit": "ns",
            "range": "± 22.098016104254448"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 32425.85320027669,
            "unit": "ns",
            "range": "± 358.80020240337933"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 32512.53461129325,
            "unit": "ns",
            "range": "± 106.98643642665856"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734393022733,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15785.271538367639,
            "unit": "ns",
            "range": "± 41.84283323708321"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20994.47863667806,
            "unit": "ns",
            "range": "± 218.52413022034165"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 19535.715911865234,
            "unit": "ns",
            "range": "± 79.86828610020888"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19837.85546170748,
            "unit": "ns",
            "range": "± 37.62431587503663"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16012.67082977295,
            "unit": "ns",
            "range": "± 17.196367746455895"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10628.717747614934,
            "unit": "ns",
            "range": "± 44.2053412031602"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21771.404002888998,
            "unit": "ns",
            "range": "± 232.54201136889122"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21958.485575749324,
            "unit": "ns",
            "range": "± 113.25303834875818"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26228.270198277063,
            "unit": "ns",
            "range": "± 178.44737708662322"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 27451.05304189829,
            "unit": "ns",
            "range": "± 105.83570115754715"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 20948.109255981446,
            "unit": "ns",
            "range": "± 228.7532419858281"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26028.998731340682,
            "unit": "ns",
            "range": "± 185.28450843688864"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25664.731553141275,
            "unit": "ns",
            "range": "± 264.5603989305927"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27176.948321024578,
            "unit": "ns",
            "range": "± 50.302212321897265"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16626.692611694336,
            "unit": "ns",
            "range": "± 164.40582155544305"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10806.801755777995,
            "unit": "ns",
            "range": "± 96.2002006234238"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26298.348407999674,
            "unit": "ns",
            "range": "± 237.2488291502508"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27650.08837236677,
            "unit": "ns",
            "range": "± 152.3350095214131"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 34305.549625651045,
            "unit": "ns",
            "range": "± 199.6502154536361"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 33908.482096354164,
            "unit": "ns",
            "range": "± 120.75840739743819"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15510.642216609074,
            "unit": "ns",
            "range": "± 25.06190444704581"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20278.355860392254,
            "unit": "ns",
            "range": "± 45.09295671836551"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18416.947194417316,
            "unit": "ns",
            "range": "± 245.6656724765653"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18766.425231933594,
            "unit": "ns",
            "range": "± 28.541567737904494"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15810.136934916178,
            "unit": "ns",
            "range": "± 45.51878962195215"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10582.958417619977,
            "unit": "ns",
            "range": "± 46.14980639260769"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 22479.674207051594,
            "unit": "ns",
            "range": "± 22.22489964375003"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 22242.892042032876,
            "unit": "ns",
            "range": "± 237.46545040756297"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 32989.720275878906,
            "unit": "ns",
            "range": "± 208.29716198736622"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 28250.380263264975,
            "unit": "ns",
            "range": "± 234.75412608381365"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483976318,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15645.715799967447,
            "unit": "ns",
            "range": "± 35.943403251353594"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19720.975078037805,
            "unit": "ns",
            "range": "± 35.58113566204535"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18820.10755450909,
            "unit": "ns",
            "range": "± 45.56228511431539"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19934.07323811849,
            "unit": "ns",
            "range": "± 168.96402011772173"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16006.634142194476,
            "unit": "ns",
            "range": "± 138.6659368530547"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10549.954828898111,
            "unit": "ns",
            "range": "± 8.012323826091523"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20712.342404174804,
            "unit": "ns",
            "range": "± 149.90477882807406"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21965.443005371093,
            "unit": "ns",
            "range": "± 181.2469911628488"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26198.688714163643,
            "unit": "ns",
            "range": "± 206.77953353511955"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26261.928028361002,
            "unit": "ns",
            "range": "± 249.02145644186643"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21265.288249424524,
            "unit": "ns",
            "range": "± 159.16735657146774"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 27079.639995029993,
            "unit": "ns",
            "range": "± 162.65918343893088"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25822.864939371746,
            "unit": "ns",
            "range": "± 183.3263943121622"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26782.290237426758,
            "unit": "ns",
            "range": "± 181.74303394951863"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16059.928844745342,
            "unit": "ns",
            "range": "± 31.04213583546921"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10392.75321490948,
            "unit": "ns",
            "range": "± 12.537515880272975"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 28331.21694437663,
            "unit": "ns",
            "range": "± 156.16724514397478"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 28052.136039733887,
            "unit": "ns",
            "range": "± 27.375695034574857"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32044.165196736652,
            "unit": "ns",
            "range": "± 125.46181523946"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 33470.56165020283,
            "unit": "ns",
            "range": "± 137.97471145085242"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15117.724068196614,
            "unit": "ns",
            "range": "± 74.00874824726769"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20237.724291120256,
            "unit": "ns",
            "range": "± 21.431537718907418"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18195.322296142578,
            "unit": "ns",
            "range": "± 42.10509706903656"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19004.20320892334,
            "unit": "ns",
            "range": "± 42.431461893813506"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16142.023681640625,
            "unit": "ns",
            "range": "± 28.234285343372317"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10822.095826212566,
            "unit": "ns",
            "range": "± 70.90049691783841"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21235.55812072754,
            "unit": "ns",
            "range": "± 34.68351353108279"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 25492.719592285157,
            "unit": "ns",
            "range": "± 199.79261657622735"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26102.334810384116,
            "unit": "ns",
            "range": "± 163.85886426725003"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 32067.904370117187,
            "unit": "ns",
            "range": "± 150.90055170794378"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559808362,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15193.6301167806,
            "unit": "ns",
            "range": "± 107.47496379298953"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19591.9414629255,
            "unit": "ns",
            "range": "± 162.73372428866088"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18283.291542053223,
            "unit": "ns",
            "range": "± 24.601860314950347"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19118.82390485491,
            "unit": "ns",
            "range": "± 124.78513301583155"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16099.628034319196,
            "unit": "ns",
            "range": "± 8.825210277647066"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10619.529649000902,
            "unit": "ns",
            "range": "± 15.773589995355804"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20441.510016808144,
            "unit": "ns",
            "range": "± 23.267682174801223"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21752.217024583082,
            "unit": "ns",
            "range": "± 35.938890405156684"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 29230.535534667968,
            "unit": "ns",
            "range": "± 127.94941566432344"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 28045.79887186686,
            "unit": "ns",
            "range": "± 168.08834159339662"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 23814.392436436243,
            "unit": "ns",
            "range": "± 54.90904704612116"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26409.399834769112,
            "unit": "ns",
            "range": "± 141.86990087362366"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25502.375690714518,
            "unit": "ns",
            "range": "± 169.63296117359388"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27167.627763875327,
            "unit": "ns",
            "range": "± 201.5278829041074"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16974.29390157064,
            "unit": "ns",
            "range": "± 109.46617549115058"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10451.083658071664,
            "unit": "ns",
            "range": "± 11.054420423383743"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27351.521901448566,
            "unit": "ns",
            "range": "± 160.08544051417897"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27448.02158028739,
            "unit": "ns",
            "range": "± 152.28731184871228"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32922.02485438756,
            "unit": "ns",
            "range": "± 209.60843856647978"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32953.58866373698,
            "unit": "ns",
            "range": "± 125.11711417558612"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15125.817925589425,
            "unit": "ns",
            "range": "± 28.722155756397864"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 21716.214861043296,
            "unit": "ns",
            "range": "± 138.48799232778006"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 19296.851196289062,
            "unit": "ns",
            "range": "± 136.34185629850992"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19185.73222233699,
            "unit": "ns",
            "range": "± 28.27684400844764"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16112.910690307617,
            "unit": "ns",
            "range": "± 11.059867430355924"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10529.656218465168,
            "unit": "ns",
            "range": "± 72.80248005208306"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21414.14651184082,
            "unit": "ns",
            "range": "± 179.51465244862422"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 25213.01042175293,
            "unit": "ns",
            "range": "± 190.68780579000008"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 31031.841465541296,
            "unit": "ns",
            "range": "± 82.20564503077613"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27636.785130092077,
            "unit": "ns",
            "range": "± 68.16582021243974"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734579131197,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15037.144250723031,
            "unit": "ns",
            "range": "± 38.51564032111022"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19883.078127179826,
            "unit": "ns",
            "range": "± 190.94670622008198"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18742.870686457707,
            "unit": "ns",
            "range": "± 21.438157815345225"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19160.80285949707,
            "unit": "ns",
            "range": "± 127.48976099076452"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16215.792325337728,
            "unit": "ns",
            "range": "± 50.938074019577165"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10469.454760742188,
            "unit": "ns",
            "range": "± 93.84035641867241"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20989.262377421062,
            "unit": "ns",
            "range": "± 20.117756763572263"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21808.1572265625,
            "unit": "ns",
            "range": "± 35.435433507013066"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 29102.760635375977,
            "unit": "ns",
            "range": "± 148.71192789388041"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 29311.738568987166,
            "unit": "ns",
            "range": "± 66.55228211020797"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 22258.657622273764,
            "unit": "ns",
            "range": "± 126.71209837707359"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25960.33486328125,
            "unit": "ns",
            "range": "± 158.4988736965838"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25856.1523244222,
            "unit": "ns",
            "range": "± 148.47700243883472"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27053.847611490884,
            "unit": "ns",
            "range": "± 138.99804719176652"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16189.574639892578,
            "unit": "ns",
            "range": "± 124.71020927431593"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10566.6400979849,
            "unit": "ns",
            "range": "± 25.87275525848439"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27498.884215291342,
            "unit": "ns",
            "range": "± 206.05374030435786"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27162.26963043213,
            "unit": "ns",
            "range": "± 36.6198950243774"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32699.077754720052,
            "unit": "ns",
            "range": "± 365.3569584775486"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 33672.31749267578,
            "unit": "ns",
            "range": "± 337.30540453713064"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15836.108907063803,
            "unit": "ns",
            "range": "± 16.27902402616562"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19994.118255615234,
            "unit": "ns",
            "range": "± 58.42447874994204"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18850.63025556292,
            "unit": "ns",
            "range": "± 45.60171138217932"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19374.044809977215,
            "unit": "ns",
            "range": "± 28.91622942458214"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16183.598384602865,
            "unit": "ns",
            "range": "± 113.77331705805992"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10596.571904500326,
            "unit": "ns",
            "range": "± 68.83897851290736"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 22051.32115642841,
            "unit": "ns",
            "range": "± 29.493931415709422"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21814.511291503906,
            "unit": "ns",
            "range": "± 146.01845586924262"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 30472.331124441964,
            "unit": "ns",
            "range": "± 52.97298961947273"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27361.824540201822,
            "unit": "ns",
            "range": "± 108.93412800835071"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734596320961,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14997.682258097331,
            "unit": "ns",
            "range": "± 62.30103987468179"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20814.74187113444,
            "unit": "ns",
            "range": "± 117.91752960628918"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18886.156349690755,
            "unit": "ns",
            "range": "± 97.75599841756103"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 20156.124032827523,
            "unit": "ns",
            "range": "± 63.37514210127718"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16175.404661051432,
            "unit": "ns",
            "range": "± 101.20886763838772"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10659.980414835612,
            "unit": "ns",
            "range": "± 68.3212165218475"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20648.795252482098,
            "unit": "ns",
            "range": "± 21.88690636965026"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20789.613446916854,
            "unit": "ns",
            "range": "± 152.7445320217756"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25896.71373799642,
            "unit": "ns",
            "range": "± 126.58958453286394"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 27009.38770185198,
            "unit": "ns",
            "range": "± 192.9303469124625"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21462.612010410852,
            "unit": "ns",
            "range": "± 109.5115352192105"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26581.742322794595,
            "unit": "ns",
            "range": "± 144.06976743129167"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25353.54452296666,
            "unit": "ns",
            "range": "± 122.24086143936135"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26685.29493713379,
            "unit": "ns",
            "range": "± 62.35347061053892"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16341.846476236979,
            "unit": "ns",
            "range": "± 91.61034518427"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10609.526875087193,
            "unit": "ns",
            "range": "± 60.049345470431746"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26285.429610188803,
            "unit": "ns",
            "range": "± 110.2668654852386"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27932.10111127581,
            "unit": "ns",
            "range": "± 94.17963527933232"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 31679.837114606584,
            "unit": "ns",
            "range": "± 246.44345426797264"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 33724.5728902181,
            "unit": "ns",
            "range": "± 214.994649434461"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14869.935485839844,
            "unit": "ns",
            "range": "± 19.20193117036761"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 22113.907491048176,
            "unit": "ns",
            "range": "± 125.06972821409586"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18780.272317739633,
            "unit": "ns",
            "range": "± 43.12053399752151"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19630.405139160157,
            "unit": "ns",
            "range": "± 181.65010859881846"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16385.836823527017,
            "unit": "ns",
            "range": "± 69.06473615158745"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10756.32526957194,
            "unit": "ns",
            "range": "± 58.629220296561016"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20982.37185414632,
            "unit": "ns",
            "range": "± 26.21657266895908"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20929.18696899414,
            "unit": "ns",
            "range": "± 123.73866550480233"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25835.581908162436,
            "unit": "ns",
            "range": "± 47.834490898311344"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26368.844358004055,
            "unit": "ns",
            "range": "± 24.613822807844635"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643753416,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14862.368139648437,
            "unit": "ns",
            "range": "± 121.65100618136553"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19657.00076880822,
            "unit": "ns",
            "range": "± 66.39431394786303"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 19071.031643207258,
            "unit": "ns",
            "range": "± 136.75405154694104"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19123.26953938802,
            "unit": "ns",
            "range": "± 170.64396689426624"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15972.266765049526,
            "unit": "ns",
            "range": "± 20.82775177224988"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10708.546045156625,
            "unit": "ns",
            "range": "± 67.41093644553584"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 22346.057220458984,
            "unit": "ns",
            "range": "± 25.88928800988525"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20770.827869121844,
            "unit": "ns",
            "range": "± 14.368116738700197"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26939.963010515487,
            "unit": "ns",
            "range": "± 307.2948214283375"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 28115.658519199915,
            "unit": "ns",
            "range": "± 134.926668864647"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 22764.67922101702,
            "unit": "ns",
            "range": "± 351.06454078811475"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26685.738078816732,
            "unit": "ns",
            "range": "± 196.99261042709688"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25261.113302612306,
            "unit": "ns",
            "range": "± 183.4039133576499"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27155.756740315755,
            "unit": "ns",
            "range": "± 169.05922694622535"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16124.613906860352,
            "unit": "ns",
            "range": "± 38.94622097527045"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10640.290757315499,
            "unit": "ns",
            "range": "± 90.97963796594631"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26402.672913614908,
            "unit": "ns",
            "range": "± 182.30551536549657"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27399.181535847983,
            "unit": "ns",
            "range": "± 190.86069122310113"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32933.61935628255,
            "unit": "ns",
            "range": "± 354.17980593398124"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32707.147782389322,
            "unit": "ns",
            "range": "± 395.39446659291895"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14862.67503712972,
            "unit": "ns",
            "range": "± 79.163527972475"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19702.90264485677,
            "unit": "ns",
            "range": "± 177.17835128907922"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18794.289294903094,
            "unit": "ns",
            "range": "± 53.52638513905253"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19387.6058013916,
            "unit": "ns",
            "range": "± 197.43447729743576"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16131.318964640299,
            "unit": "ns",
            "range": "± 18.689819083395896"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10583.681550089519,
            "unit": "ns",
            "range": "± 81.00228534872136"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21694.55664571126,
            "unit": "ns",
            "range": "± 48.12530408870855"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21744.40531311035,
            "unit": "ns",
            "range": "± 114.63615935932813"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25870.029161580405,
            "unit": "ns",
            "range": "± 75.51791875159076"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 25517.77844441732,
            "unit": "ns",
            "range": "± 133.60509461593463"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734648031190,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14698.554491678873,
            "unit": "ns",
            "range": "± 21.80090851772492"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19925.408826700845,
            "unit": "ns",
            "range": "± 183.53569012332574"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18360.797034127372,
            "unit": "ns",
            "range": "± 92.88883683648159"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19624.92421468099,
            "unit": "ns",
            "range": "± 194.46845755992894"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16256.59839070638,
            "unit": "ns",
            "range": "± 130.43940512003843"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10526.525142963115,
            "unit": "ns",
            "range": "± 11.044612765053742"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21515.297337458684,
            "unit": "ns",
            "range": "± 116.26882732907002"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20958.985653686523,
            "unit": "ns",
            "range": "± 182.1605162131288"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 27003.81863839286,
            "unit": "ns",
            "range": "± 268.44571884714793"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26909.155690119816,
            "unit": "ns",
            "range": "± 90.25003481844301"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21095.200897216797,
            "unit": "ns",
            "range": "± 40.368669390427"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 27650.19540187291,
            "unit": "ns",
            "range": "± 123.71573807269698"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25013.961824544273,
            "unit": "ns",
            "range": "± 191.62415054686002"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26666.27248535156,
            "unit": "ns",
            "range": "± 198.5098090903307"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16466.598899254433,
            "unit": "ns",
            "range": "± 13.658757586683327"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10592.587723952074,
            "unit": "ns",
            "range": "± 31.729884808559536"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26690.00600374662,
            "unit": "ns",
            "range": "± 80.2892364373917"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26182.778686523438,
            "unit": "ns",
            "range": "± 144.74838699570765"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 31597.527770996094,
            "unit": "ns",
            "range": "± 125.0410661652827"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32756.879239908852,
            "unit": "ns",
            "range": "± 442.96277176996125"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14792.94245707194,
            "unit": "ns",
            "range": "± 108.78433463140553"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19454.302442278182,
            "unit": "ns",
            "range": "± 25.16620708264394"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 19138.570299421037,
            "unit": "ns",
            "range": "± 15.953829123753419"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 20567.981199137368,
            "unit": "ns",
            "range": "± 231.51445023043559"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16238.964985774113,
            "unit": "ns",
            "range": "± 16.364383715293453"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 11078.829677327474,
            "unit": "ns",
            "range": "± 72.46433248258865"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21174.59892985026,
            "unit": "ns",
            "range": "± 235.5731573933098"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21853.96504720052,
            "unit": "ns",
            "range": "± 151.82317435832226"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 28393.10658569336,
            "unit": "ns",
            "range": "± 78.62860248242211"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27170.980597359794,
            "unit": "ns",
            "range": "± 98.41287604543857"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652819796,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14896.243369038899,
            "unit": "ns",
            "range": "± 84.49476443180637"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19556.16487426758,
            "unit": "ns",
            "range": "± 155.01242794780651"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18057.049681443434,
            "unit": "ns",
            "range": "± 23.861945786009287"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19224.189369710286,
            "unit": "ns",
            "range": "± 193.1368539889675"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15931.549133300781,
            "unit": "ns",
            "range": "± 23.481407048669755"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10657.523790799654,
            "unit": "ns",
            "range": "± 33.02149536968183"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21134.152084350586,
            "unit": "ns",
            "range": "± 74.13524454141226"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21026.28894551595,
            "unit": "ns",
            "range": "± 12.512495643615152"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25956.08244105748,
            "unit": "ns",
            "range": "± 44.00421580817288"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26249.08010559082,
            "unit": "ns",
            "range": "± 167.6855016478492"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21423.804857526506,
            "unit": "ns",
            "range": "± 132.80445088795136"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26016.899240112303,
            "unit": "ns",
            "range": "± 171.7399042774886"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 26712.22018737793,
            "unit": "ns",
            "range": "± 150.29940373070465"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27857.615195138114,
            "unit": "ns",
            "range": "± 109.74320859654264"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16732.1150794396,
            "unit": "ns",
            "range": "± 16.85972412324708"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10653.272410583497,
            "unit": "ns",
            "range": "± 79.59071763964795"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26606.33019917806,
            "unit": "ns",
            "range": "± 178.1458342745462"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26802.634908040363,
            "unit": "ns",
            "range": "± 146.11083190757233"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32208.10760498047,
            "unit": "ns",
            "range": "± 365.34289589909395"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32436.550393911508,
            "unit": "ns",
            "range": "± 104.91778041559557"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14664.801236666166,
            "unit": "ns",
            "range": "± 23.803283561872004"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19594.75664876302,
            "unit": "ns",
            "range": "± 155.9158687094429"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18953.327117919922,
            "unit": "ns",
            "range": "± 30.72732765257478"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19836.725612386068,
            "unit": "ns",
            "range": "± 209.65540025495974"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16371.870089213053,
            "unit": "ns",
            "range": "± 17.571344210085883"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10689.2191696167,
            "unit": "ns",
            "range": "± 72.71142859664806"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20801.20914048415,
            "unit": "ns",
            "range": "± 110.09947552842078"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20978.317728678387,
            "unit": "ns",
            "range": "± 39.52498908063542"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25920.4212890625,
            "unit": "ns",
            "range": "± 119.25667812299758"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26961.55428641183,
            "unit": "ns",
            "range": "± 89.72032645564222"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747468483,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15409.080196126302,
            "unit": "ns",
            "range": "± 162.2091032398627"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19669.22625986735,
            "unit": "ns",
            "range": "± 39.73307147086697"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18786.755373636883,
            "unit": "ns",
            "range": "± 24.099386666086815"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 24974.57761441744,
            "unit": "ns",
            "range": "± 33.77635633707393"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16400.03643290202,
            "unit": "ns",
            "range": "± 26.456834983550305"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10707.23802693685,
            "unit": "ns",
            "range": "± 62.49689827675317"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 23214.233284505208,
            "unit": "ns",
            "range": "± 162.8424694990161"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21060.70635986328,
            "unit": "ns",
            "range": "± 33.84892186727945"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26892.15153503418,
            "unit": "ns",
            "range": "± 129.27476848845444"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26235.30624593099,
            "unit": "ns",
            "range": "± 162.41957317803065"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 20769.82132212321,
            "unit": "ns",
            "range": "± 52.582036380923014"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 27071.560649326868,
            "unit": "ns",
            "range": "± 119.73127406712612"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25022.129014078775,
            "unit": "ns",
            "range": "± 150.4230763873887"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26099.005001361555,
            "unit": "ns",
            "range": "± 65.98417525084278"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16290.184853108723,
            "unit": "ns",
            "range": "± 59.541762287703655"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10696.689596557617,
            "unit": "ns",
            "range": "± 59.11064656745504"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26289.179225667318,
            "unit": "ns",
            "range": "± 162.18131800212208"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27868.133042399088,
            "unit": "ns",
            "range": "± 163.4390095161321"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32833.24024047852,
            "unit": "ns",
            "range": "± 183.0420110288286"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 31996.258599853514,
            "unit": "ns",
            "range": "± 323.593728198263"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15791.728329467773,
            "unit": "ns",
            "range": "± 130.66753456070796"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19878.323236083983,
            "unit": "ns",
            "range": "± 151.9894324533464"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 21431.19213649205,
            "unit": "ns",
            "range": "± 45.18730065101167"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18722.01426188151,
            "unit": "ns",
            "range": "± 25.326926920146988"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16360.724639892578,
            "unit": "ns",
            "range": "± 72.24904139604205"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10521.138082064115,
            "unit": "ns",
            "range": "± 11.522858448771473"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21526.914767456055,
            "unit": "ns",
            "range": "± 194.14267725680622"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21025.65155029297,
            "unit": "ns",
            "range": "± 76.55551993197327"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25879.974020385744,
            "unit": "ns",
            "range": "± 125.30763107291318"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 29392.526221720378,
            "unit": "ns",
            "range": "± 116.0853088892766"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734907130310,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14839.709593709309,
            "unit": "ns",
            "range": "± 99.76966389129237"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20046.645072428386,
            "unit": "ns",
            "range": "± 232.657122802511"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17906.089139665877,
            "unit": "ns",
            "range": "± 19.69606873060361"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19389.247533944937,
            "unit": "ns",
            "range": "± 78.96701402161355"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16518.316829136438,
            "unit": "ns",
            "range": "± 102.5575911120611"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10665.338896531324,
            "unit": "ns",
            "range": "± 101.34773917142093"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21644.277698223406,
            "unit": "ns",
            "range": "± 57.96897569750246"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20609.898566612832,
            "unit": "ns",
            "range": "± 63.790449931838175"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 27072.352142333984,
            "unit": "ns",
            "range": "± 227.13027535958472"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26867.302943929037,
            "unit": "ns",
            "range": "± 346.4092738836275"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21112.18559061686,
            "unit": "ns",
            "range": "± 251.00731109100627"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 27449.267401559013,
            "unit": "ns",
            "range": "± 125.11246142902547"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25231.514345296226,
            "unit": "ns",
            "range": "± 287.2279241928362"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26419.03969217936,
            "unit": "ns",
            "range": "± 138.40740623484976"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16027.761642456055,
            "unit": "ns",
            "range": "± 67.05112588383363"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10771.635889689127,
            "unit": "ns",
            "range": "± 117.60583925251402"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26432.47699991862,
            "unit": "ns",
            "range": "± 270.3838347321358"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 28662.507714407784,
            "unit": "ns",
            "range": "± 73.07605036934159"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 31714.771671840124,
            "unit": "ns",
            "range": "± 471.90193882553933"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 31883.35855102539,
            "unit": "ns",
            "range": "± 294.0593034064868"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15015.840074666341,
            "unit": "ns",
            "range": "± 122.3515166486262"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19451.11570739746,
            "unit": "ns",
            "range": "± 103.56187154089434"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18879.37396827111,
            "unit": "ns",
            "range": "± 17.30503337644145"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 20182.693288167316,
            "unit": "ns",
            "range": "± 219.55719844540303"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16631.236197916667,
            "unit": "ns",
            "range": "± 176.64411014120608"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10776.253740583148,
            "unit": "ns",
            "range": "± 19.85999046014107"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21518.886841837564,
            "unit": "ns",
            "range": "± 219.78570102490485"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21129.66477355957,
            "unit": "ns",
            "range": "± 110.18175108662513"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26266.36054280599,
            "unit": "ns",
            "range": "± 334.5485902169605"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 25535.6570699056,
            "unit": "ns",
            "range": "± 243.51980726792368"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407953574,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15159.51324971517,
            "unit": "ns",
            "range": "± 14.948533851996178"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20458.438247680664,
            "unit": "ns",
            "range": "± 25.63998441162999"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18759.76263631185,
            "unit": "ns",
            "range": "± 193.27622904219896"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19731.349655151367,
            "unit": "ns",
            "range": "± 185.52288385961026"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16358.62927715595,
            "unit": "ns",
            "range": "± 17.545738159042568"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10830.034647623697,
            "unit": "ns",
            "range": "± 22.362137609945403"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20728.938034057617,
            "unit": "ns",
            "range": "± 10.198949298452636"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21647.97622578939,
            "unit": "ns",
            "range": "± 153.02566694884624"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 28858.01046854655,
            "unit": "ns",
            "range": "± 272.0663123036321"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26960.5962890625,
            "unit": "ns",
            "range": "± 178.94369039047237"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21192.444889948918,
            "unit": "ns",
            "range": "± 71.64208372051476"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 28339.280854288736,
            "unit": "ns",
            "range": "± 120.10383578779282"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25619.94292776925,
            "unit": "ns",
            "range": "± 62.318538523198754"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26655.981368001303,
            "unit": "ns",
            "range": "± 166.0938459708915"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15952.089811197917,
            "unit": "ns",
            "range": "± 120.23608652776548"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10996.78737080892,
            "unit": "ns",
            "range": "± 73.67677525737494"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26879.19397176107,
            "unit": "ns",
            "range": "± 165.2206844174528"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27707.93647112165,
            "unit": "ns",
            "range": "± 120.80178705044281"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30526.757152850812,
            "unit": "ns",
            "range": "± 217.7677699388916"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32252.752428327287,
            "unit": "ns",
            "range": "± 207.0160424002488"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15723.856063842773,
            "unit": "ns",
            "range": "± 83.49196410805051"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19850.073488362632,
            "unit": "ns",
            "range": "± 171.05793600346684"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18350.376230875652,
            "unit": "ns",
            "range": "± 38.59377225331276"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19612.742021833146,
            "unit": "ns",
            "range": "± 16.528232387099138"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16232.178103129068,
            "unit": "ns",
            "range": "± 19.60936868573834"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10571.517767588297,
            "unit": "ns",
            "range": "± 16.330326380565936"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21247.92143503825,
            "unit": "ns",
            "range": "± 32.26262593453645"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21512.846682230633,
            "unit": "ns",
            "range": "± 16.768013655705744"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26640.869927978514,
            "unit": "ns",
            "range": "± 67.25225214371119"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27672.82234409877,
            "unit": "ns",
            "range": "± 102.10464679250734"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187671179,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14881.853757585797,
            "unit": "ns",
            "range": "± 69.52513018071815"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 21264.316927228654,
            "unit": "ns",
            "range": "± 144.01726562948608"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 19328.32540675572,
            "unit": "ns",
            "range": "± 140.09297676168293"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 20424.274313790458,
            "unit": "ns",
            "range": "± 127.32005113760302"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16394.45665588379,
            "unit": "ns",
            "range": "± 170.61112861632125"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10648.446351369223,
            "unit": "ns",
            "range": "± 16.845269301592502"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21172.869378226143,
            "unit": "ns",
            "range": "± 94.13373472480751"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20949.505308024087,
            "unit": "ns",
            "range": "± 137.54085746658652"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25970.392985026043,
            "unit": "ns",
            "range": "± 20.070178861462907"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26623.879039219446,
            "unit": "ns",
            "range": "± 160.70851244546316"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21366.674051920574,
            "unit": "ns",
            "range": "± 161.5812473132162"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26794.70923069545,
            "unit": "ns",
            "range": "± 107.7682065007803"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 26445.33287702288,
            "unit": "ns",
            "range": "± 146.4414249095265"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27657.59221496582,
            "unit": "ns",
            "range": "± 123.1164987857232"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16270.203180948893,
            "unit": "ns",
            "range": "± 26.868316624013524"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10742.928114827473,
            "unit": "ns",
            "range": "± 70.49294982189087"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26706.811694805438,
            "unit": "ns",
            "range": "± 129.33336269544517"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26931.014786783853,
            "unit": "ns",
            "range": "± 135.2411877281837"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32438.28859863281,
            "unit": "ns",
            "range": "± 257.76029584005903"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 34127.372794015064,
            "unit": "ns",
            "range": "± 104.42568710190014"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15020.0891658238,
            "unit": "ns",
            "range": "± 64.93847055684584"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19584.56236521403,
            "unit": "ns",
            "range": "± 37.25488331363804"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18654.040477207727,
            "unit": "ns",
            "range": "± 79.74790497464987"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 20247.776990618026,
            "unit": "ns",
            "range": "± 160.9932370155891"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16132.04600016276,
            "unit": "ns",
            "range": "± 9.423152335947291"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10971.209557088216,
            "unit": "ns",
            "range": "± 63.054186328861924"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 23530.860066005163,
            "unit": "ns",
            "range": "± 69.85270818458831"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20950.18533543178,
            "unit": "ns",
            "range": "± 85.00732197562355"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 27400.044805908205,
            "unit": "ns",
            "range": "± 104.99778855954816"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26847.82669881185,
            "unit": "ns",
            "range": "± 108.9751411282271"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283469788,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15285.99991607666,
            "unit": "ns",
            "range": "± 15.058008560807284"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20851.67453257243,
            "unit": "ns",
            "range": "± 34.23428577434325"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18344.92209516253,
            "unit": "ns",
            "range": "± 17.998459604152902"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19537.82162475586,
            "unit": "ns",
            "range": "± 141.57204979035836"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16272.57018171038,
            "unit": "ns",
            "range": "± 84.83581518842902"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10719.079499308269,
            "unit": "ns",
            "range": "± 58.437856749070434"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21993.21310206822,
            "unit": "ns",
            "range": "± 76.22703991470682"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21269.09698721079,
            "unit": "ns",
            "range": "± 34.41725057654085"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26223.483307902017,
            "unit": "ns",
            "range": "± 129.8479506748215"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26283.967629568917,
            "unit": "ns",
            "range": "± 83.07346882263191"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21109.32607814244,
            "unit": "ns",
            "range": "± 109.35739458307444"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 27337.035388183594,
            "unit": "ns",
            "range": "± 118.2015735448646"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25478.88448079427,
            "unit": "ns",
            "range": "± 45.11947225960998"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26865.27689819336,
            "unit": "ns",
            "range": "± 78.73032595552496"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16292.733457438151,
            "unit": "ns",
            "range": "± 65.69095248920277"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10759.03288930257,
            "unit": "ns",
            "range": "± 50.49403521258927"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27273.827552286784,
            "unit": "ns",
            "range": "± 94.1767906229596"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26815.743973795572,
            "unit": "ns",
            "range": "± 110.28955923923"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 33092.220778245195,
            "unit": "ns",
            "range": "± 96.63321762907061"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32548.516244741586,
            "unit": "ns",
            "range": "± 99.7550937195517"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14584.553356170654,
            "unit": "ns",
            "range": "± 8.975975854024876"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20112.036954752602,
            "unit": "ns",
            "range": "± 108.11152880275675"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18467.963973999023,
            "unit": "ns",
            "range": "± 13.871395880830466"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19541.79061453683,
            "unit": "ns",
            "range": "± 97.62647251528371"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16271.51426188151,
            "unit": "ns",
            "range": "± 11.571943890733131"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10592.034454854329,
            "unit": "ns",
            "range": "± 47.59866930240488"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21345.028658548992,
            "unit": "ns",
            "range": "± 21.13032060892891"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21674.832377115887,
            "unit": "ns",
            "range": "± 87.95277141140072"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 27362.18927001953,
            "unit": "ns",
            "range": "± 68.68022048364475"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26863.237075805664,
            "unit": "ns",
            "range": "± 54.999158391181375"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376510267,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15239.680039978028,
            "unit": "ns",
            "range": "± 47.56523406014453"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19837.924379788914,
            "unit": "ns",
            "range": "± 62.35532486508959"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18535.664041372445,
            "unit": "ns",
            "range": "± 79.595612480104"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19712.144305889422,
            "unit": "ns",
            "range": "± 83.47535239001073"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16097.45674954928,
            "unit": "ns",
            "range": "± 14.843138512719168"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10820.42391850398,
            "unit": "ns",
            "range": "± 9.98751144973149"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21436.062476021903,
            "unit": "ns",
            "range": "± 104.74103462092185"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20876.737335205078,
            "unit": "ns",
            "range": "± 97.74595579202762"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 27747.9440373012,
            "unit": "ns",
            "range": "± 107.57224221065637"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26166.8868736854,
            "unit": "ns",
            "range": "± 78.36497583320553"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21110.95085449219,
            "unit": "ns",
            "range": "± 88.83185966152976"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26082.89277766301,
            "unit": "ns",
            "range": "± 79.84456526630039"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 27794.26857503255,
            "unit": "ns",
            "range": "± 101.34030009925841"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27417.93180847168,
            "unit": "ns",
            "range": "± 104.6742582538342"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16258.784395853678,
            "unit": "ns",
            "range": "± 20.061651012413"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10958.875067392984,
            "unit": "ns",
            "range": "± 16.85816788820533"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 28676.27754720052,
            "unit": "ns",
            "range": "± 110.98818628826862"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27300.884727986653,
            "unit": "ns",
            "range": "± 76.03195987846536"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 34038.412408447264,
            "unit": "ns",
            "range": "± 342.68284168870105"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32675.71535644531,
            "unit": "ns",
            "range": "± 239.87369168917172"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14546.639020792643,
            "unit": "ns",
            "range": "± 49.25347087346479"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20919.404828389484,
            "unit": "ns",
            "range": "± 14.601852607245968"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 19476.68123081752,
            "unit": "ns",
            "range": "± 53.758354308123884"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19879.93767700195,
            "unit": "ns",
            "range": "± 83.41323598086478"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16202.148603166852,
            "unit": "ns",
            "range": "± 9.82904198963668"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10535.57286198934,
            "unit": "ns",
            "range": "± 8.333344822544058"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21334.887154134114,
            "unit": "ns",
            "range": "± 135.12839959665746"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21602.306272066555,
            "unit": "ns",
            "range": "± 12.95168624330879"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26769.874975351187,
            "unit": "ns",
            "range": "± 51.36294530523993"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27591.1319732666,
            "unit": "ns",
            "range": "± 90.51775650478406"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736462235629,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15879.466421944755,
            "unit": "ns",
            "range": "± 55.4197248150111"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20249.335201009115,
            "unit": "ns",
            "range": "± 189.6285189635591"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18364.588479178292,
            "unit": "ns",
            "range": "± 77.18513407303445"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 20834.526132202147,
            "unit": "ns",
            "range": "± 137.5807429677936"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16193.609903971354,
            "unit": "ns",
            "range": "± 51.67560895607223"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10765.131792508639,
            "unit": "ns",
            "range": "± 20.197213169857665"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21591.934783935547,
            "unit": "ns",
            "range": "± 87.79224964158809"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21669.883155314128,
            "unit": "ns",
            "range": "± 131.8226812438165"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 27423.670331514797,
            "unit": "ns",
            "range": "± 87.9231314360188"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 27356.63284955706,
            "unit": "ns",
            "range": "± 83.01176607748175"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21524.976050240653,
            "unit": "ns",
            "range": "± 137.80108528326383"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 27456.396678379602,
            "unit": "ns",
            "range": "± 176.15172782642443"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 26409.92089189802,
            "unit": "ns",
            "range": "± 122.52903212399106"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26956.41107395717,
            "unit": "ns",
            "range": "± 71.35643461800488"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16533.91434587751,
            "unit": "ns",
            "range": "± 23.254965258863628"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10743.132199096679,
            "unit": "ns",
            "range": "± 101.1245579584339"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26504.53130493164,
            "unit": "ns",
            "range": "± 177.0318186096362"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27629.72058614095,
            "unit": "ns",
            "range": "± 70.43620289093275"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32731.542879231773,
            "unit": "ns",
            "range": "± 243.2266835886122"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 33770.44964192708,
            "unit": "ns",
            "range": "± 226.57273236668948"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14628.154448445637,
            "unit": "ns",
            "range": "± 45.28991845750903"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19814.96240234375,
            "unit": "ns",
            "range": "± 102.61652913599158"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 19672.027970377603,
            "unit": "ns",
            "range": "± 158.6008346945607"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19858.562800816126,
            "unit": "ns",
            "range": "± 21.01465425539033"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16018.375285557338,
            "unit": "ns",
            "range": "± 58.790289163371106"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10634.341783650716,
            "unit": "ns",
            "range": "± 67.08884673559915"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21841.255200703938,
            "unit": "ns",
            "range": "± 25.196905757987103"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21341.210721529445,
            "unit": "ns",
            "range": "± 17.866064369099938"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 27193.09047648112,
            "unit": "ns",
            "range": "± 127.5271488616072"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26816.149205525715,
            "unit": "ns",
            "range": "± 52.314518883044194"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736480031434,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15512.631098429361,
            "unit": "ns",
            "range": "± 23.445735797708693"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20124.27607981364,
            "unit": "ns",
            "range": "± 52.51379841701034"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18536.44532775879,
            "unit": "ns",
            "range": "± 104.80450770432861"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19374.01324717204,
            "unit": "ns",
            "range": "± 29.33599854925024"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16260.751311238606,
            "unit": "ns",
            "range": "± 25.91241497019899"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10699.984616088866,
            "unit": "ns",
            "range": "± 72.3071908267841"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21130.108832223075,
            "unit": "ns",
            "range": "± 95.9428355776355"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21726.193118286134,
            "unit": "ns",
            "range": "± 118.60078766164497"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 27210.268772670202,
            "unit": "ns",
            "range": "± 189.87244436551714"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 27051.097262573243,
            "unit": "ns",
            "range": "± 96.8371943228048"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 20809.946915690103,
            "unit": "ns",
            "range": "± 92.21934885458651"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 28171.6290435791,
            "unit": "ns",
            "range": "± 211.75942240803883"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25137.712814331055,
            "unit": "ns",
            "range": "± 92.1359449718301"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27792.605307442802,
            "unit": "ns",
            "range": "± 126.31980959903977"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16255.637448992047,
            "unit": "ns",
            "range": "± 86.62381871180058"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 11024.886368815105,
            "unit": "ns",
            "range": "± 9.281701427162139"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27251.896094767253,
            "unit": "ns",
            "range": "± 121.78844665455817"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26997.966420491535,
            "unit": "ns",
            "range": "± 118.9481831740122"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32170.054626464844,
            "unit": "ns",
            "range": "± 141.58866307107198"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 34087.09705461775,
            "unit": "ns",
            "range": "± 88.16795103301818"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14879.362666538784,
            "unit": "ns",
            "range": "± 62.65371072943991"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19626.50653330485,
            "unit": "ns",
            "range": "± 23.169254409044694"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 19406.39776509603,
            "unit": "ns",
            "range": "± 96.26486268273177"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19934.81721394857,
            "unit": "ns",
            "range": "± 122.13723729045473"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16055.038646443685,
            "unit": "ns",
            "range": "± 103.48623132638542"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10863.036663600376,
            "unit": "ns",
            "range": "± 54.334022069312624"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21428.19028828939,
            "unit": "ns",
            "range": "± 93.31575839346984"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21660.824770100913,
            "unit": "ns",
            "range": "± 88.49561195438012"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 27862.655991617838,
            "unit": "ns",
            "range": "± 87.86624898419319"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27903.99757080078,
            "unit": "ns",
            "range": "± 71.72119844923719"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553868182,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14844.983836582729,
            "unit": "ns",
            "range": "± 15.029138001226563"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20130.765305739184,
            "unit": "ns",
            "range": "± 70.08860512813989"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18332.647153218586,
            "unit": "ns",
            "range": "± 11.099646496988406"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19984.103892008465,
            "unit": "ns",
            "range": "± 18.71445869330331"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16366.433188883464,
            "unit": "ns",
            "range": "± 80.21059991027664"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10539.779878888812,
            "unit": "ns",
            "range": "± 59.776036077059175"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21142.231541560246,
            "unit": "ns",
            "range": "± 33.2510601893607"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21118.228602091473,
            "unit": "ns",
            "range": "± 136.25453067901535"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 28810.64242201585,
            "unit": "ns",
            "range": "± 59.70179939304422"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26441.864330037435,
            "unit": "ns",
            "range": "± 125.09331190950329"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21269.857002766927,
            "unit": "ns",
            "range": "± 198.04309454680575"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26275.478356933592,
            "unit": "ns",
            "range": "± 157.66895004784655"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25064.958469935827,
            "unit": "ns",
            "range": "± 97.1367490784857"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 28298.980423990884,
            "unit": "ns",
            "range": "± 103.9349170305783"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16180.278307596842,
            "unit": "ns",
            "range": "± 11.410464505004972"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10575.660608927408,
            "unit": "ns",
            "range": "± 11.395829892050344"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27838.213584391277,
            "unit": "ns",
            "range": "± 98.32696949596722"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27158.483977254233,
            "unit": "ns",
            "range": "± 118.81614339709112"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 33280.4903141902,
            "unit": "ns",
            "range": "± 102.41221757918478"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32529.19808959961,
            "unit": "ns",
            "range": "± 106.12133227942522"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14907.088371785481,
            "unit": "ns",
            "range": "± 57.72648247224867"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19576.13523864746,
            "unit": "ns",
            "range": "± 10.742901248628273"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 19844.782389322918,
            "unit": "ns",
            "range": "± 28.81451547403423"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 20402.1484761556,
            "unit": "ns",
            "range": "± 121.05266862548896"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16016.900100708008,
            "unit": "ns",
            "range": "± 86.4538478731777"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10906.172604152134,
            "unit": "ns",
            "range": "± 7.029672672290727"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20931.922112601143,
            "unit": "ns",
            "range": "± 22.077479376872187"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21470.24181213379,
            "unit": "ns",
            "range": "± 108.36856405202316"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26969.751146589006,
            "unit": "ns",
            "range": "± 122.51260182261993"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27040.01997610239,
            "unit": "ns",
            "range": "± 94.08663296391136"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736656126203,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15109.022082010904,
            "unit": "ns",
            "range": "± 94.894846216002"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20580.62664794922,
            "unit": "ns",
            "range": "± 199.53189649560056"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 19886.201159159344,
            "unit": "ns",
            "range": "± 23.263790929556137"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 20260.330858866375,
            "unit": "ns",
            "range": "± 47.79495852197396"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16206.669802347818,
            "unit": "ns",
            "range": "± 43.47923809714652"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10593.059869619516,
            "unit": "ns",
            "range": "± 58.50619585255094"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 22020.706420898438,
            "unit": "ns",
            "range": "± 24.7091998886834"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 22093.473311360678,
            "unit": "ns",
            "range": "± 241.76246344690693"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 27195.00290151743,
            "unit": "ns",
            "range": "± 74.7221964850639"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 27879.694065348307,
            "unit": "ns",
            "range": "± 200.76211755946434"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 22160.69716971261,
            "unit": "ns",
            "range": "± 220.46258372078125"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 27165.392880953274,
            "unit": "ns",
            "range": "± 54.328144347984335"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 28044.525966389974,
            "unit": "ns",
            "range": "± 174.55703883021954"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27805.969443688027,
            "unit": "ns",
            "range": "± 47.080173454071044"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16351.384092058453,
            "unit": "ns",
            "range": "± 23.24203603692832"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10657.913931528727,
            "unit": "ns",
            "range": "± 15.025729308187508"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 28985.825780232746,
            "unit": "ns",
            "range": "± 40.43092386382599"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 31421.67445725661,
            "unit": "ns",
            "range": "± 88.85166119134992"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 36006.38191731771,
            "unit": "ns",
            "range": "± 141.1458584810653"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 36960.59118652344,
            "unit": "ns",
            "range": "± 321.9283672172007"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15011.942869919996,
            "unit": "ns",
            "range": "± 20.26788743451587"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19641.510989849383,
            "unit": "ns",
            "range": "± 27.16239895716923"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 19113.46319885254,
            "unit": "ns",
            "range": "± 117.04398902312496"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 20303.2338277181,
            "unit": "ns",
            "range": "± 177.20456731127965"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16280.660137939452,
            "unit": "ns",
            "range": "± 119.17179556837982"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10967.263613382975,
            "unit": "ns",
            "range": "± 10.62529385990709"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 26170.0538965861,
            "unit": "ns",
            "range": "± 24.379840564309024"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 23099.09002787272,
            "unit": "ns",
            "range": "± 94.76715105833142"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 28199.285698445638,
            "unit": "ns",
            "range": "± 139.45631107862394"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 28696.472249348957,
            "unit": "ns",
            "range": "± 146.55250444031816"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254334801,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15393.076110839844,
            "unit": "ns",
            "range": "± 108.72205986024751"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20573.92981828962,
            "unit": "ns",
            "range": "± 130.16483927540045"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 21926.138412475586,
            "unit": "ns",
            "range": "± 23.164477855102064"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 23655.557643636068,
            "unit": "ns",
            "range": "± 206.3178291512097"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16203.821088350736,
            "unit": "ns",
            "range": "± 23.051034516243984"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10409.837851388114,
            "unit": "ns",
            "range": "± 14.67266605462274"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 24435.318181355793,
            "unit": "ns",
            "range": "± 50.62071719017004"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 23880.737760271346,
            "unit": "ns",
            "range": "± 115.19033911600596"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26517.09845987956,
            "unit": "ns",
            "range": "± 64.0469812355997"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26823.196202596027,
            "unit": "ns",
            "range": "± 52.907797159546575"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21884.640844726564,
            "unit": "ns",
            "range": "± 124.0205677694731"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26395.51302865835,
            "unit": "ns",
            "range": "± 35.78911769726845"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 29421.80720084054,
            "unit": "ns",
            "range": "± 74.3900651920983"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 29771.15866323618,
            "unit": "ns",
            "range": "± 158.86332148357832"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16636.07728881836,
            "unit": "ns",
            "range": "± 129.3299520212566"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10666.351718902588,
            "unit": "ns",
            "range": "± 9.259045953717543"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 29063.588701883953,
            "unit": "ns",
            "range": "± 30.58216987986543"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 28268.96848449707,
            "unit": "ns",
            "range": "± 166.56016726072943"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 35284.10683695475,
            "unit": "ns",
            "range": "± 101.28250477087337"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 33423.467024739584,
            "unit": "ns",
            "range": "± 248.60026732148307"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14850.490312194825,
            "unit": "ns",
            "range": "± 103.55881782438092"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19767.70512084961,
            "unit": "ns",
            "range": "± 172.46233899187243"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 21596.881319318498,
            "unit": "ns",
            "range": "± 86.20635230821568"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 23525.388173421223,
            "unit": "ns",
            "range": "± 23.70022574067034"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16276.728575642903,
            "unit": "ns",
            "range": "± 126.51210336228209"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10512.659505990836,
            "unit": "ns",
            "range": "± 27.157339407711017"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 22258.58906351725,
            "unit": "ns",
            "range": "± 223.96176535157514"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 22010.927213541665,
            "unit": "ns",
            "range": "± 131.88046921351182"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 27451.827880859375,
            "unit": "ns",
            "range": "± 159.77117752348667"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26711.253927612306,
            "unit": "ns",
            "range": "± 125.56797280654074"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788977007,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15390.280902569111,
            "unit": "ns",
            "range": "± 72.06971082762254"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20586.80318744366,
            "unit": "ns",
            "range": "± 109.95311308309715"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 22017.48420206706,
            "unit": "ns",
            "range": "± 135.2321115115188"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 23572.40365600586,
            "unit": "ns",
            "range": "± 150.91330401347915"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16823.113967895508,
            "unit": "ns",
            "range": "± 21.823318696841042"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10468.957294718424,
            "unit": "ns",
            "range": "± 68.66744520105583"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21694.423418485203,
            "unit": "ns",
            "range": "± 103.69166394658914"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 22450.12283630371,
            "unit": "ns",
            "range": "± 102.70304800971712"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26451.161071777344,
            "unit": "ns",
            "range": "± 24.205535262122332"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 27652.36971609933,
            "unit": "ns",
            "range": "± 89.66843634063324"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21340.781444004602,
            "unit": "ns",
            "range": "± 202.23625092585422"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26135.011868794758,
            "unit": "ns",
            "range": "± 98.0506549201334"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 29463.432213919503,
            "unit": "ns",
            "range": "± 123.84847409281193"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 30264.886060442244,
            "unit": "ns",
            "range": "± 108.36677477103164"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 17188.013955923227,
            "unit": "ns",
            "range": "± 57.28213850665739"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 11025.983988080707,
            "unit": "ns",
            "range": "± 96.53697504202476"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 28559.607407633463,
            "unit": "ns",
            "range": "± 90.7377508695187"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 28598.53804452079,
            "unit": "ns",
            "range": "± 110.44137549880607"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 34399.235900878906,
            "unit": "ns",
            "range": "± 232.63879824663937"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 34079.57596764198,
            "unit": "ns",
            "range": "± 134.55770411511818"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15075.314969744,
            "unit": "ns",
            "range": "± 45.0236410919448"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 21196.083548990886,
            "unit": "ns",
            "range": "± 96.56320628400657"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 21083.719797770184,
            "unit": "ns",
            "range": "± 137.27045056068272"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 22739.814341227215,
            "unit": "ns",
            "range": "± 226.43751701358616"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16416.170971210187,
            "unit": "ns",
            "range": "± 47.29712758875064"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10527.627747671944,
            "unit": "ns",
            "range": "± 61.53129293296518"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 22465.141481672013,
            "unit": "ns",
            "range": "± 113.45543500304471"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 22078.613006591797,
            "unit": "ns",
            "range": "± 105.24077934809901"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 28395.261053902763,
            "unit": "ns",
            "range": "± 114.34012144098169"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26647.87072636531,
            "unit": "ns",
            "range": "± 63.407003914452126"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050749541,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15042.078775678363,
            "unit": "ns",
            "range": "± 74.39824595932437"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19960.00073678153,
            "unit": "ns",
            "range": "± 107.08481195380536"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 22890.373657226562,
            "unit": "ns",
            "range": "± 165.48887923826362"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 23036.209478759767,
            "unit": "ns",
            "range": "± 177.3223770597879"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16835.28698984782,
            "unit": "ns",
            "range": "± 25.56443695754772"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10583.493056161064,
            "unit": "ns",
            "range": "± 43.75576216858589"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 22252.94971110026,
            "unit": "ns",
            "range": "± 124.58963955334205"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 22539.130596454328,
            "unit": "ns",
            "range": "± 27.809783342867963"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 28442.722692871095,
            "unit": "ns",
            "range": "± 171.8232062897266"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 25985.524834769112,
            "unit": "ns",
            "range": "± 109.53672099263117"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21639.961351834812,
            "unit": "ns",
            "range": "± 113.97716794886759"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26407.47143336705,
            "unit": "ns",
            "range": "± 141.4893541677577"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 29554.35742899577,
            "unit": "ns",
            "range": "± 100.99784310124824"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 30509.234713040867,
            "unit": "ns",
            "range": "± 141.76533800747407"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16372.444229125977,
            "unit": "ns",
            "range": "± 21.210383713678006"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10652.982044764927,
            "unit": "ns",
            "range": "± 50.327419585493566"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27676.43091256278,
            "unit": "ns",
            "range": "± 128.05862626269365"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27445.424756731307,
            "unit": "ns",
            "range": "± 74.42198021745963"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32995.88475952148,
            "unit": "ns",
            "range": "± 149.88777135939233"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 34494.54353550502,
            "unit": "ns",
            "range": "± 502.80767294916546"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14687.266812133788,
            "unit": "ns",
            "range": "± 75.55674669657049"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19878.937591552734,
            "unit": "ns",
            "range": "± 168.77216855612915"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 21771.87012837728,
            "unit": "ns",
            "range": "± 91.99018298570859"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 23421.307782854354,
            "unit": "ns",
            "range": "± 128.65780086630969"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16987.619101388114,
            "unit": "ns",
            "range": "± 85.71626622204924"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 11358.032484436035,
            "unit": "ns",
            "range": "± 88.14069531065572"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 22236.33805135091,
            "unit": "ns",
            "range": "± 116.51871691283802"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 23572.164518083846,
            "unit": "ns",
            "range": "± 97.25383506594024"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 28266.58444925944,
            "unit": "ns",
            "range": "± 120.47835375621447"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26516.879545084634,
            "unit": "ns",
            "range": "± 71.6407190181047"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369272632,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15570.968153889973,
            "unit": "ns",
            "range": "± 224.46137960847838"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19986.699798583984,
            "unit": "ns",
            "range": "± 138.02465321773394"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 22434.156416672926,
            "unit": "ns",
            "range": "± 41.90822701533338"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 22645.16798400879,
            "unit": "ns",
            "range": "± 192.74075207963347"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16937.803969319662,
            "unit": "ns",
            "range": "± 104.11204295442484"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10976.342239379883,
            "unit": "ns",
            "range": "± 68.10524318955673"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21982.940857950845,
            "unit": "ns",
            "range": "± 153.57740658224708"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 22947.933463541667,
            "unit": "ns",
            "range": "± 111.3281980444461"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 27275.84341430664,
            "unit": "ns",
            "range": "± 142.78571737077522"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 27405.095768519812,
            "unit": "ns",
            "range": "± 129.11736610103713"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 21008.514014689128,
            "unit": "ns",
            "range": "± 113.02171267291688"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26534.654358927408,
            "unit": "ns",
            "range": "± 93.36465165484391"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 28842.067440795898,
            "unit": "ns",
            "range": "± 133.86214327191973"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 30225.53947230748,
            "unit": "ns",
            "range": "± 104.3095314322979"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16248.370061238607,
            "unit": "ns",
            "range": "± 20.444567220246007"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10611.086746724446,
            "unit": "ns",
            "range": "± 47.99951355574799"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 29468.667866007487,
            "unit": "ns",
            "range": "± 107.62247623678401"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 29042.114365641275,
            "unit": "ns",
            "range": "± 99.91941400875969"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32578.20108468192,
            "unit": "ns",
            "range": "± 128.08598980068055"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 33316.45627848307,
            "unit": "ns",
            "range": "± 216.45970034135334"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15154.637176513672,
            "unit": "ns",
            "range": "± 12.862259867166197"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 22380.81242806571,
            "unit": "ns",
            "range": "± 89.35253717960421"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 21251.421264648438,
            "unit": "ns",
            "range": "± 93.31088042159716"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 21946.18989054362,
            "unit": "ns",
            "range": "± 93.95533129060736"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16605.3474802653,
            "unit": "ns",
            "range": "± 102.01610356704798"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10562.433115641275,
            "unit": "ns",
            "range": "± 52.38332845073992"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21668.572701009114,
            "unit": "ns",
            "range": "± 119.1287286898835"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21529.05291748047,
            "unit": "ns",
            "range": "± 87.92689993031527"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 27672.375393676757,
            "unit": "ns",
            "range": "± 166.23923097616606"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26776.23845418294,
            "unit": "ns",
            "range": "± 186.93980089783904"
          }
        ]
      }
    ],
    "Operations.RawStringOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132894734,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14190.856170654297,
            "unit": "ns",
            "range": "± 59.698165024225624"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19829.666137695312,
            "unit": "ns",
            "range": "± 51.475343341726614"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17955.359293619793,
            "unit": "ns",
            "range": "± 52.95280302024586"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19024.96815999349,
            "unit": "ns",
            "range": "± 48.47473453285859"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15410.353088378906,
            "unit": "ns",
            "range": "± 27.429690445915956"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10720.738220214844,
            "unit": "ns",
            "range": "± 14.410873567350258"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20945.088782677285,
            "unit": "ns",
            "range": "± 28.362168463281616"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21592.736409505207,
            "unit": "ns",
            "range": "± 124.18133226331179"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25483.131103515625,
            "unit": "ns",
            "range": "± 55.43374074512074"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 24779.19452373798,
            "unit": "ns",
            "range": "± 72.56248243161208"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19510.250142415363,
            "unit": "ns",
            "range": "± 57.684996566460704"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25361.64540608724,
            "unit": "ns",
            "range": "± 141.99010157213297"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 24582.774759928387,
            "unit": "ns",
            "range": "± 71.77452318070188"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25568.619995117188,
            "unit": "ns",
            "range": "± 83.59390437350005"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15401.177266438803,
            "unit": "ns",
            "range": "± 31.13002431252897"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 11288.613789876303,
            "unit": "ns",
            "range": "± 12.723038606284291"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 25873.30067952474,
            "unit": "ns",
            "range": "± 55.86399992254943"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 25733.23211669922,
            "unit": "ns",
            "range": "± 68.08279536082067"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30641.578776041668,
            "unit": "ns",
            "range": "± 133.4146146627055"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 31932.542724609375,
            "unit": "ns",
            "range": "± 122.85599896999551"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13986.86054774693,
            "unit": "ns",
            "range": "± 34.72442404248113"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19603.813825334822,
            "unit": "ns",
            "range": "± 47.705557132436404"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17740.870666503906,
            "unit": "ns",
            "range": "± 28.491239095919813"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19475.808950570914,
            "unit": "ns",
            "range": "± 35.652154548449964"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15583.068612905648,
            "unit": "ns",
            "range": "± 22.186352458538984"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10844.31645711263,
            "unit": "ns",
            "range": "± 18.40795812290787"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20333.325782189004,
            "unit": "ns",
            "range": "± 61.63356737611477"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21445.936148507255,
            "unit": "ns",
            "range": "± 23.439738784355942"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 24576.917090782754,
            "unit": "ns",
            "range": "± 29.540867696991114"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 25333.93320719401,
            "unit": "ns",
            "range": "± 42.01859251477097"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734134522222,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14410.805130004883,
            "unit": "ns",
            "range": "± 13.722598851759246"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20643.283284505207,
            "unit": "ns",
            "range": "± 53.202843190026925"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17327.760096958704,
            "unit": "ns",
            "range": "± 102.44200602535993"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18359.964254628056,
            "unit": "ns",
            "range": "± 283.58765333303035"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15170.851571219308,
            "unit": "ns",
            "range": "± 24.864297534262594"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10823.018973214286,
            "unit": "ns",
            "range": "± 19.987633760468498"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21179.86579308143,
            "unit": "ns",
            "range": "± 19.184252527718588"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21437.848017765926,
            "unit": "ns",
            "range": "± 26.37409274655251"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 24738.243756975447,
            "unit": "ns",
            "range": "± 171.75954455583556"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 24856.20615641276,
            "unit": "ns",
            "range": "± 158.7638886465811"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 20208.417619977678,
            "unit": "ns",
            "range": "± 49.446141204795296"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25219.130379813058,
            "unit": "ns",
            "range": "± 123.67416480103084"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 24681.93097795759,
            "unit": "ns",
            "range": "± 78.85138431862549"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27526.58905029297,
            "unit": "ns",
            "range": "± 55.21935055937221"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15613.481038411459,
            "unit": "ns",
            "range": "± 38.76295217267269"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10655.656080979566,
            "unit": "ns",
            "range": "± 22.109646274886632"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26257.420756022137,
            "unit": "ns",
            "range": "± 196.93883280465698"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 25705.318341936385,
            "unit": "ns",
            "range": "± 63.863658663721665"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30629.60392878606,
            "unit": "ns",
            "range": "± 153.0901434814624"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 31070.79366048177,
            "unit": "ns",
            "range": "± 139.56504279882776"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14351.021106426533,
            "unit": "ns",
            "range": "± 19.138744922274057"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19858.829752604168,
            "unit": "ns",
            "range": "± 42.44846374950137"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17483.726065499442,
            "unit": "ns",
            "range": "± 31.735534449951064"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18144.23566545759,
            "unit": "ns",
            "range": "± 24.45565134023688"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15370.878483698918,
            "unit": "ns",
            "range": "± 14.440240928243231"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10945.575205485025,
            "unit": "ns",
            "range": "± 17.285335329199057"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21435.202730618992,
            "unit": "ns",
            "range": "± 17.42614661090422"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21200.045122419084,
            "unit": "ns",
            "range": "± 29.54435307658792"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 24344.34262789213,
            "unit": "ns",
            "range": "± 44.98906600053809"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 24967.958068847656,
            "unit": "ns",
            "range": "± 39.51239714407638"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377750329,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 13943.020411900112,
            "unit": "ns",
            "range": "± 20.34710318639752"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20675.770874023438,
            "unit": "ns",
            "range": "± 58.26772265557886"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17597.731454031808,
            "unit": "ns",
            "range": "± 29.962048565143913"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 17766.26150948661,
            "unit": "ns",
            "range": "± 38.22249936637857"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15643.003438313803,
            "unit": "ns",
            "range": "± 22.941494278471616"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10735.584728534404,
            "unit": "ns",
            "range": "± 14.496904935530251"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21205.86111886161,
            "unit": "ns",
            "range": "± 34.8849174097553"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20956.97774251302,
            "unit": "ns",
            "range": "± 39.012973090728046"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 24743.55245736929,
            "unit": "ns",
            "range": "± 44.216588387071695"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 25056.417643229168,
            "unit": "ns",
            "range": "± 37.93831184542328"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19331.224365234375,
            "unit": "ns",
            "range": "± 48.04504323750633"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25355.560709635418,
            "unit": "ns",
            "range": "± 73.09297410270696"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 30422.18505859375,
            "unit": "ns",
            "range": "± 467.64341730163693"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26608.167157854354,
            "unit": "ns",
            "range": "± 63.78682046498642"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15210.182542067309,
            "unit": "ns",
            "range": "± 29.22152561127783"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10564.391326904297,
            "unit": "ns",
            "range": "± 18.636728982185584"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26871.49434407552,
            "unit": "ns",
            "range": "± 50.956252270074074"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 25598.85973249163,
            "unit": "ns",
            "range": "± 34.286684031007816"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30014.52901204427,
            "unit": "ns",
            "range": "± 117.89946238902745"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 29894.576009114582,
            "unit": "ns",
            "range": "± 89.7491953739944"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14022.1681867327,
            "unit": "ns",
            "range": "± 13.371625994640095"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19797.932870047433,
            "unit": "ns",
            "range": "± 24.096644088601767"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17658.84307861328,
            "unit": "ns",
            "range": "± 47.611735015107506"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18129.520743233817,
            "unit": "ns",
            "range": "± 11.994446965816499"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15403.18102155413,
            "unit": "ns",
            "range": "± 20.03469350527577"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 11160.525868733725,
            "unit": "ns",
            "range": "± 11.323497464000548"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 25094.466654459637,
            "unit": "ns",
            "range": "± 56.82027787454911"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 25502.533162434895,
            "unit": "ns",
            "range": "± 128.40077126782575"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26308.013814290363,
            "unit": "ns",
            "range": "± 210.42225556514077"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26138.17378452846,
            "unit": "ns",
            "range": "± 61.26144175275532"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734393224314,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 13649.194101186898,
            "unit": "ns",
            "range": "± 19.568107893141743"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19926.47465297154,
            "unit": "ns",
            "range": "± 17.799468908520844"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17120.816911969865,
            "unit": "ns",
            "range": "± 27.087578311672747"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19566.723850795202,
            "unit": "ns",
            "range": "± 22.52270009985228"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15543.861389160156,
            "unit": "ns",
            "range": "± 12.789044312110944"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 11295.469883510044,
            "unit": "ns",
            "range": "± 9.301897769500115"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20215.0386265346,
            "unit": "ns",
            "range": "± 27.139908285365806"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21227.14162190755,
            "unit": "ns",
            "range": "± 18.373560551032696"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 24055.38101196289,
            "unit": "ns",
            "range": "± 25.13829609295302"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 24305.52259172712,
            "unit": "ns",
            "range": "± 105.83033841484128"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19560.61055501302,
            "unit": "ns",
            "range": "± 38.8656949995646"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25604.069401667668,
            "unit": "ns",
            "range": "± 52.01639292251766"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 24271.27431233724,
            "unit": "ns",
            "range": "± 39.98154886835585"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25221.183471679688,
            "unit": "ns",
            "range": "± 65.24913958500022"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15236.163940429688,
            "unit": "ns",
            "range": "± 20.32046876344317"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10539.14291381836,
            "unit": "ns",
            "range": "± 13.263177524110466"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26380.56162516276,
            "unit": "ns",
            "range": "± 70.54821762203333"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 25298.55464054988,
            "unit": "ns",
            "range": "± 19.19688337108539"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30584.750162760418,
            "unit": "ns",
            "range": "± 131.95169325845015"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 30601.668294270832,
            "unit": "ns",
            "range": "± 125.8552268286388"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13730.533701578775,
            "unit": "ns",
            "range": "± 20.720423720204746"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19698.847307477678,
            "unit": "ns",
            "range": "± 33.14100150347345"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17717.936197916668,
            "unit": "ns",
            "range": "± 38.448262797566635"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 17930.811157226562,
            "unit": "ns",
            "range": "± 19.88482031800699"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15330.632019042969,
            "unit": "ns",
            "range": "± 17.63966001970525"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10815.785573323568,
            "unit": "ns",
            "range": "± 29.89102950656974"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21354.88311767578,
            "unit": "ns",
            "range": "± 28.23767629599258"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21901.451110839844,
            "unit": "ns",
            "range": "± 38.965950337551305"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 24776.76493326823,
            "unit": "ns",
            "range": "± 44.16140416083478"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 24983.184814453125,
            "unit": "ns",
            "range": "± 28.75945586911681"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734484105566,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14024.126903827373,
            "unit": "ns",
            "range": "± 23.07115661058818"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20347.38739013672,
            "unit": "ns",
            "range": "± 56.38237058581914"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17746.588570731026,
            "unit": "ns",
            "range": "± 26.17498303295166"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18842.63153076172,
            "unit": "ns",
            "range": "± 33.52488883927097"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15428.783976236979,
            "unit": "ns",
            "range": "± 18.96824773864323"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10745.003861647387,
            "unit": "ns",
            "range": "± 25.283485592756353"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20260.40213448661,
            "unit": "ns",
            "range": "± 20.73201984391418"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20908.334115835336,
            "unit": "ns",
            "range": "± 43.16422190323078"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 24627.3441859654,
            "unit": "ns",
            "range": "± 25.499668575421012"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 25620.704650878906,
            "unit": "ns",
            "range": "± 28.472496229246016"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19642.53387451172,
            "unit": "ns",
            "range": "± 40.61363039249005"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26201.012093680245,
            "unit": "ns",
            "range": "± 38.97236125124976"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 24494.63108607701,
            "unit": "ns",
            "range": "± 58.791921444923545"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25104.28924560547,
            "unit": "ns",
            "range": "± 91.15976341051484"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15644.690763033354,
            "unit": "ns",
            "range": "± 14.77403063595884"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10540.046146937779,
            "unit": "ns",
            "range": "± 17.616441628275762"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26750.495256696428,
            "unit": "ns",
            "range": "± 33.96004553407235"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 25259.830932617188,
            "unit": "ns",
            "range": "± 65.51833416507621"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 29856.472574869793,
            "unit": "ns",
            "range": "± 118.57987513302426"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 30220.93241373698,
            "unit": "ns",
            "range": "± 120.0734050381042"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13923.500111897787,
            "unit": "ns",
            "range": "± 16.992623595522904"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20238.090108235676,
            "unit": "ns",
            "range": "± 107.5187606226246"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17837.83242361886,
            "unit": "ns",
            "range": "± 25.578835188568657"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18792.59076799665,
            "unit": "ns",
            "range": "± 184.57435502509745"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15433.856855119977,
            "unit": "ns",
            "range": "± 23.756466464608494"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 11171.090698242188,
            "unit": "ns",
            "range": "± 12.317287485248272"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21308.255004882812,
            "unit": "ns",
            "range": "± 28.670752052987467"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21078.233846028645,
            "unit": "ns",
            "range": "± 23.46556817324017"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26424.862452915735,
            "unit": "ns",
            "range": "± 41.46879864571416"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 24914.374215262276,
            "unit": "ns",
            "range": "± 18.28731857828785"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734560112650,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15496.68688092913,
            "unit": "ns",
            "range": "± 17.212382385955976"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19719.869056114785,
            "unit": "ns",
            "range": "± 25.280155688055167"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17469.523184640067,
            "unit": "ns",
            "range": "± 35.98117468183594"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19282.43909563337,
            "unit": "ns",
            "range": "± 44.82842930495468"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15779.908534458706,
            "unit": "ns",
            "range": "± 59.17998310094559"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10852.525438581195,
            "unit": "ns",
            "range": "± 17.426174642051723"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20919.95615641276,
            "unit": "ns",
            "range": "± 21.244000301988947"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20495.072232759914,
            "unit": "ns",
            "range": "± 24.603977101892422"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25995.566885811942,
            "unit": "ns",
            "range": "± 81.99110280840515"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 24831.74329485212,
            "unit": "ns",
            "range": "± 46.711398150029005"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19367.160034179688,
            "unit": "ns",
            "range": "± 45.221561049434456"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25056.99727376302,
            "unit": "ns",
            "range": "± 57.577980557472685"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 24187.76133219401,
            "unit": "ns",
            "range": "± 42.242272851955114"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25573.404987041766,
            "unit": "ns",
            "range": "± 35.611485876070574"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15347.185927170973,
            "unit": "ns",
            "range": "± 11.169254915685148"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10666.8212890625,
            "unit": "ns",
            "range": "± 16.322831676846807"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 25170.386396135604,
            "unit": "ns",
            "range": "± 22.491241800573178"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27876.895795549666,
            "unit": "ns",
            "range": "± 50.26236565856617"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30102.71260579427,
            "unit": "ns",
            "range": "± 176.55580146326736"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 31048.190307617188,
            "unit": "ns",
            "range": "± 131.7678986026382"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14160.680976280799,
            "unit": "ns",
            "range": "± 31.79747151789978"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19640.951303335336,
            "unit": "ns",
            "range": "± 47.97496449968048"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17831.494140625,
            "unit": "ns",
            "range": "± 14.334071537323583"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19112.958635602678,
            "unit": "ns",
            "range": "± 16.051535731129423"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15865.580313546317,
            "unit": "ns",
            "range": "± 18.284609440452712"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10619.80972290039,
            "unit": "ns",
            "range": "± 18.041201581912368"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20298.86213030134,
            "unit": "ns",
            "range": "± 22.43972991873553"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20833.218501164363,
            "unit": "ns",
            "range": "± 20.065709471083867"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 24833.36158165565,
            "unit": "ns",
            "range": "± 21.08864164829979"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 24906.97041829427,
            "unit": "ns",
            "range": "± 56.708543187139405"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734579332108,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 13977.617754255023,
            "unit": "ns",
            "range": "± 32.390405734975424"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20461.812133789062,
            "unit": "ns",
            "range": "± 46.4540237339864"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18155.929260253906,
            "unit": "ns",
            "range": "± 49.899433116156196"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 17940.171305338543,
            "unit": "ns",
            "range": "± 31.20211828528334"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15758.520943777901,
            "unit": "ns",
            "range": "± 41.556600819178534"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10772.595977783203,
            "unit": "ns",
            "range": "± 24.61075105556333"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20201.258595784504,
            "unit": "ns",
            "range": "± 61.24434858556146"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20802.366638183594,
            "unit": "ns",
            "range": "± 40.84028386470945"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26076.062665666854,
            "unit": "ns",
            "range": "± 63.40845021720299"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 24213.248334612166,
            "unit": "ns",
            "range": "± 68.59982301957994"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19284.03564453125,
            "unit": "ns",
            "range": "± 60.59311931402104"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26286.822611490887,
            "unit": "ns",
            "range": "± 81.9501553827812"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 24329.36991373698,
            "unit": "ns",
            "range": "± 79.70881303524615"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25255.314127604168,
            "unit": "ns",
            "range": "± 67.15367501475866"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 17020.52215576172,
            "unit": "ns",
            "range": "± 41.50048339898401"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10731.975337437221,
            "unit": "ns",
            "range": "± 16.379855050580836"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 25449.838038853235,
            "unit": "ns",
            "range": "± 48.00246056642595"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26435.5965247521,
            "unit": "ns",
            "range": "± 27.38705172904029"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30665.991821289062,
            "unit": "ns",
            "range": "± 90.00334711937154"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 34346.86366489955,
            "unit": "ns",
            "range": "± 409.2292049039542"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13893.81604875837,
            "unit": "ns",
            "range": "± 33.578737211878476"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19539.512736002605,
            "unit": "ns",
            "range": "± 58.34191335835722"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 19169.37774658203,
            "unit": "ns",
            "range": "± 277.1507147641965"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18278.28151157924,
            "unit": "ns",
            "range": "± 44.328128243099115"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15542.403157552084,
            "unit": "ns",
            "range": "± 43.08134399578971"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10583.817799886068,
            "unit": "ns",
            "range": "± 25.309025606979887"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 22668.048502604168,
            "unit": "ns",
            "range": "± 282.70873022414713"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21592.156160794773,
            "unit": "ns",
            "range": "± 43.23463437356644"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 29346.995747884113,
            "unit": "ns",
            "range": "± 74.69625737683957"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 31866.14237467448,
            "unit": "ns",
            "range": "± 146.16049069095158"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734596513767,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 13981.07386997768,
            "unit": "ns",
            "range": "± 58.86885757939316"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 23388.69803292411,
            "unit": "ns",
            "range": "± 54.70079024005969"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17501.51596069336,
            "unit": "ns",
            "range": "± 31.445882091096884"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18429.48041643415,
            "unit": "ns",
            "range": "± 33.07921946418054"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15373.069293682393,
            "unit": "ns",
            "range": "± 20.694210793704293"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10802.345217191256,
            "unit": "ns",
            "range": "± 65.69140730665593"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20367.657822829027,
            "unit": "ns",
            "range": "± 84.17663048257556"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20200.084141322546,
            "unit": "ns",
            "range": "± 27.365064212168615"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26386.05987548828,
            "unit": "ns",
            "range": "± 42.1590396335209"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 25592.76606241862,
            "unit": "ns",
            "range": "± 29.949709822647918"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19260.618809291296,
            "unit": "ns",
            "range": "± 108.69929508579494"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26184.496459960938,
            "unit": "ns",
            "range": "± 53.788294537366454"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 24695.59295654297,
            "unit": "ns",
            "range": "± 49.384203820101696"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25444.19426551232,
            "unit": "ns",
            "range": "± 56.191553848082066"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15396.264038085938,
            "unit": "ns",
            "range": "± 16.465069517634728"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 11079.749843052456,
            "unit": "ns",
            "range": "± 12.081553944553912"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27119.662068684895,
            "unit": "ns",
            "range": "± 49.11195991678346"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 28141.08407156808,
            "unit": "ns",
            "range": "± 78.51945126231274"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 29909.71396309989,
            "unit": "ns",
            "range": "± 139.37888231098805"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 29115.53690592448,
            "unit": "ns",
            "range": "± 125.71952847822148"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14901.337534586588,
            "unit": "ns",
            "range": "± 18.53444694372738"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19434.110209147137,
            "unit": "ns",
            "range": "± 24.193135833414335"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17743.59100341797,
            "unit": "ns",
            "range": "± 17.648169509210184"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18203.372497558594,
            "unit": "ns",
            "range": "± 14.156887297238374"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15262.207467215401,
            "unit": "ns",
            "range": "± 26.895706759285076"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 11005.789008507361,
            "unit": "ns",
            "range": "± 11.108239919252135"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20431.50115966797,
            "unit": "ns",
            "range": "± 35.79778421769302"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20617.29997907366,
            "unit": "ns",
            "range": "± 20.86317523889722"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25305.156649076023,
            "unit": "ns",
            "range": "± 51.03812886374808"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 24922.74649483817,
            "unit": "ns",
            "range": "± 33.716218852076366"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643911786,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14125.332465538611,
            "unit": "ns",
            "range": "± 24.95661461656146"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19898.94073486328,
            "unit": "ns",
            "range": "± 30.74967264823315"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17745.98611684946,
            "unit": "ns",
            "range": "± 70.99836325039374"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18361.12823486328,
            "unit": "ns",
            "range": "± 29.998824571308212"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15410.656302315849,
            "unit": "ns",
            "range": "± 20.737313042478615"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10821.570638020834,
            "unit": "ns",
            "range": "± 24.68810367413821"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20411.28880427434,
            "unit": "ns",
            "range": "± 29.33296572852174"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20927.52736409505,
            "unit": "ns",
            "range": "± 16.995055298143896"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 24352.20916748047,
            "unit": "ns",
            "range": "± 28.338591469178184"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 24699.70881144206,
            "unit": "ns",
            "range": "± 14.00744254456867"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19556.136474609375,
            "unit": "ns",
            "range": "± 53.925950192743294"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25275.735943134016,
            "unit": "ns",
            "range": "± 44.96086886408843"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 24770.819498697918,
            "unit": "ns",
            "range": "± 39.811096980715504"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25885.597127278645,
            "unit": "ns",
            "range": "± 62.858674261525145"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15550.282287597656,
            "unit": "ns",
            "range": "± 19.54668791156332"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10442.857360839844,
            "unit": "ns",
            "range": "± 9.166517478669567"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 25820.62247140067,
            "unit": "ns",
            "range": "± 20.726872800563488"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 25902.051798502605,
            "unit": "ns",
            "range": "± 32.102119790519126"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 28862.049560546875,
            "unit": "ns",
            "range": "± 81.72361905036283"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 31032.589721679688,
            "unit": "ns",
            "range": "± 107.43089792064306"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14308.887227376303,
            "unit": "ns",
            "range": "± 23.60930761345952"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20276.20391845703,
            "unit": "ns",
            "range": "± 47.427255002990165"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17171.27423967634,
            "unit": "ns",
            "range": "± 28.50364660730635"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18247.140385554387,
            "unit": "ns",
            "range": "± 100.91163682369668"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15478.066813151041,
            "unit": "ns",
            "range": "± 16.396503954266343"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10624.779619489398,
            "unit": "ns",
            "range": "± 10.461259226569036"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20696.27919514974,
            "unit": "ns",
            "range": "± 34.11372028399315"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21456.82091346154,
            "unit": "ns",
            "range": "± 41.89922493318102"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 24847.03325544085,
            "unit": "ns",
            "range": "± 33.39338182530214"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26580.238124302454,
            "unit": "ns",
            "range": "± 18.196223118928383"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734648216408,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14093.292672293526,
            "unit": "ns",
            "range": "± 16.191396881704268"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 22049.635518391926,
            "unit": "ns",
            "range": "± 65.83543524769635"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18024.18954031808,
            "unit": "ns",
            "range": "± 31.896942935406006"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18416.58717564174,
            "unit": "ns",
            "range": "± 27.721464358687864"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15298.35215250651,
            "unit": "ns",
            "range": "± 33.88718511800484"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10978.703104654947,
            "unit": "ns",
            "range": "± 15.109484711925589"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20274.45242745536,
            "unit": "ns",
            "range": "± 25.93788285770227"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21062.408447265625,
            "unit": "ns",
            "range": "± 49.434704829007785"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25773.277689615887,
            "unit": "ns",
            "range": "± 153.11470663073985"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 24966.84347299429,
            "unit": "ns",
            "range": "± 37.667274530582745"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19292.725423177082,
            "unit": "ns",
            "range": "± 31.292616754449604"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25066.490376790363,
            "unit": "ns",
            "range": "± 41.32969091854159"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25118.71103922526,
            "unit": "ns",
            "range": "± 53.72536089642052"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25524.99247233073,
            "unit": "ns",
            "range": "± 48.41151696793766"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15811.01793561663,
            "unit": "ns",
            "range": "± 17.649868746493105"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10949.973907470703,
            "unit": "ns",
            "range": "± 16.164998898054332"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 24920.338003976005,
            "unit": "ns",
            "range": "± 37.442967552463834"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26571.56982421875,
            "unit": "ns",
            "range": "± 51.09732996089935"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 29764.438883463543,
            "unit": "ns",
            "range": "± 128.9773333374766"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 38229.14510091146,
            "unit": "ns",
            "range": "± 184.43859161821914"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13753.611864362445,
            "unit": "ns",
            "range": "± 23.8575785777355"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19414.02587890625,
            "unit": "ns",
            "range": "± 38.72640678558677"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17147.92280930739,
            "unit": "ns",
            "range": "± 22.99797117642493"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18249.40938313802,
            "unit": "ns",
            "range": "± 33.23575401813205"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15618.311869303385,
            "unit": "ns",
            "range": "± 18.709299585346717"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10738.831532796225,
            "unit": "ns",
            "range": "± 21.594709597977893"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20583.043721516926,
            "unit": "ns",
            "range": "± 22.24225744120666"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20832.752787272137,
            "unit": "ns",
            "range": "± 25.892808898528884"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25695.5126953125,
            "unit": "ns",
            "range": "± 114.07008961633355"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 25430.332641601562,
            "unit": "ns",
            "range": "± 26.307000990832083"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734653022380,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 15843.743678501674,
            "unit": "ns",
            "range": "± 23.05228943320095"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19908.01718575614,
            "unit": "ns",
            "range": "± 41.41598826182708"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17839.119393484933,
            "unit": "ns",
            "range": "± 58.85839968238323"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18213.644002278645,
            "unit": "ns",
            "range": "± 35.30330730732845"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16598.350994403547,
            "unit": "ns",
            "range": "± 23.437657350639597"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10699.399860088643,
            "unit": "ns",
            "range": "± 18.866606059296192"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20903.480177659254,
            "unit": "ns",
            "range": "± 58.89136909326465"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21682.439778645832,
            "unit": "ns",
            "range": "± 47.8097006143831"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25084.310041155135,
            "unit": "ns",
            "range": "± 96.0831147457408"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 25669.154357910156,
            "unit": "ns",
            "range": "± 107.56856388082058"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19865.479387555803,
            "unit": "ns",
            "range": "± 72.14641355533428"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25489.78533063616,
            "unit": "ns",
            "range": "± 64.54430778864561"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 24914.01167649489,
            "unit": "ns",
            "range": "± 70.0535459271889"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25385.38078894982,
            "unit": "ns",
            "range": "± 41.8347986484658"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15434.275163922992,
            "unit": "ns",
            "range": "± 30.160803004262917"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 11113.11983380999,
            "unit": "ns",
            "range": "± 15.222309453552393"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27894.334176870492,
            "unit": "ns",
            "range": "± 20.72259503489219"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27805.804661342077,
            "unit": "ns",
            "range": "± 42.16662897845188"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30384.43603515625,
            "unit": "ns",
            "range": "± 161.70377321311915"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 31095.331682477678,
            "unit": "ns",
            "range": "± 190.25781711567205"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14024.061482747396,
            "unit": "ns",
            "range": "± 27.435956744191213"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 21587.410627092635,
            "unit": "ns",
            "range": "± 28.509462518455205"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17318.011728922527,
            "unit": "ns",
            "range": "± 19.729934298563574"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18268.717604417066,
            "unit": "ns",
            "range": "± 17.235252823146933"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15398.610636393229,
            "unit": "ns",
            "range": "± 17.602248686084753"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10968.178405761719,
            "unit": "ns",
            "range": "± 11.58068593452213"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20397.491237095423,
            "unit": "ns",
            "range": "± 33.560973137347936"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20965.72265625,
            "unit": "ns",
            "range": "± 26.181675964164672"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25005.19749568059,
            "unit": "ns",
            "range": "± 24.540158934315468"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27227.909749348957,
            "unit": "ns",
            "range": "± 101.26814138966337"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747649391,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 16038.314310709635,
            "unit": "ns",
            "range": "± 21.94559828079667"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20052.26832798549,
            "unit": "ns",
            "range": "± 37.03593261682771"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17836.653645833332,
            "unit": "ns",
            "range": "± 21.20870500891072"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18483.797127859933,
            "unit": "ns",
            "range": "± 29.5126778601367"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15529.249572753906,
            "unit": "ns",
            "range": "± 25.952337915656493"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 11098.08120727539,
            "unit": "ns",
            "range": "± 10.609609142476755"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21213.134983607702,
            "unit": "ns",
            "range": "± 30.30140357598577"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20845.34236363002,
            "unit": "ns",
            "range": "± 23.977468477253886"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 24854.834453876203,
            "unit": "ns",
            "range": "± 42.84815407787726"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 27349.230252779445,
            "unit": "ns",
            "range": "± 67.37215742411"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19320.61492919922,
            "unit": "ns",
            "range": "± 48.35662993189989"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25139.60244315011,
            "unit": "ns",
            "range": "± 69.79327052805473"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25848.268127441406,
            "unit": "ns",
            "range": "± 72.02585678057794"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25419.38456217448,
            "unit": "ns",
            "range": "± 53.16342593318104"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15430.171559651693,
            "unit": "ns",
            "range": "± 23.373956289347383"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10710.838317871094,
            "unit": "ns",
            "range": "± 13.539272530945867"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26282.91560581752,
            "unit": "ns",
            "range": "± 42.14005494661356"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26254.273550851005,
            "unit": "ns",
            "range": "± 35.916452736400934"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 31668.854166666668,
            "unit": "ns",
            "range": "± 213.2348021692487"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 30677.464396158855,
            "unit": "ns",
            "range": "± 84.09753733572374"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14172.800496419271,
            "unit": "ns",
            "range": "± 15.317978863057695"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19729.29425920759,
            "unit": "ns",
            "range": "± 65.19269361262053"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17577.366638183594,
            "unit": "ns",
            "range": "± 35.75883716912509"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19172.117178780692,
            "unit": "ns",
            "range": "± 25.394130212512632"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15301.675633021763,
            "unit": "ns",
            "range": "± 11.952025104608795"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10884.920971210186,
            "unit": "ns",
            "range": "± 15.79752455502566"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21055.252990722656,
            "unit": "ns",
            "range": "± 28.521790491122914"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21960.161917550224,
            "unit": "ns",
            "range": "± 41.94464827344268"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25257.106018066406,
            "unit": "ns",
            "range": "± 37.120688196575394"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 25518.32521878756,
            "unit": "ns",
            "range": "± 30.255768254235228"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734907331360,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 13998.635428292411,
            "unit": "ns",
            "range": "± 16.421519482062006"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19988.150024414062,
            "unit": "ns",
            "range": "± 36.5438414934481"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17065.340532575334,
            "unit": "ns",
            "range": "± 39.41690022180649"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18942.414269080527,
            "unit": "ns",
            "range": "± 36.22239941503444"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 18954.24335186298,
            "unit": "ns",
            "range": "± 32.02318788400816"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10966.539982386998,
            "unit": "ns",
            "range": "± 16.82206551250694"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20208.008902413505,
            "unit": "ns",
            "range": "± 31.482965716175077"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20849.361947866586,
            "unit": "ns",
            "range": "± 38.1085364113224"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 24855.509730747766,
            "unit": "ns",
            "range": "± 39.44694895723816"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 24420.654514857702,
            "unit": "ns",
            "range": "± 28.280072435552814"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19520.25370279948,
            "unit": "ns",
            "range": "± 54.84576332869916"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 24894.459969656808,
            "unit": "ns",
            "range": "± 56.398650858587786"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25190.063258579798,
            "unit": "ns",
            "range": "± 65.5836172836935"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26007.574462890625,
            "unit": "ns",
            "range": "± 47.01856498513552"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16123.683820452008,
            "unit": "ns",
            "range": "± 19.29113393165583"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10758.71353149414,
            "unit": "ns",
            "range": "± 16.35720498890843"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 25744.380798339844,
            "unit": "ns",
            "range": "± 65.480780632935"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 25668.92591203962,
            "unit": "ns",
            "range": "± 62.58324422762107"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 29748.42769077846,
            "unit": "ns",
            "range": "± 71.37585575243938"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 30369.781087239582,
            "unit": "ns",
            "range": "± 121.95285503024405"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13952.534895676832,
            "unit": "ns",
            "range": "± 15.84438830517955"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19384.136962890625,
            "unit": "ns",
            "range": "± 42.19747836674311"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17553.480122884113,
            "unit": "ns",
            "range": "± 49.1243251650244"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18240.721638997395,
            "unit": "ns",
            "range": "± 33.540119202278646"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15332.301447941707,
            "unit": "ns",
            "range": "± 20.251286701715912"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10732.605416434151,
            "unit": "ns",
            "range": "± 16.350017903887277"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21293.27654157366,
            "unit": "ns",
            "range": "± 29.359563877806465"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20822.027893066406,
            "unit": "ns",
            "range": "± 28.408894258134353"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 24215.872779259316,
            "unit": "ns",
            "range": "± 28.532820283976022"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 24891.771153041296,
            "unit": "ns",
            "range": "± 38.40260879210197"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735408140671,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14189.214172363281,
            "unit": "ns",
            "range": "± 21.509462676642823"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19719.517517089844,
            "unit": "ns",
            "range": "± 39.44542056237982"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18308.819580078125,
            "unit": "ns",
            "range": "± 27.531081461967197"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19257.083565848214,
            "unit": "ns",
            "range": "± 43.23016348847195"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 20060.886942545574,
            "unit": "ns",
            "range": "± 46.14719387197643"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10783.151626586914,
            "unit": "ns",
            "range": "± 16.690425242388727"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20989.59503173828,
            "unit": "ns",
            "range": "± 85.9116845749704"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21100.701468331474,
            "unit": "ns",
            "range": "± 26.319987222547134"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 24813.455200195312,
            "unit": "ns",
            "range": "± 59.77678290517909"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 25112.48779296875,
            "unit": "ns",
            "range": "± 67.37566932781581"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19639.947291782923,
            "unit": "ns",
            "range": "± 69.30308104609092"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25119.78934151786,
            "unit": "ns",
            "range": "± 53.60290309727436"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25020.5229695638,
            "unit": "ns",
            "range": "± 50.294986687897214"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 24841.939086914062,
            "unit": "ns",
            "range": "± 78.8086314799738"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15247.889273507255,
            "unit": "ns",
            "range": "± 32.130980048037785"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10684.684753417969,
            "unit": "ns",
            "range": "± 11.75551391295615"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 25758.8617960612,
            "unit": "ns",
            "range": "± 18.860730073378576"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26369.32637532552,
            "unit": "ns",
            "range": "± 53.163643400011786"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30384.26295689174,
            "unit": "ns",
            "range": "± 117.17470113497295"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 30827.862141927082,
            "unit": "ns",
            "range": "± 62.71207567802514"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13972.59381612142,
            "unit": "ns",
            "range": "± 12.046945247490829"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20257.504155085637,
            "unit": "ns",
            "range": "± 39.873261321811526"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17462.694193522137,
            "unit": "ns",
            "range": "± 32.26873773359387"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18708.03702218192,
            "unit": "ns",
            "range": "± 71.60771999636033"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15310.171508789062,
            "unit": "ns",
            "range": "± 34.04912667307795"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10742.906799316406,
            "unit": "ns",
            "range": "± 29.631474495931045"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20571.643284388952,
            "unit": "ns",
            "range": "± 15.054594879016882"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20859.922790527344,
            "unit": "ns",
            "range": "± 38.88297321531507"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25759.182739257812,
            "unit": "ns",
            "range": "± 26.58765264628925"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 25161.998421805245,
            "unit": "ns",
            "range": "± 63.76212099365341"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187800953,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 13814.408823649088,
            "unit": "ns",
            "range": "± 33.652017572720595"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20715.69083077567,
            "unit": "ns",
            "range": "± 67.8692544526866"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17210.560389927454,
            "unit": "ns",
            "range": "± 29.892644964672765"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 20991.56537737165,
            "unit": "ns",
            "range": "± 38.846154665565706"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15928.74521891276,
            "unit": "ns",
            "range": "± 21.38786410727566"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10872.13625226702,
            "unit": "ns",
            "range": "± 22.51125839827564"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20629.61665562221,
            "unit": "ns",
            "range": "± 30.576852441230837"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20559.54096867488,
            "unit": "ns",
            "range": "± 24.867387794146723"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25218.526047926684,
            "unit": "ns",
            "range": "± 39.391365957577726"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26089.39197246845,
            "unit": "ns",
            "range": "± 39.26486175454798"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19082.89286295573,
            "unit": "ns",
            "range": "± 48.82337713277697"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25132.571614583332,
            "unit": "ns",
            "range": "± 45.74810989114841"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25223.77227783203,
            "unit": "ns",
            "range": "± 51.73959632820827"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25474.658915201824,
            "unit": "ns",
            "range": "± 54.44922250639874"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15479.76578932542,
            "unit": "ns",
            "range": "± 24.333558035334825"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10690.028272356305,
            "unit": "ns",
            "range": "± 13.104571596674832"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27014.668709891183,
            "unit": "ns",
            "range": "± 18.18405175757615"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26213.079833984375,
            "unit": "ns",
            "range": "± 17.04591664226153"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30258.060128348214,
            "unit": "ns",
            "range": "± 90.19876074733324"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32196.910196940105,
            "unit": "ns",
            "range": "± 137.9493769892604"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14175.63990275065,
            "unit": "ns",
            "range": "± 16.959944796653815"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19495.921543666296,
            "unit": "ns",
            "range": "± 14.543873692046276"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18052.07802908761,
            "unit": "ns",
            "range": "± 20.417167262305206"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18118.897658128004,
            "unit": "ns",
            "range": "± 20.10435492658457"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15853.837381998697,
            "unit": "ns",
            "range": "± 21.34330787575115"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10744.075339181083,
            "unit": "ns",
            "range": "± 24.091214941222"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20457.867940266926,
            "unit": "ns",
            "range": "± 21.272422864543632"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20792.17529296875,
            "unit": "ns",
            "range": "± 22.456516824382568"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 24213.278902493992,
            "unit": "ns",
            "range": "± 21.77053749861221"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 25124.12367600661,
            "unit": "ns",
            "range": "± 48.56820496978962"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283624429,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14161.199892484225,
            "unit": "ns",
            "range": "± 11.092850413574798"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19420.80819266183,
            "unit": "ns",
            "range": "± 28.288950426632752"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17469.59010532924,
            "unit": "ns",
            "range": "± 24.062290293707076"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18076.233849158652,
            "unit": "ns",
            "range": "± 16.54362603212936"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 19359.080941336495,
            "unit": "ns",
            "range": "± 27.502996233572375"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 11594.320983886719,
            "unit": "ns",
            "range": "± 31.98926291521596"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20760.73176066081,
            "unit": "ns",
            "range": "± 28.20854894776225"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20645.575459798176,
            "unit": "ns",
            "range": "± 21.564996373396095"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25017.860717773438,
            "unit": "ns",
            "range": "± 49.424427677699875"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26091.33017403739,
            "unit": "ns",
            "range": "± 180.45395246272201"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19506.5673828125,
            "unit": "ns",
            "range": "± 62.15536407485751"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26643.745829264324,
            "unit": "ns",
            "range": "± 53.15556063984883"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 30286.790364583332,
            "unit": "ns",
            "range": "± 62.42304883009872"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25056.300557454426,
            "unit": "ns",
            "range": "± 52.66505067674319"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15331.958946814904,
            "unit": "ns",
            "range": "± 22.604473407321574"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10749.197169712612,
            "unit": "ns",
            "range": "± 19.24847932324941"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27073.175484793526,
            "unit": "ns",
            "range": "± 83.27817591751422"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26343.02696814904,
            "unit": "ns",
            "range": "± 62.797165845363345"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30070.425618489582,
            "unit": "ns",
            "range": "± 98.460303173558"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 30708.00040108817,
            "unit": "ns",
            "range": "± 111.63670162721014"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13989.76198832194,
            "unit": "ns",
            "range": "± 9.937580186614767"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19734.1059366862,
            "unit": "ns",
            "range": "± 16.758977290815608"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17424.381901667668,
            "unit": "ns",
            "range": "± 34.58742098719903"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18991.287885393416,
            "unit": "ns",
            "range": "± 29.188779343596458"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15327.142944335938,
            "unit": "ns",
            "range": "± 22.133085263648844"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 11579.666841947115,
            "unit": "ns",
            "range": "± 28.98666562078478"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20606.394136868992,
            "unit": "ns",
            "range": "± 36.526829944350425"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21028.34014892578,
            "unit": "ns",
            "range": "± 41.27576148965471"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25850.81075032552,
            "unit": "ns",
            "range": "± 85.45859681062501"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 24995.87580362956,
            "unit": "ns",
            "range": "± 26.653869593282998"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376664694,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14170.13913668119,
            "unit": "ns",
            "range": "± 17.595530018560957"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20434.051865797777,
            "unit": "ns",
            "range": "± 27.26222850151253"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17805.660574776786,
            "unit": "ns",
            "range": "± 127.78803434174296"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18844.78258405413,
            "unit": "ns",
            "range": "± 35.14322560492763"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 16185.746547154018,
            "unit": "ns",
            "range": "± 26.826538074098803"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10980.101231166294,
            "unit": "ns",
            "range": "± 27.065344093491003"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20482.290766789363,
            "unit": "ns",
            "range": "± 30.00402285379407"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21143.11781663161,
            "unit": "ns",
            "range": "± 47.98975040164495"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25114.129420689173,
            "unit": "ns",
            "range": "± 39.626572574804634"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 25886.876133510046,
            "unit": "ns",
            "range": "± 111.93636827658194"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19331.32563999721,
            "unit": "ns",
            "range": "± 42.66481749604609"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26431.813049316406,
            "unit": "ns",
            "range": "± 37.04158792013199"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25017.342267717635,
            "unit": "ns",
            "range": "± 41.10620092287959"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25912.232501690203,
            "unit": "ns",
            "range": "± 55.07086316564657"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15771.368844168526,
            "unit": "ns",
            "range": "± 16.96972650950747"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10768.921074500451,
            "unit": "ns",
            "range": "± 17.2143178589018"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27643.69905911959,
            "unit": "ns",
            "range": "± 28.158329585021082"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27189.900911771336,
            "unit": "ns",
            "range": "± 45.77653837644731"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 31081.473592122395,
            "unit": "ns",
            "range": "± 142.97689746439266"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 30440.206095377605,
            "unit": "ns",
            "range": "± 123.15424360540473"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13711.023385184151,
            "unit": "ns",
            "range": "± 18.516316607853028"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19625.877598353796,
            "unit": "ns",
            "range": "± 27.601522020532276"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18711.802908090445,
            "unit": "ns",
            "range": "± 42.64825221915683"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18626.970563616072,
            "unit": "ns",
            "range": "± 36.983448890523235"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15649.754079182943,
            "unit": "ns",
            "range": "± 10.177096937494206"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10864.998735700336,
            "unit": "ns",
            "range": "± 13.848746175449977"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 23018.228251139324,
            "unit": "ns",
            "range": "± 55.50603694932462"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20740.50009591239,
            "unit": "ns",
            "range": "± 25.891980983798106"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25035.477556501115,
            "unit": "ns",
            "range": "± 52.90850401924352"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 24823.993733723957,
            "unit": "ns",
            "range": "± 29.551349946038638"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736462389449,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14282.52451970027,
            "unit": "ns",
            "range": "± 35.32600406555264"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19449.478971041164,
            "unit": "ns",
            "range": "± 32.14149694975214"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 16864.05203683036,
            "unit": "ns",
            "range": "± 40.2707401988476"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18428.985595703125,
            "unit": "ns",
            "range": "± 41.881904420465375"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15309.61216517857,
            "unit": "ns",
            "range": "± 21.337681135535917"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10664.960303673377,
            "unit": "ns",
            "range": "± 23.949522396690735"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20622.889239971453,
            "unit": "ns",
            "range": "± 28.83646456960322"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20312.117239145133,
            "unit": "ns",
            "range": "± 59.6987475498988"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26517.31436593192,
            "unit": "ns",
            "range": "± 89.12715981633477"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 24080.859375,
            "unit": "ns",
            "range": "± 33.67776660019022"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 20385.82305908203,
            "unit": "ns",
            "range": "± 51.433762466952786"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25359.04780796596,
            "unit": "ns",
            "range": "± 98.72499162411836"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25196.61145891462,
            "unit": "ns",
            "range": "± 53.741515396826735"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26123.440786508414,
            "unit": "ns",
            "range": "± 76.22065513031725"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 16591.88995361328,
            "unit": "ns",
            "range": "± 14.37879037362953"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10791.794840494791,
            "unit": "ns",
            "range": "± 22.688941595318774"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 25421.22846330915,
            "unit": "ns",
            "range": "± 40.42241320696562"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27516.593627929688,
            "unit": "ns",
            "range": "± 79.41864909369401"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 30962.45869954427,
            "unit": "ns",
            "range": "± 128.7299431270738"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 30594.1162109375,
            "unit": "ns",
            "range": "± 85.87948037667"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13738.195909772601,
            "unit": "ns",
            "range": "± 26.01889036733255"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20022.937598595254,
            "unit": "ns",
            "range": "± 25.464977356772604"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18415.616280691964,
            "unit": "ns",
            "range": "± 32.41823105351936"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18371.875712076824,
            "unit": "ns",
            "range": "± 35.36387704514083"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16076.095145089286,
            "unit": "ns",
            "range": "± 39.97768363168087"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10926.543753487724,
            "unit": "ns",
            "range": "± 16.267259132678515"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 20690.51431509165,
            "unit": "ns",
            "range": "± 30.434143558582495"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20659.866550990515,
            "unit": "ns",
            "range": "± 16.04300576214691"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 24059.6431187221,
            "unit": "ns",
            "range": "± 46.42890679449374"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 25059.239196777344,
            "unit": "ns",
            "range": "± 22.973896515616858"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736480239308,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14060.969191331129,
            "unit": "ns",
            "range": "± 40.97224170249612"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19810.420663016183,
            "unit": "ns",
            "range": "± 26.54222402844323"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17781.651188777043,
            "unit": "ns",
            "range": "± 18.846045831100838"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 18164.807782854354,
            "unit": "ns",
            "range": "± 39.41972073023799"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15547.088317871094,
            "unit": "ns",
            "range": "± 21.077427869109176"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10675.802067347935,
            "unit": "ns",
            "range": "± 19.31197899044092"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 20347.076063889723,
            "unit": "ns",
            "range": "± 56.96372400592356"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21031.468418666296,
            "unit": "ns",
            "range": "± 29.77246808475398"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 24355.816868373327,
            "unit": "ns",
            "range": "± 48.687221572952"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 25069.45307804988,
            "unit": "ns",
            "range": "± 34.912013708184986"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19466.25274658203,
            "unit": "ns",
            "range": "± 50.93876480844129"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 27117.7202351888,
            "unit": "ns",
            "range": "± 56.72225276071788"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 24979.009791782923,
            "unit": "ns",
            "range": "± 62.58793633425535"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25681.671244303387,
            "unit": "ns",
            "range": "± 66.47066517198779"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15363.00537109375,
            "unit": "ns",
            "range": "± 12.255536239610919"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 11007.955345740686,
            "unit": "ns",
            "range": "± 29.65138160325018"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27506.200819749098,
            "unit": "ns",
            "range": "± 45.29410714719928"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27305.296443058895,
            "unit": "ns",
            "range": "± 42.16749461673297"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 31186.007893880207,
            "unit": "ns",
            "range": "± 179.03404191570414"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 31232.254028320312,
            "unit": "ns",
            "range": "± 96.56818099931291"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14209.174237932477,
            "unit": "ns",
            "range": "± 32.42410198679221"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20113.969014485676,
            "unit": "ns",
            "range": "± 82.28096902933262"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17401.591139573316,
            "unit": "ns",
            "range": "± 31.769809017639954"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 19186.034686748797,
            "unit": "ns",
            "range": "± 34.04416731016853"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15423.031381460336,
            "unit": "ns",
            "range": "± 14.171365733011054"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10375.157928466797,
            "unit": "ns",
            "range": "± 22.289911983903497"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 23960.63700358073,
            "unit": "ns",
            "range": "± 108.93326810795189"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20708.724153958836,
            "unit": "ns",
            "range": "± 42.047747870718105"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 24933.132731119793,
            "unit": "ns",
            "range": "± 94.29031490983938"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27366.270650227863,
            "unit": "ns",
            "range": "± 88.82979527424582"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736554029455,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14111.416575113932,
            "unit": "ns",
            "range": "± 70.58503705224261"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20694.495500837053,
            "unit": "ns",
            "range": "± 243.8158219283239"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 17897.367506760816,
            "unit": "ns",
            "range": "± 76.87822394983911"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19720.06123860677,
            "unit": "ns",
            "range": "± 107.60208128243983"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15779.618225097656,
            "unit": "ns",
            "range": "± 51.092609242898945"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10921.772003173828,
            "unit": "ns",
            "range": "± 38.038468526138175"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21365.68826528696,
            "unit": "ns",
            "range": "± 62.87381083841194"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 20631.51354108538,
            "unit": "ns",
            "range": "± 109.18683397444983"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25983.71856689453,
            "unit": "ns",
            "range": "± 96.40385728806007"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 25734.486592610676,
            "unit": "ns",
            "range": "± 101.10197988164204"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19739.230143229168,
            "unit": "ns",
            "range": "± 124.81678009543157"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26111.242457798548,
            "unit": "ns",
            "range": "± 145.54259545576951"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 25687.723083496094,
            "unit": "ns",
            "range": "± 103.99042340057454"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25628.970591227215,
            "unit": "ns",
            "range": "± 57.72534916400767"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15431.553431919643,
            "unit": "ns",
            "range": "± 51.260008947209066"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10642.427062988281,
            "unit": "ns",
            "range": "± 24.19763160157753"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26923.741251627605,
            "unit": "ns",
            "range": "± 138.37791908860183"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 28013.46171061198,
            "unit": "ns",
            "range": "± 138.28866833685947"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 31034.639892578125,
            "unit": "ns",
            "range": "± 139.79879335176494"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32069.916207449776,
            "unit": "ns",
            "range": "± 148.63964314430018"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14142.0168195452,
            "unit": "ns",
            "range": "± 48.29258347238054"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19890.623038155692,
            "unit": "ns",
            "range": "± 53.116033526230645"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 17723.136800130207,
            "unit": "ns",
            "range": "± 94.79508970397782"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18627.250061035156,
            "unit": "ns",
            "range": "± 64.88808794221553"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15500.573294503349,
            "unit": "ns",
            "range": "± 48.87166612253658"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10972.317739633414,
            "unit": "ns",
            "range": "± 27.667353868786407"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21174.97275216239,
            "unit": "ns",
            "range": "± 41.416668181872055"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 20706.937081473214,
            "unit": "ns",
            "range": "± 103.60215419593686"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25575.792149135046,
            "unit": "ns",
            "range": "± 82.62326141786686"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 25350.339762369793,
            "unit": "ns",
            "range": "± 80.43002902679022"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736656312266,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 13972.655639648438,
            "unit": "ns",
            "range": "± 23.316942362764795"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 21077.286682128906,
            "unit": "ns",
            "range": "± 30.393996126158576"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 18457.691301618303,
            "unit": "ns",
            "range": "± 20.191474557123907"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 19652.321370442707,
            "unit": "ns",
            "range": "± 51.891771838097924"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15457.08512526292,
            "unit": "ns",
            "range": "± 24.419603191004065"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10924.806322370257,
            "unit": "ns",
            "range": "± 20.09614430488769"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 22662.372334798176,
            "unit": "ns",
            "range": "± 156.15884082962245"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 22486.77259172712,
            "unit": "ns",
            "range": "± 20.32801303097764"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 25723.937770298548,
            "unit": "ns",
            "range": "± 100.599051153543"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26088.73584453876,
            "unit": "ns",
            "range": "± 94.41670525664111"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19761.266217912947,
            "unit": "ns",
            "range": "± 73.22626868337453"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25300.701497395832,
            "unit": "ns",
            "range": "± 57.27019939637928"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 23774.291338239396,
            "unit": "ns",
            "range": "± 55.13062675630436"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 25180.084126790363,
            "unit": "ns",
            "range": "± 51.8171121211549"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15604.653930664062,
            "unit": "ns",
            "range": "± 24.49448560405829"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 11388.607482910156,
            "unit": "ns",
            "range": "± 33.21468720055761"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27508.829607282365,
            "unit": "ns",
            "range": "± 38.999185003975676"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27381.719149076023,
            "unit": "ns",
            "range": "± 25.31705670816067"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32207.055194561297,
            "unit": "ns",
            "range": "± 115.43523286357772"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 31713.335774739582,
            "unit": "ns",
            "range": "± 113.2291802046257"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13683.711360051082,
            "unit": "ns",
            "range": "± 9.256143491209619"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20000.72195870536,
            "unit": "ns",
            "range": "± 53.25853068127813"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 18964.842224121094,
            "unit": "ns",
            "range": "± 40.48786689946827"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 18689.99735514323,
            "unit": "ns",
            "range": "± 36.32887558738097"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15322.828369140625,
            "unit": "ns",
            "range": "± 22.619685895773163"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10712.264075646033,
            "unit": "ns",
            "range": "± 15.500496156915284"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 22141.75526936849,
            "unit": "ns",
            "range": "± 34.49225829158896"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 23148.966326032365,
            "unit": "ns",
            "range": "± 17.30066034439557"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26914.439595540363,
            "unit": "ns",
            "range": "± 28.54039040282842"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27420.238603864396,
            "unit": "ns",
            "range": "± 15.59266119196484"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254564766,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14326.224752572867,
            "unit": "ns",
            "range": "± 16.182438494689343"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19728.1252347506,
            "unit": "ns",
            "range": "± 17.6467282851322"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 21333.05162702288,
            "unit": "ns",
            "range": "± 58.87966299697572"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 22693.257359095984,
            "unit": "ns",
            "range": "± 59.88849216866723"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15276.234318659855,
            "unit": "ns",
            "range": "± 21.19268186510151"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10649.696568080357,
            "unit": "ns",
            "range": "± 21.57985629374046"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21958.050973074776,
            "unit": "ns",
            "range": "± 58.56962012309855"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 22695.788167317707,
            "unit": "ns",
            "range": "± 33.67460153335882"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26076.17451985677,
            "unit": "ns",
            "range": "± 43.140967321650436"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26102.29024251302,
            "unit": "ns",
            "range": "± 55.32450864252413"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19967.080688476562,
            "unit": "ns",
            "range": "± 69.5018079122892"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26342.455647786457,
            "unit": "ns",
            "range": "± 97.58936569002442"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 28416.646118164062,
            "unit": "ns",
            "range": "± 67.23324474281854"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 26604.50650728666,
            "unit": "ns",
            "range": "± 36.817933159367556"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15075.103556315104,
            "unit": "ns",
            "range": "± 25.494075701821213"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10859.188079833984,
            "unit": "ns",
            "range": "± 20.0039015460495"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26805.889423076922,
            "unit": "ns",
            "range": "± 93.07009777739887"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 27301.964925130207,
            "unit": "ns",
            "range": "± 46.23378585358173"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 31773.309326171875,
            "unit": "ns",
            "range": "± 85.92135903858042"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32735.90799967448,
            "unit": "ns",
            "range": "± 92.58870465227062"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13792.79535929362,
            "unit": "ns",
            "range": "± 30.878738989158286"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20016.033113919773,
            "unit": "ns",
            "range": "± 29.002394517838912"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 19875.457327706474,
            "unit": "ns",
            "range": "± 41.996353943430044"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 24151.11562093099,
            "unit": "ns",
            "range": "± 34.19463567381328"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15437.095438639322,
            "unit": "ns",
            "range": "± 24.23306916045389"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 11022.555389404297,
            "unit": "ns",
            "range": "± 21.77766656575254"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 22176.080540248327,
            "unit": "ns",
            "range": "± 18.346429827426334"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 23568.045552571613,
            "unit": "ns",
            "range": "± 29.722144114392822"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26350.582013811385,
            "unit": "ns",
            "range": "± 25.80023697124148"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 26855.088806152344,
            "unit": "ns",
            "range": "± 54.34323522602892"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737789193131,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14577.289472307477,
            "unit": "ns",
            "range": "± 36.10473962728019"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 19378.591918945312,
            "unit": "ns",
            "range": "± 36.45609667793855"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 21073.51837158203,
            "unit": "ns",
            "range": "± 24.967998512896145"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 21104.421997070312,
            "unit": "ns",
            "range": "± 24.611863455957916"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15569.241098257211,
            "unit": "ns",
            "range": "± 14.704547097583397"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10784.121293288012,
            "unit": "ns",
            "range": "± 9.36287294180928"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21877.98591026893,
            "unit": "ns",
            "range": "± 13.436498756076567"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 22341.59436907087,
            "unit": "ns",
            "range": "± 21.51162788548211"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26034.42927769252,
            "unit": "ns",
            "range": "± 108.2089278054907"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 25815.41922433036,
            "unit": "ns",
            "range": "± 96.75192049096022"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19551.253618512834,
            "unit": "ns",
            "range": "± 43.22081661321468"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 26192.80744280134,
            "unit": "ns",
            "range": "± 51.83131244889519"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 26374.930245535714,
            "unit": "ns",
            "range": "± 67.7313835840414"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 29213.17626953125,
            "unit": "ns",
            "range": "± 70.53979727109763"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15387.09215436663,
            "unit": "ns",
            "range": "± 17.951981772832156"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10476.488930838448,
            "unit": "ns",
            "range": "± 8.539137809462709"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27530.12196858724,
            "unit": "ns",
            "range": "± 46.98460440649374"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 28514.94384765625,
            "unit": "ns",
            "range": "± 58.687005595516204"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 31107.769165039062,
            "unit": "ns",
            "range": "± 99.61042189381861"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32892.89408365885,
            "unit": "ns",
            "range": "± 106.57856117981018"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 15127.316131591797,
            "unit": "ns",
            "range": "± 50.455137467687095"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 20519.259425571985,
            "unit": "ns",
            "range": "± 27.452557312872933"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 21146.35990687779,
            "unit": "ns",
            "range": "± 29.718863406603944"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 21180.481610979354,
            "unit": "ns",
            "range": "± 45.93170448188574"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 16282.28513277494,
            "unit": "ns",
            "range": "± 34.898352377520816"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10640.502115885416,
            "unit": "ns",
            "range": "± 15.170012249000001"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21445.0200398763,
            "unit": "ns",
            "range": "± 25.486644126112125"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21621.998596191406,
            "unit": "ns",
            "range": "± 28.157387825023555"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 25648.0467576247,
            "unit": "ns",
            "range": "± 26.599797851515806"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27600.162658691406,
            "unit": "ns",
            "range": "± 32.965420739367225"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738051079557,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14030.93015230619,
            "unit": "ns",
            "range": "± 20.361960996791634"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20118.340846470423,
            "unit": "ns",
            "range": "± 52.86204111705997"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 20720.040384928387,
            "unit": "ns",
            "range": "± 47.719180798124164"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 22650.28817313058,
            "unit": "ns",
            "range": "± 58.16055105693627"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15549.930681501117,
            "unit": "ns",
            "range": "± 20.245403771037697"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 10808.656964983258,
            "unit": "ns",
            "range": "± 14.286055452476342"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 21477.357013408953,
            "unit": "ns",
            "range": "± 29.97640813273136"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 21649.305071149553,
            "unit": "ns",
            "range": "± 36.59464261689081"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26023.040771484375,
            "unit": "ns",
            "range": "± 110.09639623464702"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26411.341145833332,
            "unit": "ns",
            "range": "± 76.27453052765681"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 19969.905598958332,
            "unit": "ns",
            "range": "± 63.96266114710344"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25572.021014873797,
            "unit": "ns",
            "range": "± 45.77012691512394"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 27483.59832763672,
            "unit": "ns",
            "range": "± 69.84005032920575"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 28106.325589693508,
            "unit": "ns",
            "range": "± 50.93560691572499"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15403.60595703125,
            "unit": "ns",
            "range": "± 24.641675949016797"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 10721.964087853064,
            "unit": "ns",
            "range": "± 10.821223887258789"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 27260.103280203683,
            "unit": "ns",
            "range": "± 35.939628437915715"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26375.0728062221,
            "unit": "ns",
            "range": "± 41.52639671391983"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 32391.2548828125,
            "unit": "ns",
            "range": "± 88.19145710724088"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 32119.215175083704,
            "unit": "ns",
            "range": "± 98.22226555648453"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 14254.673062838041,
            "unit": "ns",
            "range": "± 20.914398807744405"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 21243.68155343192,
            "unit": "ns",
            "range": "± 78.50309373696656"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 21391.206577845984,
            "unit": "ns",
            "range": "± 17.73184791847361"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 22395.646231515067,
            "unit": "ns",
            "range": "± 32.807261591325265"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 15347.570088704428,
            "unit": "ns",
            "range": "± 17.940279423962785"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10734.034118652344,
            "unit": "ns",
            "range": "± 18.189450041339164"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21972.1923828125,
            "unit": "ns",
            "range": "± 20.236183052230906"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 22187.27315266927,
            "unit": "ns",
            "range": "± 19.60808078969662"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 28103.048706054688,
            "unit": "ns",
            "range": "± 29.675173579417436"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27796.76783635066,
            "unit": "ns",
            "range": "± 92.4629200359873"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369538004,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: ACL)",
            "value": 14900.07802327474,
            "unit": "ns",
            "range": "± 14.33053679360978"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: ACL)",
            "value": 20412.15602329799,
            "unit": "ns",
            "range": "± 30.827634250507575"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: ACL)",
            "value": 21289.801534016926,
            "unit": "ns",
            "range": "± 51.76178721137879"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: ACL)",
            "value": 21868.96773118239,
            "unit": "ns",
            "range": "± 18.63314070528144"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: ACL)",
            "value": 15406.159973144531,
            "unit": "ns",
            "range": "± 20.953560344343998"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: ACL)",
            "value": 11042.44631253756,
            "unit": "ns",
            "range": "± 17.270935079759717"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: ACL)",
            "value": 22095.608723958332,
            "unit": "ns",
            "range": "± 76.99025501329933"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: ACL)",
            "value": 22140.068708147322,
            "unit": "ns",
            "range": "± 34.69336633147836"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: ACL)",
            "value": 26113.995157877605,
            "unit": "ns",
            "range": "± 70.9103632007947"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: ACL)",
            "value": 26478.008219401043,
            "unit": "ns",
            "range": "± 124.88215652249615"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: AOF)",
            "value": 20770.33203125,
            "unit": "ns",
            "range": "± 45.38417957699503"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: AOF)",
            "value": 25875.85950578962,
            "unit": "ns",
            "range": "± 36.60814226170595"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: AOF)",
            "value": 27815.35614013672,
            "unit": "ns",
            "range": "± 47.397751628677824"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: AOF)",
            "value": 27506.802602914664,
            "unit": "ns",
            "range": "± 37.52883756955108"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: AOF)",
            "value": 15657.062471829928,
            "unit": "ns",
            "range": "± 16.82928414627709"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: AOF)",
            "value": 11108.14961024693,
            "unit": "ns",
            "range": "± 14.925580941745837"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: AOF)",
            "value": 26923.231506347656,
            "unit": "ns",
            "range": "± 71.98717020287035"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: AOF)",
            "value": 26794.645104041465,
            "unit": "ns",
            "range": "± 51.335726547547594"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: AOF)",
            "value": 31953.317464192707,
            "unit": "ns",
            "range": "± 157.44216369457158"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: AOF)",
            "value": 31601.24793419471,
            "unit": "ns",
            "range": "± 117.85599896124"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Set(Params: None)",
            "value": 13810.41275024414,
            "unit": "ns",
            "range": "± 29.536604595873627"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetEx(Params: None)",
            "value": 19944.261521559496,
            "unit": "ns",
            "range": "± 22.177374504499895"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetNx(Params: None)",
            "value": 20324.349153958836,
            "unit": "ns",
            "range": "± 40.630121591283114"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.SetXx(Params: None)",
            "value": 21967.446195162258,
            "unit": "ns",
            "range": "± 26.477474315188996"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetFound(Params: None)",
            "value": 17260.30513218471,
            "unit": "ns",
            "range": "± 60.00625186085604"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.GetNotFound(Params: None)",
            "value": 10665.355428059896,
            "unit": "ns",
            "range": "± 11.757698737841698"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Increment(Params: None)",
            "value": 21640.97606952374,
            "unit": "ns",
            "range": "± 31.414743896530506"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.Decrement(Params: None)",
            "value": 21348.616536458332,
            "unit": "ns",
            "range": "± 46.954489442656865"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.IncrementBy(Params: None)",
            "value": 26787.271219889324,
            "unit": "ns",
            "range": "± 115.10932303542401"
          },
          {
            "name": "BDN.benchmark.Operations.RawStringOperations.DecrementBy(Params: None)",
            "value": 27319.46280343192,
            "unit": "ns",
            "range": "± 121.43721929317073"
          }
        ]
      }
    ],
    "Operations.ScriptOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132336949,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 9854.840510777065,
            "unit": "ns",
            "range": "± 33.30379853387269"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 11057.504404340472,
            "unit": "ns",
            "range": "± 64.83220432644347"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 10101.784058634441,
            "unit": "ns",
            "range": "± 73.19725860530193"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8859.947564932016,
            "unit": "ns",
            "range": "± 26.036963805982523"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9023.409473125752,
            "unit": "ns",
            "range": "± 37.341734763535364"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 135611.45148577009,
            "unit": "ns",
            "range": "± 2029.6768371556336"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 22130.353085327148,
            "unit": "ns",
            "range": "± 134.37911506034195"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 21702.86043875558,
            "unit": "ns",
            "range": "± 96.16124680933231"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 160193.8178187779,
            "unit": "ns",
            "range": "± 813.1466057630686"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 53446.244232177734,
            "unit": "ns",
            "range": "± 392.81181455428504"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 135223.9639718192,
            "unit": "ns",
            "range": "± 1031.4104622996804"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 22784.674863179524,
            "unit": "ns",
            "range": "± 54.874451378674706"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22380.991120402017,
            "unit": "ns",
            "range": "± 132.6220194943431"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 165964.2878092448,
            "unit": "ns",
            "range": "± 444.5766450609944"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 53785.498299734936,
            "unit": "ns",
            "range": "± 367.16451815407623"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734133987484,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10240.210862295968,
            "unit": "ns",
            "range": "± 60.14076187493657"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10428.857485961915,
            "unit": "ns",
            "range": "± 22.212184976590734"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 10487.622997029623,
            "unit": "ns",
            "range": "± 76.31071949865635"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8531.725386301676,
            "unit": "ns",
            "range": "± 19.210967820059917"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9202.68070765904,
            "unit": "ns",
            "range": "± 10.119569659447441"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 133107.83612060547,
            "unit": "ns",
            "range": "± 485.3019475074923"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 22145.736157735188,
            "unit": "ns",
            "range": "± 38.46842604798907"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 21950.554501342773,
            "unit": "ns",
            "range": "± 141.10199713579627"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 158376.25659179688,
            "unit": "ns",
            "range": "± 628.7820165712996"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 53434.73804931641,
            "unit": "ns",
            "range": "± 401.62350354587585"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 134637.42819010417,
            "unit": "ns",
            "range": "± 834.5715121922802"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23046.632611955916,
            "unit": "ns",
            "range": "± 164.33895493282049"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22645.6143751878,
            "unit": "ns",
            "range": "± 93.18173116638317"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 159047.97391183037,
            "unit": "ns",
            "range": "± 657.4601251708646"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 55844.17161342076,
            "unit": "ns",
            "range": "± 486.3052518711932"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377277411,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 9730.387713623048,
            "unit": "ns",
            "range": "± 115.41523305730557"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10176.111178588868,
            "unit": "ns",
            "range": "± 94.01784480768971"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 10212.982479388897,
            "unit": "ns",
            "range": "± 22.986353271500942"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8547.91544518104,
            "unit": "ns",
            "range": "± 39.400983401220856"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 8836.289097086588,
            "unit": "ns",
            "range": "± 45.929693351444975"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 136317.3741280692,
            "unit": "ns",
            "range": "± 1155.8485345974443"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 22253.61912536621,
            "unit": "ns",
            "range": "± 21.512402187524906"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 21810.797614542644,
            "unit": "ns",
            "range": "± 140.01527561389335"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 158904.26250751203,
            "unit": "ns",
            "range": "± 305.09063511383295"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 55388.12537434896,
            "unit": "ns",
            "range": "± 299.2535217107499"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 133331.71499023438,
            "unit": "ns",
            "range": "± 1613.5153395754437"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 22566.459854125977,
            "unit": "ns",
            "range": "± 139.98982480902416"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22477.11849568685,
            "unit": "ns",
            "range": "± 125.63193912709393"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 159817.3315080915,
            "unit": "ns",
            "range": "± 486.4112132573592"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 55963.74225792518,
            "unit": "ns",
            "range": "± 369.9045068262312"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392753563,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10089.433714548746,
            "unit": "ns",
            "range": "± 26.250576357522025"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 11073.170500437418,
            "unit": "ns",
            "range": "± 27.286875331846932"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11403.628280639648,
            "unit": "ns",
            "range": "± 94.54103326678933"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8655.02058207194,
            "unit": "ns",
            "range": "± 80.77097564433865"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9569.324822998047,
            "unit": "ns",
            "range": "± 101.77099640324332"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 134575.71845703124,
            "unit": "ns",
            "range": "± 883.5702545187777"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23447.365306599935,
            "unit": "ns",
            "range": "± 130.3250243888201"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 20295.03770798903,
            "unit": "ns",
            "range": "± 70.21922368509065"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 161039.87132045202,
            "unit": "ns",
            "range": "± 377.3658811248533"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 57078.101998465405,
            "unit": "ns",
            "range": "± 408.31727854601576"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 131945.15623121994,
            "unit": "ns",
            "range": "± 448.410374938448"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 21910.292323185848,
            "unit": "ns",
            "range": "± 32.30932462802606"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 20312.19806925456,
            "unit": "ns",
            "range": "± 137.7198614949921"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 159500.1410929362,
            "unit": "ns",
            "range": "± 462.8722736501154"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 54931.80075073242,
            "unit": "ns",
            "range": "± 334.07623663935556"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483683371,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10598.598031616211,
            "unit": "ns",
            "range": "± 100.95616447481571"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10657.204770914714,
            "unit": "ns",
            "range": "± 93.74650373187757"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11213.790354047504,
            "unit": "ns",
            "range": "± 71.30680724009859"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 9461.39616721017,
            "unit": "ns",
            "range": "± 76.74405298746817"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9593.179401397705,
            "unit": "ns",
            "range": "± 25.94133347547109"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 133063.00856526694,
            "unit": "ns",
            "range": "± 354.6138346272458"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 22721.896970476424,
            "unit": "ns",
            "range": "± 134.60712836433245"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 20523.660119628905,
            "unit": "ns",
            "range": "± 161.82183969333605"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 163355.94372558594,
            "unit": "ns",
            "range": "± 1342.9360477846385"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 54969.43194814829,
            "unit": "ns",
            "range": "± 167.65188003658363"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 136278.57624162946,
            "unit": "ns",
            "range": "± 1889.3183121278971"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 22975.66880493164,
            "unit": "ns",
            "range": "± 173.6509084294676"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 21794.18051656087,
            "unit": "ns",
            "range": "± 19.286647549488844"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 161280.9762056791,
            "unit": "ns",
            "range": "± 532.6065950286863"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 57070.830186110274,
            "unit": "ns",
            "range": "± 301.3115920257948"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559660457,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10114.678433227538,
            "unit": "ns",
            "range": "± 76.48543228033469"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 11344.941584995815,
            "unit": "ns",
            "range": "± 58.38581816856723"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11275.29227556501,
            "unit": "ns",
            "range": "± 65.90677059708352"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8622.940234844502,
            "unit": "ns",
            "range": "± 8.237283732576955"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9137.503934733073,
            "unit": "ns",
            "range": "± 53.30099492905463"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 9984.719460042317,
            "unit": "ns",
            "range": "± 52.02920183120972"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12244.202743530273,
            "unit": "ns",
            "range": "± 13.503113608436745"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8905.75303777059,
            "unit": "ns",
            "range": "± 6.749507377723375"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 146179.8773925781,
            "unit": "ns",
            "range": "± 987.219175988506"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 16849.97980753581,
            "unit": "ns",
            "range": "± 31.492516392949494"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16645.16708809989,
            "unit": "ns",
            "range": "± 123.77818071041625"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 140186.9526554988,
            "unit": "ns",
            "range": "± 325.3551369007928"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 42071.123478480746,
            "unit": "ns",
            "range": "± 155.49942915778308"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 104844.91739908855,
            "unit": "ns",
            "range": "± 336.88168357634805"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8442741.481026785,
            "unit": "ns",
            "range": "± 36143.283557895804"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 241835.06912667412,
            "unit": "ns",
            "range": "± 714.1170653942415"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 152008.4857910156,
            "unit": "ns",
            "range": "± 838.024907144038"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 16963.348107910155,
            "unit": "ns",
            "range": "± 146.13747829272154"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 15937.953200120191,
            "unit": "ns",
            "range": "± 19.649526703912727"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 138288.87356770833,
            "unit": "ns",
            "range": "± 653.6503372763023"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 42909.978515625,
            "unit": "ns",
            "range": "± 196.14608209643342"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 103692.3132672991,
            "unit": "ns",
            "range": "± 72.78027685026436"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8436958.36875,
            "unit": "ns",
            "range": "± 56606.927803498045"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 243962.22107747395,
            "unit": "ns",
            "range": "± 805.2689985824326"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578940470,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10637.827635701497,
            "unit": "ns",
            "range": "± 101.09938341536795"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10861.490209960937,
            "unit": "ns",
            "range": "± 104.26058434375162"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11036.111345418294,
            "unit": "ns",
            "range": "± 121.35168020187002"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 9371.476462809245,
            "unit": "ns",
            "range": "± 28.72051385375188"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9487.536967350887,
            "unit": "ns",
            "range": "± 37.4157928505371"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 9901.104952494303,
            "unit": "ns",
            "range": "± 33.07684092945665"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12221.062250773111,
            "unit": "ns",
            "range": "± 23.899240723059826"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8624.85274887085,
            "unit": "ns",
            "range": "± 18.070211169443276"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 146779.77090890068,
            "unit": "ns",
            "range": "± 923.8857858017064"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 18117.178957621258,
            "unit": "ns",
            "range": "± 29.86359159502795"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16659.95406850179,
            "unit": "ns",
            "range": "± 52.423448552735884"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 142360.34853891225,
            "unit": "ns",
            "range": "± 775.4746002325262"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 43282.6498436561,
            "unit": "ns",
            "range": "± 109.76197794885364"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 104073.818355306,
            "unit": "ns",
            "range": "± 449.2343171083134"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8599850.04799107,
            "unit": "ns",
            "range": "± 43231.95315523273"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 244226.5607421875,
            "unit": "ns",
            "range": "± 2226.825103616685"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 147230.62539876302,
            "unit": "ns",
            "range": "± 248.87657539730742"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 16899.117228190105,
            "unit": "ns",
            "range": "± 29.430968140693707"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16053.482625325521,
            "unit": "ns",
            "range": "± 29.89386207840877"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 138825.92400251116,
            "unit": "ns",
            "range": "± 124.15287806573333"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 43191.5998433431,
            "unit": "ns",
            "range": "± 69.72095806186506"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 108844.85625813802,
            "unit": "ns",
            "range": "± 451.99431676332796"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8588384.28013393,
            "unit": "ns",
            "range": "± 53172.36844425313"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 244220.69691569012,
            "unit": "ns",
            "range": "± 1184.8953818673306"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734596138322,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10186.795627848307,
            "unit": "ns",
            "range": "± 188.55459228174323"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 11990.393451944987,
            "unit": "ns",
            "range": "± 66.94559347592256"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11479.082295735678,
            "unit": "ns",
            "range": "± 96.20404951841245"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8679.955707005092,
            "unit": "ns",
            "range": "± 54.21506353056002"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9131.454196384975,
            "unit": "ns",
            "range": "± 46.90105409523164"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 9893.476010640463,
            "unit": "ns",
            "range": "± 4.35586508462059"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12333.667120361328,
            "unit": "ns",
            "range": "± 78.5506306317631"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8846.34505513509,
            "unit": "ns",
            "range": "± 65.7457103030106"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 150234.54301757814,
            "unit": "ns",
            "range": "± 841.4919776776611"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 16754.735104878742,
            "unit": "ns",
            "range": "± 8.689120885405337"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16205.380205281575,
            "unit": "ns",
            "range": "± 132.76205142774182"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 136176.34997558594,
            "unit": "ns",
            "range": "± 170.44356720261734"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 42017.49539388021,
            "unit": "ns",
            "range": "± 171.14405806251955"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 108977.73515625,
            "unit": "ns",
            "range": "± 398.7018884811495"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8541305.908653846,
            "unit": "ns",
            "range": "± 39701.56036783213"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 242828.91580904447,
            "unit": "ns",
            "range": "± 1142.7327893186823"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 146052.28916015624,
            "unit": "ns",
            "range": "± 804.2707204147821"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 16843.531323946438,
            "unit": "ns",
            "range": "± 34.281986975511735"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16154.899967447916,
            "unit": "ns",
            "range": "± 120.730889078731"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 138322.19763183594,
            "unit": "ns",
            "range": "± 171.93800094990473"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 41827.77439528245,
            "unit": "ns",
            "range": "± 74.89545479516437"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 104785.80678710938,
            "unit": "ns",
            "range": "± 259.87099497942745"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8659582.28794643,
            "unit": "ns",
            "range": "± 44444.886822548666"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 243571.7969970703,
            "unit": "ns",
            "range": "± 307.4224788346628"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643585265,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10420.35756225586,
            "unit": "ns",
            "range": "± 118.12756460230744"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 11464.188195364815,
            "unit": "ns",
            "range": "± 84.60948177731383"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11147.44027404785,
            "unit": "ns",
            "range": "± 95.45062017689189"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8775.474641927083,
            "unit": "ns",
            "range": "± 108.03965547271557"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9715.964964548746,
            "unit": "ns",
            "range": "± 13.375061832416078"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 9998.05284663609,
            "unit": "ns",
            "range": "± 77.624636331516"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12308.271237182616,
            "unit": "ns",
            "range": "± 98.38862446001339"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8835.10714017428,
            "unit": "ns",
            "range": "± 56.236231690250236"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 146574.35815429688,
            "unit": "ns",
            "range": "± 527.2806253862854"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 16630.512804667156,
            "unit": "ns",
            "range": "± 18.112377547667624"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16331.750818888346,
            "unit": "ns",
            "range": "± 29.53244241162127"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 138914.00551350912,
            "unit": "ns",
            "range": "± 229.88377358462233"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 41717.262154134114,
            "unit": "ns",
            "range": "± 269.4394494959848"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 106995.1082438151,
            "unit": "ns",
            "range": "± 621.6098904661043"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8529657.357572116,
            "unit": "ns",
            "range": "± 32762.626597302326"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 241508.15256347656,
            "unit": "ns",
            "range": "± 1185.8569608186833"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 147208.4262131911,
            "unit": "ns",
            "range": "± 494.34020330699997"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 16603.639896099383,
            "unit": "ns",
            "range": "± 22.4805802948033"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16237.80641761193,
            "unit": "ns",
            "range": "± 15.583252441774992"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 139331.95958658855,
            "unit": "ns",
            "range": "± 683.8346328043032"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 42956.91859436035,
            "unit": "ns",
            "range": "± 64.34278837228791"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 105332.37552897136,
            "unit": "ns",
            "range": "± 573.132540451399"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8487649.016145833,
            "unit": "ns",
            "range": "± 46246.171997360914"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 242573.56059570314,
            "unit": "ns",
            "range": "± 1216.8837868981361"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647865908,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 9941.537281036377,
            "unit": "ns",
            "range": "± 14.278652445183566"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 11129.489725385394,
            "unit": "ns",
            "range": "± 21.208778865166387"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 10580.151125590006,
            "unit": "ns",
            "range": "± 11.18590920266639"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8855.802294921876,
            "unit": "ns",
            "range": "± 83.17601532550128"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9098.554468427386,
            "unit": "ns",
            "range": "± 12.387795642653419"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10606.897939046225,
            "unit": "ns",
            "range": "± 91.90153752005382"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12494.61285517766,
            "unit": "ns",
            "range": "± 69.49492957918551"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8583.37340037028,
            "unit": "ns",
            "range": "± 8.15768690481999"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 145076.37629045759,
            "unit": "ns",
            "range": "± 1377.135213889733"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 16575.80069732666,
            "unit": "ns",
            "range": "± 20.57581160426643"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16173.373492901143,
            "unit": "ns",
            "range": "± 45.18431073179807"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 138390.62188720703,
            "unit": "ns",
            "range": "± 93.04599747392842"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 42857.89638264974,
            "unit": "ns",
            "range": "± 201.9663636093638"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 106126.27983210637,
            "unit": "ns",
            "range": "± 275.0064553774722"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8475398.038020832,
            "unit": "ns",
            "range": "± 56437.769109716755"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 241084.57784016928,
            "unit": "ns",
            "range": "± 642.5919872121165"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 147698.61593191963,
            "unit": "ns",
            "range": "± 713.7805083147458"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 16870.354537963867,
            "unit": "ns",
            "range": "± 121.02457313895759"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16243.241828918457,
            "unit": "ns",
            "range": "± 16.892955542529972"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 138051.4219796317,
            "unit": "ns",
            "range": "± 1110.9765107166686"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 43872.30708821615,
            "unit": "ns",
            "range": "± 207.9242143388805"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 103632.57089669364,
            "unit": "ns",
            "range": "± 130.29384514437626"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8459975.978966346,
            "unit": "ns",
            "range": "± 52214.61713019575"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 239178.52240862165,
            "unit": "ns",
            "range": "± 940.8874783189574"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652680309,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10746.071747916085,
            "unit": "ns",
            "range": "± 61.97046217703261"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10646.990911211285,
            "unit": "ns",
            "range": "± 75.16080679107607"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 10932.602099609376,
            "unit": "ns",
            "range": "± 94.78460845726003"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8804.24535929362,
            "unit": "ns",
            "range": "± 92.93387690149358"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 10007.9306447347,
            "unit": "ns",
            "range": "± 110.24124338608563"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10081.53413282122,
            "unit": "ns",
            "range": "± 90.69498207698722"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12209.470718383789,
            "unit": "ns",
            "range": "± 13.619553712633676"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8740.576448567708,
            "unit": "ns",
            "range": "± 96.78051859022024"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 149778.87782796225,
            "unit": "ns",
            "range": "± 305.9059735075758"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 17117.196252441405,
            "unit": "ns",
            "range": "± 140.8882927155044"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16198.404122488839,
            "unit": "ns",
            "range": "± 53.67552110640607"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 138320.3032430013,
            "unit": "ns",
            "range": "± 113.0785887534473"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 42486.78775024414,
            "unit": "ns",
            "range": "± 60.8590019110936"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 103774.72497558594,
            "unit": "ns",
            "range": "± 489.87835371189766"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8497033.778125,
            "unit": "ns",
            "range": "± 45486.95953544449"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 242332.25454101563,
            "unit": "ns",
            "range": "± 1114.2233899580654"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 146562.5623372396,
            "unit": "ns",
            "range": "± 1353.0164884596884"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 17554.749157714843,
            "unit": "ns",
            "range": "± 134.66190579864738"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16201.641693115234,
            "unit": "ns",
            "range": "± 196.18904984297905"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 139152.51568603516,
            "unit": "ns",
            "range": "± 331.74221190497224"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 42805.39547322591,
            "unit": "ns",
            "range": "± 172.26477422707495"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 102660.76471416767,
            "unit": "ns",
            "range": "± 209.60193620712417"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8493989.440104166,
            "unit": "ns",
            "range": "± 74295.9319680842"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 242370.69474283853,
            "unit": "ns",
            "range": "± 894.1565599326796"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747328186,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10141.114180428642,
            "unit": "ns",
            "range": "± 62.989629982127056"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10848.701944986979,
            "unit": "ns",
            "range": "± 27.227872645121135"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11492.506837027413,
            "unit": "ns",
            "range": "± 75.16070085661521"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8620.419589116023,
            "unit": "ns",
            "range": "± 11.083728362611335"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 10151.45966796875,
            "unit": "ns",
            "range": "± 119.75421327091915"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10281.314025878906,
            "unit": "ns",
            "range": "± 69.17423949960893"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12284.999009268624,
            "unit": "ns",
            "range": "± 31.815382340080365"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8731.59338596889,
            "unit": "ns",
            "range": "± 74.65344535861333"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 145953.14803641182,
            "unit": "ns",
            "range": "± 1064.9430051188035"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 17076.182044396035,
            "unit": "ns",
            "range": "± 72.97068046109877"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16194.987208439754,
            "unit": "ns",
            "range": "± 41.63028721750071"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 137915.78185221355,
            "unit": "ns",
            "range": "± 1038.371726080366"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 41334.22267252604,
            "unit": "ns",
            "range": "± 275.9846664242167"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 106464.9991780599,
            "unit": "ns",
            "range": "± 588.7660343517153"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8454249.900520833,
            "unit": "ns",
            "range": "± 41975.5572653649"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 241686.40999930244,
            "unit": "ns",
            "range": "± 994.8954314196067"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 147320.57706124443,
            "unit": "ns",
            "range": "± 343.75952780075323"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 16837.570284525555,
            "unit": "ns",
            "range": "± 10.59944266779741"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 17071.83331604004,
            "unit": "ns",
            "range": "± 163.98438824774607"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 140855.82711356026,
            "unit": "ns",
            "range": "± 1619.5339630696506"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 41884.53992207845,
            "unit": "ns",
            "range": "± 54.31971042524821"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 106505.73373413086,
            "unit": "ns",
            "range": "± 193.66951329249983"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8350287.715625,
            "unit": "ns",
            "range": "± 56697.32456062491"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 244536.23352864583,
            "unit": "ns",
            "range": "± 1153.397803782761"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906967015,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10051.75783996582,
            "unit": "ns",
            "range": "± 61.03847716067053"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10886.838786533901,
            "unit": "ns",
            "range": "± 28.77563537139357"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 10690.928074763371,
            "unit": "ns",
            "range": "± 8.626820079307516"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8632.897721426827,
            "unit": "ns",
            "range": "± 8.98942822643907"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9194.567689078194,
            "unit": "ns",
            "range": "± 11.583549788093416"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10081.80201212565,
            "unit": "ns",
            "range": "± 26.85236702647197"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12273.65903371175,
            "unit": "ns",
            "range": "± 77.88823487338125"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8673.754608154297,
            "unit": "ns",
            "range": "± 18.76775350851234"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 146455.2941080729,
            "unit": "ns",
            "range": "± 365.0094708559605"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 16720.64175313314,
            "unit": "ns",
            "range": "± 140.16897619874996"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16175.389720036434,
            "unit": "ns",
            "range": "± 10.413435658142618"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 140571.74893391927,
            "unit": "ns",
            "range": "± 1220.3652634210346"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 42876.39175211589,
            "unit": "ns",
            "range": "± 307.49521891416754"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 108778.03213065011,
            "unit": "ns",
            "range": "± 355.28479009705114"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8499911.840401785,
            "unit": "ns",
            "range": "± 43339.584767374734"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 239692.2541410006,
            "unit": "ns",
            "range": "± 868.651758529295"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 147814.80515136718,
            "unit": "ns",
            "range": "± 1187.9674563432582"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 17010.455958048504,
            "unit": "ns",
            "range": "± 151.1471022973691"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16209.09641794058,
            "unit": "ns",
            "range": "± 15.20516315302221"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 142064.74421386718,
            "unit": "ns",
            "range": "± 1247.9776584342092"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 43836.43807373047,
            "unit": "ns",
            "range": "± 207.7593588993715"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 108012.80187174478,
            "unit": "ns",
            "range": "± 517.0238642811811"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8459924.516826924,
            "unit": "ns",
            "range": "± 40355.2244897624"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 238570.0091756185,
            "unit": "ns",
            "range": "± 323.0315804355974"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407812995,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10352.198186238607,
            "unit": "ns",
            "range": "± 83.78762425642357"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 11374.663917032878,
            "unit": "ns",
            "range": "± 80.00470001772858"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11459.767254420689,
            "unit": "ns",
            "range": "± 28.294329552577707"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8649.083625793457,
            "unit": "ns",
            "range": "± 17.739097570580835"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9431.855633544921,
            "unit": "ns",
            "range": "± 126.20811268905335"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 9952.583700561523,
            "unit": "ns",
            "range": "± 82.10784532924274"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12321.74833570208,
            "unit": "ns",
            "range": "± 83.69469104548548"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8615.379532447228,
            "unit": "ns",
            "range": "± 19.296474102569743"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 147734.4839564732,
            "unit": "ns",
            "range": "± 1461.522589572858"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 16619.32936299642,
            "unit": "ns",
            "range": "± 144.4761404809892"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16172.585879007975,
            "unit": "ns",
            "range": "± 16.808753690909338"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 142020.05099722056,
            "unit": "ns",
            "range": "± 788.3857672911781"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 41672.60454618014,
            "unit": "ns",
            "range": "± 77.07417480992443"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 104481.13063401442,
            "unit": "ns",
            "range": "± 203.76031676159815"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8633070.028645834,
            "unit": "ns",
            "range": "± 39731.319230909794"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 240821.06910807293,
            "unit": "ns",
            "range": "± 1091.8827455584296"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 148386.27302433894,
            "unit": "ns",
            "range": "± 209.72430776208083"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 16990.691973368328,
            "unit": "ns",
            "range": "± 56.84014130623797"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 15954.95061340332,
            "unit": "ns",
            "range": "± 159.35233176526197"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 141397.65285644532,
            "unit": "ns",
            "range": "± 1199.8897957958413"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 42472.8127347506,
            "unit": "ns",
            "range": "± 60.27018675330253"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 106518.57337297712,
            "unit": "ns",
            "range": "± 133.2915841937994"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8512208.783653846,
            "unit": "ns",
            "range": "± 44584.89319806638"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 242885.83056640625,
            "unit": "ns",
            "range": "± 342.3490469127884"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187512329,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10164.054762776692,
            "unit": "ns",
            "range": "± 72.21725090068513"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 11159.916199239095,
            "unit": "ns",
            "range": "± 58.48004498489411"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 10682.208827092098,
            "unit": "ns",
            "range": "± 15.915173102726698"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8681.814828725961,
            "unit": "ns",
            "range": "± 48.74669467895834"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9609.8047068278,
            "unit": "ns",
            "range": "± 145.43308040461076"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10007.113970075336,
            "unit": "ns",
            "range": "± 98.11314054670906"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 13153.6566599528,
            "unit": "ns",
            "range": "± 74.42799962985923"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8835.018832615444,
            "unit": "ns",
            "range": "± 99.50544457126786"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 145402.57742745537,
            "unit": "ns",
            "range": "± 1065.8112932832312"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 17416.58450082632,
            "unit": "ns",
            "range": "± 110.31064703915169"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16081.346670297477,
            "unit": "ns",
            "range": "± 23.043212138191713"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 136286.20319010416,
            "unit": "ns",
            "range": "± 1641.9924316625438"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 42013.193213829625,
            "unit": "ns",
            "range": "± 178.96912612536877"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 108216.78084019253,
            "unit": "ns",
            "range": "± 157.4321649631176"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8576015.690104166,
            "unit": "ns",
            "range": "± 27039.273960588016"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 244899.22089092547,
            "unit": "ns",
            "range": "± 930.7161052743759"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 144724.71270282453,
            "unit": "ns",
            "range": "± 688.5833234324808"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 16966.344657389323,
            "unit": "ns",
            "range": "± 104.67564226353748"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16110.71165974935,
            "unit": "ns",
            "range": "± 68.63653828484287"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 136925.2885460487,
            "unit": "ns",
            "range": "± 1181.5746098198356"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 42709.00454305013,
            "unit": "ns",
            "range": "± 234.0203616169922"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 107699.60291935847,
            "unit": "ns",
            "range": "± 374.68196872145444"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8579536.240625,
            "unit": "ns",
            "range": "± 57342.61264954709"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 240129.99101911273,
            "unit": "ns",
            "range": "± 856.3483659530403"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283306321,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10345.802138108473,
            "unit": "ns",
            "range": "± 21.00935736390101"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10784.242549351284,
            "unit": "ns",
            "range": "± 61.21327105503512"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11064.790515354702,
            "unit": "ns",
            "range": "± 60.93204478494639"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 9320.393019456129,
            "unit": "ns",
            "range": "± 9.245892919550887"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9966.784599812825,
            "unit": "ns",
            "range": "± 61.75547022350248"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10155.940854753766,
            "unit": "ns",
            "range": "± 53.2717719757903"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12469.865446980793,
            "unit": "ns",
            "range": "± 56.838342615636456"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8903.773986816406,
            "unit": "ns",
            "range": "± 3.9673929611181906"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 144950.57873535156,
            "unit": "ns",
            "range": "± 1180.849837609172"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 17336.470458984375,
            "unit": "ns",
            "range": "± 30.351168604017392"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16154.656758626303,
            "unit": "ns",
            "range": "± 211.82105137262923"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 138388.70868389422,
            "unit": "ns",
            "range": "± 176.50107343437662"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 43347.86334025065,
            "unit": "ns",
            "range": "± 167.53130988007763"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 106211.7036702474,
            "unit": "ns",
            "range": "± 316.7724961012506"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8654448.892857144,
            "unit": "ns",
            "range": "± 31606.621569215986"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 241089.98540039064,
            "unit": "ns",
            "range": "± 734.3585008050643"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 144597.2492879232,
            "unit": "ns",
            "range": "± 286.28395116154365"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 17616.420962524415,
            "unit": "ns",
            "range": "± 95.40486017306753"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16693.25322664701,
            "unit": "ns",
            "range": "± 27.133250173740286"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 139832.79677327475,
            "unit": "ns",
            "range": "± 270.7596647121677"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 43196.71466064453,
            "unit": "ns",
            "range": "± 122.97838678525794"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 107073.1337890625,
            "unit": "ns",
            "range": "± 276.14836348024727"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8474879.6375,
            "unit": "ns",
            "range": "± 51598.84464683343"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 240564.04360351563,
            "unit": "ns",
            "range": "± 582.089213172521"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376357258,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10571.284000103291,
            "unit": "ns",
            "range": "± 73.57733625152055"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10891.36967577253,
            "unit": "ns",
            "range": "± 59.23450987016019"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11780.118306986491,
            "unit": "ns",
            "range": "± 73.28426978997972"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 9208.399485661434,
            "unit": "ns",
            "range": "± 18.933453839770497"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9622.117401123047,
            "unit": "ns",
            "range": "± 48.19875571177519"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10129.877235412598,
            "unit": "ns",
            "range": "± 69.41855878687743"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12559.387730189732,
            "unit": "ns",
            "range": "± 59.56705291097055"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 9106.637205857496,
            "unit": "ns",
            "range": "± 18.73558944070327"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 144406.42793782553,
            "unit": "ns",
            "range": "± 376.72660606630444"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 17414.09951564244,
            "unit": "ns",
            "range": "± 85.47722607427838"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16322.54560634068,
            "unit": "ns",
            "range": "± 93.08760485397347"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 138235.44326171876,
            "unit": "ns",
            "range": "± 675.5726045207805"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 43175.19384530874,
            "unit": "ns",
            "range": "± 211.8848372699524"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 105322.88873291016,
            "unit": "ns",
            "range": "± 145.61513781532628"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8451136.363541666,
            "unit": "ns",
            "range": "± 45512.757673468404"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 247047.04044596353,
            "unit": "ns",
            "range": "± 315.64566628198185"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 146587.79778180804,
            "unit": "ns",
            "range": "± 486.4481956303834"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 16844.2368750939,
            "unit": "ns",
            "range": "± 32.94378699558822"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16377.590767996651,
            "unit": "ns",
            "range": "± 93.98030898489294"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 137081.53649088542,
            "unit": "ns",
            "range": "± 918.1464805698139"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 44643.961975097656,
            "unit": "ns",
            "range": "± 89.4624721152763"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 104318.59431675503,
            "unit": "ns",
            "range": "± 250.6101618926997"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8428620.6328125,
            "unit": "ns",
            "range": "± 59221.01760440378"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 240607.77975260417,
            "unit": "ns",
            "range": "± 562.9085400879179"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736462083598,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10609.418524169922,
            "unit": "ns",
            "range": "± 110.00389088505432"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10874.153297424316,
            "unit": "ns",
            "range": "± 17.95339302339603"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11269.340159824917,
            "unit": "ns",
            "range": "± 19.497349547507966"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 9117.13792536809,
            "unit": "ns",
            "range": "± 16.668850485778222"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9697.314830235073,
            "unit": "ns",
            "range": "± 38.71701252193098"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10254.715417715219,
            "unit": "ns",
            "range": "± 24.81069691227622"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12802.99942779541,
            "unit": "ns",
            "range": "± 53.557133582452835"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 9209.472734723773,
            "unit": "ns",
            "range": "± 24.19526523119273"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 144619.849609375,
            "unit": "ns",
            "range": "± 531.7607590760401"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 17738.989020792644,
            "unit": "ns",
            "range": "± 102.87550126273175"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 15931.854031880697,
            "unit": "ns",
            "range": "± 29.346712812528157"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 136922.28806715744,
            "unit": "ns",
            "range": "± 655.0548414005398"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 41544.75119890486,
            "unit": "ns",
            "range": "± 158.27335224681337"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 106108.49785505023,
            "unit": "ns",
            "range": "± 101.23835606289875"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8565861.0078125,
            "unit": "ns",
            "range": "± 52563.26500713009"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 242720.32975260416,
            "unit": "ns",
            "range": "± 412.55458184982723"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 145102.32947591145,
            "unit": "ns",
            "range": "± 571.3026826810066"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 16991.366086324055,
            "unit": "ns",
            "range": "± 23.012275895220508"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16763.29002685547,
            "unit": "ns",
            "range": "± 68.66715157542811"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 135343.4221842448,
            "unit": "ns",
            "range": "± 770.3407000211835"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 43944.659014020646,
            "unit": "ns",
            "range": "± 114.80299438165756"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 102126.2890625,
            "unit": "ns",
            "range": "± 272.355945058988"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8538123.027604166,
            "unit": "ns",
            "range": "± 38137.782847618495"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 240462.02154947916,
            "unit": "ns",
            "range": "± 729.7086506689436"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479921501,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10392.966902414957,
            "unit": "ns",
            "range": "± 23.51838062488496"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10976.368670654298,
            "unit": "ns",
            "range": "± 90.65985456209495"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 10814.98314412435,
            "unit": "ns",
            "range": "± 90.06347818811504"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 9184.732066853841,
            "unit": "ns",
            "range": "± 78.16875924046751"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9618.553507123675,
            "unit": "ns",
            "range": "± 52.070514709037084"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10072.374681599935,
            "unit": "ns",
            "range": "± 70.10941043000481"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12541.680561319987,
            "unit": "ns",
            "range": "± 67.82401188166304"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8697.95317586263,
            "unit": "ns",
            "range": "± 14.592867721414393"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 143867.75252859932,
            "unit": "ns",
            "range": "± 1155.4764984235114"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 17606.126636211688,
            "unit": "ns",
            "range": "± 16.054297202497533"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16238.422471110027,
            "unit": "ns",
            "range": "± 123.94778024491914"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 135092.18324381512,
            "unit": "ns",
            "range": "± 794.5469491635215"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 42866.05117594401,
            "unit": "ns",
            "range": "± 178.74074621042325"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 106048.4094563802,
            "unit": "ns",
            "range": "± 330.2162213563658"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 9073547.750600962,
            "unit": "ns",
            "range": "± 17336.71381866525"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 241645.4896809896,
            "unit": "ns",
            "range": "± 670.0459812627911"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 148546.99216308593,
            "unit": "ns",
            "range": "± 964.880448129796"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 17521.45489501953,
            "unit": "ns",
            "range": "± 107.28957608970424"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 15990.171203613281,
            "unit": "ns",
            "range": "± 76.82820024729708"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 133630.66420491537,
            "unit": "ns",
            "range": "± 99.36291274980668"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 41457.67213657924,
            "unit": "ns",
            "range": "± 45.456941432478075"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 101499.1234828404,
            "unit": "ns",
            "range": "± 234.04022904621988"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8467200.219791668,
            "unit": "ns",
            "range": "± 44334.379688210705"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 240366.75815429687,
            "unit": "ns",
            "range": "± 1047.3596509283727"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553717532,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10526.814144679478,
            "unit": "ns",
            "range": "± 56.47313477880964"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 10735.524854532878,
            "unit": "ns",
            "range": "± 110.24474380336447"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 11421.583634694418,
            "unit": "ns",
            "range": "± 21.18403015111627"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 9689.268326822918,
            "unit": "ns",
            "range": "± 53.930183400821136"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 10502.103488377163,
            "unit": "ns",
            "range": "± 46.65200278659887"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10143.55149943034,
            "unit": "ns",
            "range": "± 68.96856002628797"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 13150.110014597574,
            "unit": "ns",
            "range": "± 19.435423868223594"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8798.569408710186,
            "unit": "ns",
            "range": "± 48.92355253333379"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 145735.9096330915,
            "unit": "ns",
            "range": "± 604.7703275625464"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 17424.47799886068,
            "unit": "ns",
            "range": "± 103.99038267098656"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 15951.353111853967,
            "unit": "ns",
            "range": "± 32.37916546368802"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 137199.62745884486,
            "unit": "ns",
            "range": "± 991.6886114208761"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 42026.63852800642,
            "unit": "ns",
            "range": "± 223.24295516020504"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 106153.4882725307,
            "unit": "ns",
            "range": "± 213.08601601100324"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8527352.669642856,
            "unit": "ns",
            "range": "± 39235.488804523644"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 236792.4896972656,
            "unit": "ns",
            "range": "± 825.9781323148881"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 148986.25026041668,
            "unit": "ns",
            "range": "± 490.08855103563496"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 18339.78187561035,
            "unit": "ns",
            "range": "± 91.95401861261234"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16006.90405069987,
            "unit": "ns",
            "range": "± 79.39087015188186"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 138357.83422851562,
            "unit": "ns",
            "range": "± 850.4761852367307"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 41693.440763346356,
            "unit": "ns",
            "range": "± 139.4190367163979"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 105022.47659067008,
            "unit": "ns",
            "range": "± 83.74279046533552"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8515800.253348215,
            "unit": "ns",
            "range": "± 51593.59455416256"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 239928.3247233073,
            "unit": "ns",
            "range": "± 846.9661096535696"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655955880,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 10834.761957804361,
            "unit": "ns",
            "range": "± 131.93958661379529"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 11433.53831278483,
            "unit": "ns",
            "range": "± 49.121180455494"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 10932.585413614908,
            "unit": "ns",
            "range": "± 10.992599738633254"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 9171.275713094075,
            "unit": "ns",
            "range": "± 56.83798250308469"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9261.785616361178,
            "unit": "ns",
            "range": "± 19.920490582904947"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10191.225747244698,
            "unit": "ns",
            "range": "± 58.00023670562283"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 13208.577228800455,
            "unit": "ns",
            "range": "± 74.64230774193673"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8762.441328866142,
            "unit": "ns",
            "range": "± 32.54935011020001"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 147550.0844203404,
            "unit": "ns",
            "range": "± 559.6934774525371"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 16893.562287394205,
            "unit": "ns",
            "range": "± 133.41761855557564"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 16896.712291463216,
            "unit": "ns",
            "range": "± 118.6165298953071"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 138246.69667271205,
            "unit": "ns",
            "range": "± 895.2402922927101"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 44233.35490926107,
            "unit": "ns",
            "range": "± 167.4977363800022"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 105115.4498453776,
            "unit": "ns",
            "range": "± 467.4797239033211"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 8556819.83173077,
            "unit": "ns",
            "range": "± 47282.90486285398"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 239060.61254882812,
            "unit": "ns",
            "range": "± 646.8599020083404"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 142742.3149977464,
            "unit": "ns",
            "range": "± 404.37115039310004"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 18524.70522417341,
            "unit": "ns",
            "range": "± 93.74723983911103"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 16151.408384050641,
            "unit": "ns",
            "range": "± 49.071821436145754"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 137252.57853190103,
            "unit": "ns",
            "range": "± 88.14952448191926"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 44492.737588065014,
            "unit": "ns",
            "range": "± 117.43076511367356"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 104918.91895345053,
            "unit": "ns",
            "range": "± 355.19551785200713"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 8473780.405729167,
            "unit": "ns",
            "range": "± 45972.412347788384"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 241443.15032552084,
            "unit": "ns",
            "range": "± 709.0007473736687"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254584982,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,Limit)",
            "value": 144124.83166503906,
            "unit": "ns",
            "range": "± 901.3016653185457"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,Limit)",
            "value": 17613.38396402995,
            "unit": "ns",
            "range": "± 144.50743972122024"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,Limit)",
            "value": 16151.819506835938,
            "unit": "ns",
            "range": "± 135.44520242144455"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,Limit)",
            "value": 141197.66319861778,
            "unit": "ns",
            "range": "± 213.2248347797522"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,Limit)",
            "value": 42477.84272460938,
            "unit": "ns",
            "range": "± 233.61575026394138"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,Limit)",
            "value": 100879.87322998047,
            "unit": "ns",
            "range": "± 409.1859933490951"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,Limit)",
            "value": 10166165.110416668,
            "unit": "ns",
            "range": "± 182720.3008427122"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,Limit)",
            "value": 268620.85931152344,
            "unit": "ns",
            "range": "± 28262.154784684684"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,None)",
            "value": 144033.83405761718,
            "unit": "ns",
            "range": "± 810.2458569367047"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,None)",
            "value": 16856.50710550944,
            "unit": "ns",
            "range": "± 21.160274712740378"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,None)",
            "value": 17935.745239257812,
            "unit": "ns",
            "range": "± 127.78877955129425"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,None)",
            "value": 140344.95541616587,
            "unit": "ns",
            "range": "± 295.35586190672575"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,None)",
            "value": 42898.28012491862,
            "unit": "ns",
            "range": "± 109.6378829715006"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,None)",
            "value": 98481.1724609375,
            "unit": "ns",
            "range": "± 433.6753103421285"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,None)",
            "value": 10194948.453125,
            "unit": "ns",
            "range": "± 195925.89584862528"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,None)",
            "value": 277098.5531298828,
            "unit": "ns",
            "range": "± 28968.408064014937"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Native,None)",
            "value": 142575.4770345052,
            "unit": "ns",
            "range": "± 1076.9170268488149"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Native,None)",
            "value": 17001.262768085187,
            "unit": "ns",
            "range": "± 54.72399541971972"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Native,None)",
            "value": 16813.257643479566,
            "unit": "ns",
            "range": "± 14.09831662296242"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Native,None)",
            "value": 138726.17727864583,
            "unit": "ns",
            "range": "± 781.4310113564924"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Native,None)",
            "value": 44388.417989095055,
            "unit": "ns",
            "range": "± 232.24390909358567"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Native,None)",
            "value": 102698.43458775112,
            "unit": "ns",
            "range": "± 444.52953364294467"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Native,None)",
            "value": 8527206.16875,
            "unit": "ns",
            "range": "± 77295.70575606132"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Native,None)",
            "value": 224023.64894321986,
            "unit": "ns",
            "range": "± 547.0490761946944"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,Limit)",
            "value": 142461.2787522536,
            "unit": "ns",
            "range": "± 340.8006566402957"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,Limit)",
            "value": 16762.165409633093,
            "unit": "ns",
            "range": "± 13.818931817890723"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,Limit)",
            "value": 16856.578028752254,
            "unit": "ns",
            "range": "± 15.21803872024381"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,Limit)",
            "value": 139502.76398577009,
            "unit": "ns",
            "range": "± 357.0819969869784"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,Limit)",
            "value": 42144.952274867464,
            "unit": "ns",
            "range": "± 151.20732002001577"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,Limit)",
            "value": 99762.12349446614,
            "unit": "ns",
            "range": "± 185.05017796234546"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,Limit)",
            "value": 9351343.506770832,
            "unit": "ns",
            "range": "± 69999.16862311507"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,Limit)",
            "value": 248580.81969401042,
            "unit": "ns",
            "range": "± 879.7682244120798"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,None)",
            "value": 145029.5184407552,
            "unit": "ns",
            "range": "± 571.9854494833421"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,None)",
            "value": 16793.3072458903,
            "unit": "ns",
            "range": "± 67.68815042945506"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,None)",
            "value": 16749.705960591633,
            "unit": "ns",
            "range": "± 15.445573542361313"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,None)",
            "value": 140320.1737060547,
            "unit": "ns",
            "range": "± 730.2533009530363"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,None)",
            "value": 42789.46886393229,
            "unit": "ns",
            "range": "± 90.54146819137772"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,None)",
            "value": 94940.11059977213,
            "unit": "ns",
            "range": "± 190.98889979889182"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,None)",
            "value": 9248652.353794644,
            "unit": "ns",
            "range": "± 54396.5542012162"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,None)",
            "value": 251578.41674804688,
            "unit": "ns",
            "range": "± 240.84041214708907"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737789230297,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,Limit)",
            "value": 147214.97412109375,
            "unit": "ns",
            "range": "± 807.8944173922049"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,Limit)",
            "value": 18121.278623453774,
            "unit": "ns",
            "range": "± 192.7108184523008"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,Limit)",
            "value": 17549.66937866211,
            "unit": "ns",
            "range": "± 115.6526658030357"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,Limit)",
            "value": 144035.53506234975,
            "unit": "ns",
            "range": "± 241.69436368167217"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,Limit)",
            "value": 42944.92836652483,
            "unit": "ns",
            "range": "± 92.33241731568377"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,Limit)",
            "value": 102859.52996419271,
            "unit": "ns",
            "range": "± 396.27878733098464"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,Limit)",
            "value": 10111013.396875,
            "unit": "ns",
            "range": "± 178216.5199707883"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,Limit)",
            "value": 273149.87473632814,
            "unit": "ns",
            "range": "± 26110.213382283477"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,None)",
            "value": 145876.5611290565,
            "unit": "ns",
            "range": "± 352.69084255510234"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,None)",
            "value": 18455.892756144207,
            "unit": "ns",
            "range": "± 37.18767281717535"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,None)",
            "value": 17387.42428894043,
            "unit": "ns",
            "range": "± 121.35618696396597"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,None)",
            "value": 143072.55189732142,
            "unit": "ns",
            "range": "± 532.1407586022864"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,None)",
            "value": 44308.427854097805,
            "unit": "ns",
            "range": "± 56.76164105537161"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,None)",
            "value": 101208.80770263672,
            "unit": "ns",
            "range": "± 353.08397950739567"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,None)",
            "value": 10066507.68125,
            "unit": "ns",
            "range": "± 174798.30657230626"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,None)",
            "value": 274529.6446289063,
            "unit": "ns",
            "range": "± 28364.26411059779"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Native,None)",
            "value": 144955.57717285157,
            "unit": "ns",
            "range": "± 1107.099200053631"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Native,None)",
            "value": 18222.206640625,
            "unit": "ns",
            "range": "± 88.43857629628279"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Native,None)",
            "value": 17213.18283335368,
            "unit": "ns",
            "range": "± 28.793063544200205"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Native,None)",
            "value": 140518.44876802884,
            "unit": "ns",
            "range": "± 484.9487190985236"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Native,None)",
            "value": 44322.051696777344,
            "unit": "ns",
            "range": "± 56.937135475719415"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Native,None)",
            "value": 98731.82272573617,
            "unit": "ns",
            "range": "± 178.912484689838"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Native,None)",
            "value": 8393562.060416667,
            "unit": "ns",
            "range": "± 55162.15651954566"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Native,None)",
            "value": 226014.44213867188,
            "unit": "ns",
            "range": "± 542.1649989349795"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,Limit)",
            "value": 146267.77657063803,
            "unit": "ns",
            "range": "± 284.38519949078506"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,Limit)",
            "value": 18149.820252482095,
            "unit": "ns",
            "range": "± 53.98660361686465"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,Limit)",
            "value": 17295.498908409707,
            "unit": "ns",
            "range": "± 41.98300467620578"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,Limit)",
            "value": 140664.5981794085,
            "unit": "ns",
            "range": "± 423.3541192948298"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,Limit)",
            "value": 44037.24826049805,
            "unit": "ns",
            "range": "± 28.667739458926977"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,Limit)",
            "value": 102321.30380684989,
            "unit": "ns",
            "range": "± 206.42504869477477"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,Limit)",
            "value": 9125893.660416666,
            "unit": "ns",
            "range": "± 52224.90959930422"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,Limit)",
            "value": 250219.46790364583,
            "unit": "ns",
            "range": "± 1303.881793718024"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,None)",
            "value": 145332.77912248884,
            "unit": "ns",
            "range": "± 442.5865869068303"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,None)",
            "value": 18023.186317952473,
            "unit": "ns",
            "range": "± 80.78587808031178"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,None)",
            "value": 17201.80207316081,
            "unit": "ns",
            "range": "± 67.82540404040596"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,None)",
            "value": 141062.93432617188,
            "unit": "ns",
            "range": "± 195.335503832534"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,None)",
            "value": 44472.02051720252,
            "unit": "ns",
            "range": "± 32.85674872144524"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,None)",
            "value": 101715.48027692523,
            "unit": "ns",
            "range": "± 278.7656487082082"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,None)",
            "value": 9250240.095833333,
            "unit": "ns",
            "range": "± 45497.04854650585"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,None)",
            "value": 248910.6939174107,
            "unit": "ns",
            "range": "± 890.2635951695299"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738051041871,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,Limit)",
            "value": 145266.6548014323,
            "unit": "ns",
            "range": "± 975.5601676091931"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,Limit)",
            "value": 18323.584401057316,
            "unit": "ns",
            "range": "± 22.089835377837765"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,Limit)",
            "value": 17369.766047159832,
            "unit": "ns",
            "range": "± 40.228307822293814"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,Limit)",
            "value": 140446.91977163462,
            "unit": "ns",
            "range": "± 237.46501111246602"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,Limit)",
            "value": 44883.88845418294,
            "unit": "ns",
            "range": "± 173.13189669093558"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,Limit)",
            "value": 102217.62775530134,
            "unit": "ns",
            "range": "± 536.3529368901957"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,Limit)",
            "value": 10110818.077083332,
            "unit": "ns",
            "range": "± 171386.79694524984"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,Limit)",
            "value": 268550.1512402344,
            "unit": "ns",
            "range": "± 25737.08571054861"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,None)",
            "value": 146185.49216871994,
            "unit": "ns",
            "range": "± 422.31694577503544"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,None)",
            "value": 19048.781653771035,
            "unit": "ns",
            "range": "± 30.284058473784267"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,None)",
            "value": 17531.939318847657,
            "unit": "ns",
            "range": "± 115.33731432283454"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,None)",
            "value": 139768.18141392298,
            "unit": "ns",
            "range": "± 396.80082909569273"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,None)",
            "value": 45496.3421895345,
            "unit": "ns",
            "range": "± 221.57240026995046"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,None)",
            "value": 101191.22252546038,
            "unit": "ns",
            "range": "± 294.0951338201831"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,None)",
            "value": 10138702.545833332,
            "unit": "ns",
            "range": "± 173582.51684460518"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,None)",
            "value": 275174.2480810547,
            "unit": "ns",
            "range": "± 25723.55906675325"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Native,None)",
            "value": 144077.17486979166,
            "unit": "ns",
            "range": "± 1059.4671184106705"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Native,None)",
            "value": 18362.456442025992,
            "unit": "ns",
            "range": "± 81.3352961244262"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Native,None)",
            "value": 17486.464494977678,
            "unit": "ns",
            "range": "± 97.2298876907605"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Native,None)",
            "value": 138408.5872708834,
            "unit": "ns",
            "range": "± 369.55932357271"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Native,None)",
            "value": 47088.71918945313,
            "unit": "ns",
            "range": "± 143.69013244327334"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Native,None)",
            "value": 99862.10887044271,
            "unit": "ns",
            "range": "± 287.02128880303934"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Native,None)",
            "value": 8420967.438020833,
            "unit": "ns",
            "range": "± 55426.369561963926"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Native,None)",
            "value": 226034.25304236778,
            "unit": "ns",
            "range": "± 228.80141557589707"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,Limit)",
            "value": 146411.53979492188,
            "unit": "ns",
            "range": "± 292.09020178218293"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,Limit)",
            "value": 18116.298665364582,
            "unit": "ns",
            "range": "± 60.2263027820375"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,Limit)",
            "value": 17821.36440531413,
            "unit": "ns",
            "range": "± 80.84210750539995"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,Limit)",
            "value": 140970.6671875,
            "unit": "ns",
            "range": "± 691.8473411911614"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,Limit)",
            "value": 44022.471252441406,
            "unit": "ns",
            "range": "± 157.1377758722711"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,Limit)",
            "value": 100708.00424630301,
            "unit": "ns",
            "range": "± 270.8910739622984"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,Limit)",
            "value": 9328869.353645833,
            "unit": "ns",
            "range": "± 37030.62468382522"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,Limit)",
            "value": 250305.37901893028,
            "unit": "ns",
            "range": "± 781.4847299783195"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,None)",
            "value": 145840.68881835937,
            "unit": "ns",
            "range": "± 617.9781320955246"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,None)",
            "value": 18454.336395263672,
            "unit": "ns",
            "range": "± 21.194278774500052"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,None)",
            "value": 17826.008202185996,
            "unit": "ns",
            "range": "± 28.86529792466951"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,None)",
            "value": 140916.29052734375,
            "unit": "ns",
            "range": "± 183.07175400458195"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,None)",
            "value": 44323.36556396484,
            "unit": "ns",
            "range": "± 95.97714106468044"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,None)",
            "value": 100349.43746744792,
            "unit": "ns",
            "range": "± 231.63785358815548"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,None)",
            "value": 9391363.245535715,
            "unit": "ns",
            "range": "± 38512.19764322781"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,None)",
            "value": 249520.4965169271,
            "unit": "ns",
            "range": "± 1022.5764261625562"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369463715,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,Limit)",
            "value": 145813.90607096354,
            "unit": "ns",
            "range": "± 1229.2096488575205"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,Limit)",
            "value": 18526.395562308175,
            "unit": "ns",
            "range": "± 35.20462547243518"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,Limit)",
            "value": 17451.776336669922,
            "unit": "ns",
            "range": "± 17.300680110948818"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,Limit)",
            "value": 144214.08318684896,
            "unit": "ns",
            "range": "± 1197.7484299952298"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,Limit)",
            "value": 46061.28433227539,
            "unit": "ns",
            "range": "± 108.0267792480979"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,Limit)",
            "value": 107376.55853271484,
            "unit": "ns",
            "range": "± 520.5317812898102"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,Limit)",
            "value": 10255522.482536765,
            "unit": "ns",
            "range": "± 206041.6429120499"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,Limit)",
            "value": 276422.00699707033,
            "unit": "ns",
            "range": "± 28526.202557906166"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,None)",
            "value": 145914.87959798178,
            "unit": "ns",
            "range": "± 1252.0289984422961"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,None)",
            "value": 18618.251839192708,
            "unit": "ns",
            "range": "± 133.4493318726954"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,None)",
            "value": 17853.12046813965,
            "unit": "ns",
            "range": "± 25.027688776826324"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,None)",
            "value": 143911.0249674479,
            "unit": "ns",
            "range": "± 1022.8250270420465"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,None)",
            "value": 45318.165193684894,
            "unit": "ns",
            "range": "± 258.8515084246814"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,None)",
            "value": 107190.77630208334,
            "unit": "ns",
            "range": "± 643.886588217519"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,None)",
            "value": 10331463.614889706,
            "unit": "ns",
            "range": "± 206209.4583873037"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,None)",
            "value": 277606.14817871095,
            "unit": "ns",
            "range": "± 28240.16223401251"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Native,None)",
            "value": 145960.97748272234,
            "unit": "ns",
            "range": "± 430.14158766372907"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Native,None)",
            "value": 18667.86035664876,
            "unit": "ns",
            "range": "± 30.15453192757848"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Native,None)",
            "value": 17545.02119093675,
            "unit": "ns",
            "range": "± 22.72026617668465"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Native,None)",
            "value": 141795.88500976562,
            "unit": "ns",
            "range": "± 197.5372801547524"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Native,None)",
            "value": 45337.928842397836,
            "unit": "ns",
            "range": "± 86.80444659377008"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Native,None)",
            "value": 103291.75559488933,
            "unit": "ns",
            "range": "± 428.88943148480615"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Native,None)",
            "value": 8548491.4546875,
            "unit": "ns",
            "range": "± 38202.37892649368"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Native,None)",
            "value": 228401.2555401142,
            "unit": "ns",
            "range": "± 621.6016828585845"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,Limit)",
            "value": 143440.55395507812,
            "unit": "ns",
            "range": "± 465.6199758222868"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,Limit)",
            "value": 18818.37022603353,
            "unit": "ns",
            "range": "± 96.13078249563088"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,Limit)",
            "value": 17372.912333170574,
            "unit": "ns",
            "range": "± 16.673046789812293"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,Limit)",
            "value": 143114.78522135416,
            "unit": "ns",
            "range": "± 661.6701415519709"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,Limit)",
            "value": 44774.69186197917,
            "unit": "ns",
            "range": "± 146.92245943110623"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,Limit)",
            "value": 103116.98865618024,
            "unit": "ns",
            "range": "± 291.4331032719672"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,Limit)",
            "value": 9465676.681919644,
            "unit": "ns",
            "range": "± 54934.87815049265"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,Limit)",
            "value": 253263.91516927083,
            "unit": "ns",
            "range": "± 1020.5153996136365"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,None)",
            "value": 150458.6876220703,
            "unit": "ns",
            "range": "± 721.274404949178"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,None)",
            "value": 18490.720510629508,
            "unit": "ns",
            "range": "± 17.348936289669304"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,None)",
            "value": 17611.418914794922,
            "unit": "ns",
            "range": "± 116.97412638554898"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,None)",
            "value": 142789.8180826823,
            "unit": "ns",
            "range": "± 488.68741974854163"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,None)",
            "value": 43997.116678873695,
            "unit": "ns",
            "range": "± 27.99173624135037"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,None)",
            "value": 103911.57788085938,
            "unit": "ns",
            "range": "± 311.11996144618445"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,None)",
            "value": 9596377.608333332,
            "unit": "ns",
            "range": "± 96399.71101843256"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,None)",
            "value": 252586.54684244792,
            "unit": "ns",
            "range": "± 1161.1542165211665"
          }
        ]
      }
    ],
    "Operations.ScriptOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132506791,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 14962.163543701172,
            "unit": "ns",
            "range": "± 20.865464506445914"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17004.867045084637,
            "unit": "ns",
            "range": "± 9.020929582278443"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 16922.799428304035,
            "unit": "ns",
            "range": "± 12.72076179754839"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 7609.786605834961,
            "unit": "ns",
            "range": "± 8.559674711351132"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 8713.236127580914,
            "unit": "ns",
            "range": "± 11.413996569231339"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 80612.78849283855,
            "unit": "ns",
            "range": "± 351.25903098291565"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 28096.456146240234,
            "unit": "ns",
            "range": "± 23.59048171680894"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 26186.29368373326,
            "unit": "ns",
            "range": "± 43.39186191610288"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 90038.7479654948,
            "unit": "ns",
            "range": "± 289.50970890614934"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 43432.80334472656,
            "unit": "ns",
            "range": "± 83.1304316565591"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 79794.52863420759,
            "unit": "ns",
            "range": "± 162.6400550997845"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 28677.786690848214,
            "unit": "ns",
            "range": "± 24.843006832496876"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 26012.32640193059,
            "unit": "ns",
            "range": "± 12.902700154558469"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 91026.44566127232,
            "unit": "ns",
            "range": "± 434.4659237116468"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 47447.80927385603,
            "unit": "ns",
            "range": "± 149.65611813288575"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734134136857,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 14983.118262657752,
            "unit": "ns",
            "range": "± 30.113016760661832"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 19103.44955444336,
            "unit": "ns",
            "range": "± 667.473164201069"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17466.821758563703,
            "unit": "ns",
            "range": "± 10.094360294341337"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 7595.259475708008,
            "unit": "ns",
            "range": "± 10.682568345162803"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 8755.695016043526,
            "unit": "ns",
            "range": "± 16.81453438018015"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 81492.62044270833,
            "unit": "ns",
            "range": "± 184.0483162917246"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 28504.79014078776,
            "unit": "ns",
            "range": "± 35.99624197517166"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 26025.238444010418,
            "unit": "ns",
            "range": "± 33.689570917300856"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 87733.25631277902,
            "unit": "ns",
            "range": "± 259.79762569612996"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 43570.51565987723,
            "unit": "ns",
            "range": "± 75.30738570858323"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 81120.15474759616,
            "unit": "ns",
            "range": "± 121.17796148454485"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 28627.978163499098,
            "unit": "ns",
            "range": "± 25.667893863624396"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 26030.28302873884,
            "unit": "ns",
            "range": "± 12.225677077029156"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 91532.38199869792,
            "unit": "ns",
            "range": "± 503.8857274711647"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 43735.65804617746,
            "unit": "ns",
            "range": "± 120.664980646142"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377427250,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 14866.491190592447,
            "unit": "ns",
            "range": "± 45.975383058772834"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17376.28913292518,
            "unit": "ns",
            "range": "± 8.736196261877238"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17239.56553141276,
            "unit": "ns",
            "range": "± 24.120247691642803"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 7670.127054850261,
            "unit": "ns",
            "range": "± 24.378069821814815"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 8850.31988961356,
            "unit": "ns",
            "range": "± 8.104573948321224"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 80556.15670340402,
            "unit": "ns",
            "range": "± 184.45561855995356"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 28375.38888113839,
            "unit": "ns",
            "range": "± 35.63600053623655"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 26237.288716634113,
            "unit": "ns",
            "range": "± 37.902057069669546"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 89937.80314127605,
            "unit": "ns",
            "range": "± 384.85633247474215"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 43874.14489746094,
            "unit": "ns",
            "range": "± 87.18507230594794"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 81589.84723772321,
            "unit": "ns",
            "range": "± 90.92266230808198"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 28695.375882662258,
            "unit": "ns",
            "range": "± 18.6546886408914"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 25944.760131835938,
            "unit": "ns",
            "range": "± 10.753499366961481"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 90699.39226422991,
            "unit": "ns",
            "range": "± 419.07433403752685"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 43443.70683942522,
            "unit": "ns",
            "range": "± 82.92761106680065"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734392919683,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15018.622471736027,
            "unit": "ns",
            "range": "± 16.142910071278767"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17780.468045748195,
            "unit": "ns",
            "range": "± 28.910896859793638"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 18157.061971028645,
            "unit": "ns",
            "range": "± 75.43830307642236"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 7916.733805338542,
            "unit": "ns",
            "range": "± 9.902811811281365"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9023.173086983817,
            "unit": "ns",
            "range": "± 20.007691930099558"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 80980.88419596355,
            "unit": "ns",
            "range": "± 190.01650862586337"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 28176.50324503581,
            "unit": "ns",
            "range": "± 25.286509667514142"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 33248.65976969401,
            "unit": "ns",
            "range": "± 30.276623761841314"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 90227.82674153645,
            "unit": "ns",
            "range": "± 295.5534890049679"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 44157.44105747768,
            "unit": "ns",
            "range": "± 134.4878911795512"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 80477.001953125,
            "unit": "ns",
            "range": "± 114.41307755976779"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 28268.852820763223,
            "unit": "ns",
            "range": "± 13.490811844070127"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 26284.569021371695,
            "unit": "ns",
            "range": "± 13.889638064840096"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 86989.04767717634,
            "unit": "ns",
            "range": "± 233.56473355490257"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 45413.61389160156,
            "unit": "ns",
            "range": "± 55.868236021219694"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734483855720,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15547.916353665865,
            "unit": "ns",
            "range": "± 17.46088406436958"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17576.82118733724,
            "unit": "ns",
            "range": "± 19.926458335972104"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17427.57797241211,
            "unit": "ns",
            "range": "± 26.82642547299325"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8039.764404296875,
            "unit": "ns",
            "range": "± 16.12274364477239"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 10139.377797444662,
            "unit": "ns",
            "range": "± 16.98226529270167"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 79850.87105887277,
            "unit": "ns",
            "range": "± 185.88346047778973"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 28588.233511788505,
            "unit": "ns",
            "range": "± 22.23733526961657"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 26535.66716512044,
            "unit": "ns",
            "range": "± 14.911883129187798"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 89658.8985188802,
            "unit": "ns",
            "range": "± 755.9609028739861"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 44466.50789701022,
            "unit": "ns",
            "range": "± 46.489707913757776"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 79987.58370535714,
            "unit": "ns",
            "range": "± 189.13092074548695"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 28521.004486083984,
            "unit": "ns",
            "range": "± 43.5613449272151"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 27014.74110921224,
            "unit": "ns",
            "range": "± 22.94265435396845"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 89000.70434570312,
            "unit": "ns",
            "range": "± 371.9656870105087"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 45243.52600097656,
            "unit": "ns",
            "range": "± 131.20080353077088"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559956795,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 16254.865214029947,
            "unit": "ns",
            "range": "± 34.39283878549113"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17398.87433733259,
            "unit": "ns",
            "range": "± 15.747528097139265"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17727.0659383138,
            "unit": "ns",
            "range": "± 20.720137525712783"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8013.3961017315205,
            "unit": "ns",
            "range": "± 15.365688347132995"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9562.396676199776,
            "unit": "ns",
            "range": "± 19.229672556830927"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 9922.11641584124,
            "unit": "ns",
            "range": "± 13.268142936229639"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11816.876631516676,
            "unit": "ns",
            "range": "± 11.689062315722872"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8003.546142578125,
            "unit": "ns",
            "range": "± 18.84634015772484"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 90790.8378092448,
            "unit": "ns",
            "range": "± 526.0084067297104"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23881.09344482422,
            "unit": "ns",
            "range": "± 24.642213960239786"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22630.97098214286,
            "unit": "ns",
            "range": "± 15.781737649899977"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 70668.16493443081,
            "unit": "ns",
            "range": "± 100.85517131560904"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 28954.899379185266,
            "unit": "ns",
            "range": "± 40.065861204192906"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 64957.841796875,
            "unit": "ns",
            "range": "± 85.22069010228991"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4448499.832589285,
            "unit": "ns",
            "range": "± 17881.595565768323"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 134290.20385742188,
            "unit": "ns",
            "range": "± 174.63182359731164"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 90987.84092494419,
            "unit": "ns",
            "range": "± 285.775643186894"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23439.686467097355,
            "unit": "ns",
            "range": "± 13.102382059497469"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22698.803304036457,
            "unit": "ns",
            "range": "± 14.599845849078458"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 69464.60309709821,
            "unit": "ns",
            "range": "± 119.61916863145552"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 28260.645446777344,
            "unit": "ns",
            "range": "± 71.43906042053423"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 64338.33536783854,
            "unit": "ns",
            "range": "± 90.13500680986834"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4391530.803571428,
            "unit": "ns",
            "range": "± 17513.538434059643"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 129335.7892717634,
            "unit": "ns",
            "range": "± 190.78998298253325"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734579141052,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15434.862845284599,
            "unit": "ns",
            "range": "± 11.744028520947777"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17631.35508219401,
            "unit": "ns",
            "range": "± 17.651978405335374"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 18211.25662667411,
            "unit": "ns",
            "range": "± 49.976744363161224"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 7992.254529680525,
            "unit": "ns",
            "range": "± 14.838147791974214"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9387.203826904297,
            "unit": "ns",
            "range": "± 9.748172488496364"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10028.439331054688,
            "unit": "ns",
            "range": "± 18.47049604461347"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11569.954035832332,
            "unit": "ns",
            "range": "± 36.79526893626"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8006.871795654297,
            "unit": "ns",
            "range": "± 12.395660355702617"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 89586.37817382812,
            "unit": "ns",
            "range": "± 131.7541170726901"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23828.353881835938,
            "unit": "ns",
            "range": "± 37.78992096895171"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22748.081461588543,
            "unit": "ns",
            "range": "± 19.679260574784635"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 72738.73616536458,
            "unit": "ns",
            "range": "± 88.97173930529132"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 28751.219584147137,
            "unit": "ns",
            "range": "± 65.27963780875311"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 64605.18537248884,
            "unit": "ns",
            "range": "± 220.20339082027783"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4551815.442708333,
            "unit": "ns",
            "range": "± 33547.929984714414"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 129873.35611979167,
            "unit": "ns",
            "range": "± 129.34578991209378"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 91511.142578125,
            "unit": "ns",
            "range": "± 193.33016047987527"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23844.99989827474,
            "unit": "ns",
            "range": "± 18.69513192747278"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22735.26869553786,
            "unit": "ns",
            "range": "± 26.223408905915907"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 71489.48739858773,
            "unit": "ns",
            "range": "± 115.11732626590614"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29682.694244384766,
            "unit": "ns",
            "range": "± 52.063780082057036"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 62898.582356770836,
            "unit": "ns",
            "range": "± 99.0927393655319"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4476599.519230769,
            "unit": "ns",
            "range": "± 6736.944746218181"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 128705.33796037946,
            "unit": "ns",
            "range": "± 160.50508362736633"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734596345284,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15451.130930582682,
            "unit": "ns",
            "range": "± 9.739055161057037"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 18248.27340932993,
            "unit": "ns",
            "range": "± 46.820913478903016"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 18241.914585658484,
            "unit": "ns",
            "range": "± 44.6946311620952"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8124.270426432292,
            "unit": "ns",
            "range": "± 9.365108763946607"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9404.99790736607,
            "unit": "ns",
            "range": "± 20.875998727998336"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10123.2303912823,
            "unit": "ns",
            "range": "± 36.84946145463853"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11813.175855364118,
            "unit": "ns",
            "range": "± 13.305608086536038"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8138.205973307292,
            "unit": "ns",
            "range": "± 10.50536790254473"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 91069.37825520833,
            "unit": "ns",
            "range": "± 181.825001912495"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23506.74373081752,
            "unit": "ns",
            "range": "± 11.906640420278386"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22822.069222586495,
            "unit": "ns",
            "range": "± 20.923353914782314"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 74603.21916852679,
            "unit": "ns",
            "range": "± 206.13856558822948"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 29373.258737417367,
            "unit": "ns",
            "range": "± 69.19142594708882"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 64033.0517578125,
            "unit": "ns",
            "range": "± 123.78470572023089"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4567759.869791667,
            "unit": "ns",
            "range": "± 18054.16481234296"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 127700.67232572116,
            "unit": "ns",
            "range": "± 123.25986628192784"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 90676.88313802083,
            "unit": "ns",
            "range": "± 230.1694107615291"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23744.39219156901,
            "unit": "ns",
            "range": "± 27.143336663403836"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 23024.070957728796,
            "unit": "ns",
            "range": "± 28.941663224582904"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 71702.95061383929,
            "unit": "ns",
            "range": "± 149.52451812267637"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29602.185465494793,
            "unit": "ns",
            "range": "± 59.288621855151995"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 64570.481654575895,
            "unit": "ns",
            "range": "± 117.12921990577499"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4495393.149038462,
            "unit": "ns",
            "range": "± 3928.8256897759584"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 126828.70342548077,
            "unit": "ns",
            "range": "± 340.3011238128875"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643768634,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15407.52422626202,
            "unit": "ns",
            "range": "± 18.922920472393567"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17477.347564697266,
            "unit": "ns",
            "range": "± 7.754654020067868"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 18367.529551188152,
            "unit": "ns",
            "range": "± 119.55680997783506"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8102.077157156808,
            "unit": "ns",
            "range": "± 15.418888134752141"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9388.88450035682,
            "unit": "ns",
            "range": "± 14.945739163105443"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10104.45829119001,
            "unit": "ns",
            "range": "± 20.47438661701892"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 12028.805847167969,
            "unit": "ns",
            "range": "± 38.94853103712562"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8084.800611223493,
            "unit": "ns",
            "range": "± 5.005242492758806"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 89668.79225510817,
            "unit": "ns",
            "range": "± 104.67415537347541"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23505.756051199776,
            "unit": "ns",
            "range": "± 15.881470155856102"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22895.68587083083,
            "unit": "ns",
            "range": "± 31.562039764350686"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 75012.66130719866,
            "unit": "ns",
            "range": "± 150.31546914091496"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 29772.305501302082,
            "unit": "ns",
            "range": "± 47.320392829514155"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 62293.50280761719,
            "unit": "ns",
            "range": "± 67.888306380505"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4480178.203125,
            "unit": "ns",
            "range": "± 32263.69619905111"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 135465.3165690104,
            "unit": "ns",
            "range": "± 146.0538580517998"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 92519.57135881696,
            "unit": "ns",
            "range": "± 170.76425956257523"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23942.625223795574,
            "unit": "ns",
            "range": "± 25.123895069308517"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22916.751568134016,
            "unit": "ns",
            "range": "± 18.00247000242649"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 71504.76684570312,
            "unit": "ns",
            "range": "± 107.21480346201567"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29151.39421735491,
            "unit": "ns",
            "range": "± 105.60348655856893"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 63086.50861467634,
            "unit": "ns",
            "range": "± 74.26150463916613"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4341250.060096154,
            "unit": "ns",
            "range": "± 7337.334676126556"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 131709.21630859375,
            "unit": "ns",
            "range": "± 314.6352134846969"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734648066509,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15498.65003313337,
            "unit": "ns",
            "range": "± 14.324736754409662"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 19047.542043832633,
            "unit": "ns",
            "range": "± 33.098674775211116"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 18189.629923502605,
            "unit": "ns",
            "range": "± 36.20437848348394"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8086.069052559988,
            "unit": "ns",
            "range": "± 6.255383775503757"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9306.995936802456,
            "unit": "ns",
            "range": "± 15.301183273541438"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10014.552198137555,
            "unit": "ns",
            "range": "± 16.605060570415937"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11630.00253530649,
            "unit": "ns",
            "range": "± 14.778148808214759"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8169.17964390346,
            "unit": "ns",
            "range": "± 8.312120427100458"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 94575.82275390625,
            "unit": "ns",
            "range": "± 94.8649606174862"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23506.166076660156,
            "unit": "ns",
            "range": "± 25.792998211238192"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22832.19463641827,
            "unit": "ns",
            "range": "± 12.761171369838724"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 71965.61116536458,
            "unit": "ns",
            "range": "± 64.47202328922786"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 30089.7856648763,
            "unit": "ns",
            "range": "± 109.53962436194895"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 63706.45403180803,
            "unit": "ns",
            "range": "± 118.55395312171332"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4515971.432291667,
            "unit": "ns",
            "range": "± 37767.771869373944"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 126173.64420572917,
            "unit": "ns",
            "range": "± 192.6031402874529"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 95267.44303385417,
            "unit": "ns",
            "range": "± 258.8271549071737"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23696.289934430803,
            "unit": "ns",
            "range": "± 18.528593666246927"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22918.456013997395,
            "unit": "ns",
            "range": "± 14.333915363042397"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 70275.83902994792,
            "unit": "ns",
            "range": "± 71.8359807922917"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 28701.904296875,
            "unit": "ns",
            "range": "± 30.191418952581962"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 64926.507568359375,
            "unit": "ns",
            "range": "± 45.67709791541036"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4404312.920673077,
            "unit": "ns",
            "range": "± 7391.083478881792"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 129544.94303385417,
            "unit": "ns",
            "range": "± 170.65353293384"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652843479,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15613.207571847099,
            "unit": "ns",
            "range": "± 56.736021147831906"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17514.810180664062,
            "unit": "ns",
            "range": "± 16.668969317972916"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17616.160583496094,
            "unit": "ns",
            "range": "± 19.03736300978024"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8031.3288007463725,
            "unit": "ns",
            "range": "± 11.738867698322515"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9446.627514178936,
            "unit": "ns",
            "range": "± 14.488532128569583"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10185.812612680289,
            "unit": "ns",
            "range": "± 11.409908441160816"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11672.067260742188,
            "unit": "ns",
            "range": "± 13.936261415708168"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8056.549944196428,
            "unit": "ns",
            "range": "± 10.323745180377996"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 91011.78487141927,
            "unit": "ns",
            "range": "± 215.44489321243844"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23479.925101143974,
            "unit": "ns",
            "range": "± 22.588642927543027"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22669.943237304688,
            "unit": "ns",
            "range": "± 18.51032726534233"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 71717.3974609375,
            "unit": "ns",
            "range": "± 161.0051505746649"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 29451.87268938337,
            "unit": "ns",
            "range": "± 50.75894836111788"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 64288.70896559495,
            "unit": "ns",
            "range": "± 40.2862672863061"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4497413.616071428,
            "unit": "ns",
            "range": "± 19449.39320842287"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 129371.47623697917,
            "unit": "ns",
            "range": "± 62.900780048726176"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 91616.97562081473,
            "unit": "ns",
            "range": "± 183.4392484766762"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23798.70125906808,
            "unit": "ns",
            "range": "± 15.334069597527176"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 23453.682381766183,
            "unit": "ns",
            "range": "± 21.412599011913628"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 72200.98970853366,
            "unit": "ns",
            "range": "± 205.2359659891486"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29320.520673479354,
            "unit": "ns",
            "range": "± 39.94390757902877"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 63813.767787388395,
            "unit": "ns",
            "range": "± 93.9939013445838"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4480492.518028846,
            "unit": "ns",
            "range": "± 7490.2001775725375"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 129860.21891276042,
            "unit": "ns",
            "range": "± 221.22760024815477"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747473936,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15594.48002406529,
            "unit": "ns",
            "range": "± 22.00317231180444"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17766.7240687779,
            "unit": "ns",
            "range": "± 19.41851681920138"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17490.661403111048,
            "unit": "ns",
            "range": "± 11.714784655205923"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8151.270839146206,
            "unit": "ns",
            "range": "± 10.145119233399443"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9372.015925816127,
            "unit": "ns",
            "range": "± 15.911056796601201"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10193.189036051432,
            "unit": "ns",
            "range": "± 15.126257875198291"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11789.336512638973,
            "unit": "ns",
            "range": "± 18.957713903178"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8059.539947509766,
            "unit": "ns",
            "range": "± 11.554752172948467"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 90464.42354642428,
            "unit": "ns",
            "range": "± 185.41822694862694"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 30606.40387901893,
            "unit": "ns",
            "range": "± 20.944423136685398"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 23157.164408365887,
            "unit": "ns",
            "range": "± 11.990493695770958"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 72438.7189592634,
            "unit": "ns",
            "range": "± 86.31520991037848"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 29170.28096516927,
            "unit": "ns",
            "range": "± 71.01046515185121"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 62959.90774972098,
            "unit": "ns",
            "range": "± 80.88775111446667"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4435038.4375,
            "unit": "ns",
            "range": "± 30822.024619461936"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 128688.88690655048,
            "unit": "ns",
            "range": "± 183.13682250673529"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 92336.71956380208,
            "unit": "ns",
            "range": "± 727.2386698083001"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23552.735314002402,
            "unit": "ns",
            "range": "± 37.132650830361634"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22671.594707782453,
            "unit": "ns",
            "range": "± 10.957573301429623"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 73195.02389090402,
            "unit": "ns",
            "range": "± 58.813434632294104"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29840.745544433594,
            "unit": "ns",
            "range": "± 43.81535112817741"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 64564.58391462053,
            "unit": "ns",
            "range": "± 168.94789775117547"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4420462.760416667,
            "unit": "ns",
            "range": "± 8627.01700092314"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 130442.97250600961,
            "unit": "ns",
            "range": "± 204.40403741883932"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734907107208,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15666.453770228794,
            "unit": "ns",
            "range": "± 20.807920647080454"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17634.43345289964,
            "unit": "ns",
            "range": "± 16.0038964644067"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17456.002589634485,
            "unit": "ns",
            "range": "± 15.494985848308056"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8107.9931640625,
            "unit": "ns",
            "range": "± 13.493635238289157"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9391.249629429409,
            "unit": "ns",
            "range": "± 16.0895308230143"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10120.336260114398,
            "unit": "ns",
            "range": "± 21.448073742075227"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11668.607766287667,
            "unit": "ns",
            "range": "± 16.060591845586544"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8033.726755777995,
            "unit": "ns",
            "range": "± 12.00726151240807"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 91653.65513392857,
            "unit": "ns",
            "range": "± 319.23037304824294"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23582.772709773137,
            "unit": "ns",
            "range": "± 46.91416641636269"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 23296.831839425224,
            "unit": "ns",
            "range": "± 24.327786806611893"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 71767.69124348958,
            "unit": "ns",
            "range": "± 94.11103139783314"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 29604.834899902344,
            "unit": "ns",
            "range": "± 83.9955001667297"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 61534.95396205357,
            "unit": "ns",
            "range": "± 171.75103416783196"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4432627.552083333,
            "unit": "ns",
            "range": "± 23841.581533072418"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 128489.6955217634,
            "unit": "ns",
            "range": "± 155.5198911093142"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 90649.54142252605,
            "unit": "ns",
            "range": "± 368.5979488513044"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23639.212908063615,
            "unit": "ns",
            "range": "± 30.950134015763755"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22991.6606648763,
            "unit": "ns",
            "range": "± 17.376108004276965"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 71742.10815429688,
            "unit": "ns",
            "range": "± 164.24675894418544"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29756.975911458332,
            "unit": "ns",
            "range": "± 47.40214243591685"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 65013.038853236605,
            "unit": "ns",
            "range": "± 94.85840081764931"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4409418.020833333,
            "unit": "ns",
            "range": "± 15949.552281757433"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 131174.76055438703,
            "unit": "ns",
            "range": "± 113.12236710140675"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407935606,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15461.66251046317,
            "unit": "ns",
            "range": "± 16.414323087870923"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17633.766610281808,
            "unit": "ns",
            "range": "± 11.34488265549233"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17863.81607055664,
            "unit": "ns",
            "range": "± 11.639288211441293"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8065.126146589007,
            "unit": "ns",
            "range": "± 8.347382029902214"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9445.88372366769,
            "unit": "ns",
            "range": "± 11.19391400537223"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10611.774342854818,
            "unit": "ns",
            "range": "± 9.30163822638343"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11597.396087646484,
            "unit": "ns",
            "range": "± 16.390921145644338"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8073.518778483073,
            "unit": "ns",
            "range": "± 7.15835786508594"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 91493.56266902044,
            "unit": "ns",
            "range": "± 225.7225933817071"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23687.43685208834,
            "unit": "ns",
            "range": "± 37.207407093916046"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22987.99297626202,
            "unit": "ns",
            "range": "± 11.453750035209975"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 72356.16280691964,
            "unit": "ns",
            "range": "± 57.33447224655808"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 28908.266194661457,
            "unit": "ns",
            "range": "± 36.00078910346515"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 62331.658935546875,
            "unit": "ns",
            "range": "± 109.84386931201162"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4430645.625,
            "unit": "ns",
            "range": "± 10750.533854969839"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 131643.18196614584,
            "unit": "ns",
            "range": "± 185.4451693164935"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 92990.32358022836,
            "unit": "ns",
            "range": "± 183.93016479442625"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23551.117178109977,
            "unit": "ns",
            "range": "± 16.386037177979905"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22552.371622721355,
            "unit": "ns",
            "range": "± 19.04808928798066"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 74981.25348772321,
            "unit": "ns",
            "range": "± 83.72046195812464"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29630.99314371745,
            "unit": "ns",
            "range": "± 28.162581109925636"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 63231.29621233259,
            "unit": "ns",
            "range": "± 120.9818095149101"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4344293.385416667,
            "unit": "ns",
            "range": "± 9177.381406130307"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 131342.32352120537,
            "unit": "ns",
            "range": "± 162.57589037107846"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187697702,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15134.826308030348,
            "unit": "ns",
            "range": "± 61.682599787528254"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17615.973017765926,
            "unit": "ns",
            "range": "± 17.975488450316966"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17744.396318708146,
            "unit": "ns",
            "range": "± 16.87363130419323"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8044.281659807478,
            "unit": "ns",
            "range": "± 9.341808655197198"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9444.351654052734,
            "unit": "ns",
            "range": "± 16.35800727821555"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10061.562892368862,
            "unit": "ns",
            "range": "± 22.594021025881208"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11572.636061448316,
            "unit": "ns",
            "range": "± 16.70794164082273"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8126.087733677456,
            "unit": "ns",
            "range": "± 7.18014332355219"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 91682.00520833333,
            "unit": "ns",
            "range": "± 245.43429371377044"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23521.09854561942,
            "unit": "ns",
            "range": "± 27.85774877314553"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 23222.73624965123,
            "unit": "ns",
            "range": "± 21.907104529499332"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 74644.03599330357,
            "unit": "ns",
            "range": "± 102.80506179307461"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 29585.942993164062,
            "unit": "ns",
            "range": "± 66.75808398054369"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 63414.925537109375,
            "unit": "ns",
            "range": "± 151.09030931409666"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4535539.921875,
            "unit": "ns",
            "range": "± 30714.29679461815"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 127785.2792593149,
            "unit": "ns",
            "range": "± 258.58387109289396"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 90710.49194335938,
            "unit": "ns",
            "range": "± 250.2143946390437"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23979.594319661457,
            "unit": "ns",
            "range": "± 31.29054510753962"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22604.75311279297,
            "unit": "ns",
            "range": "± 39.065087929609795"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 73748.47975510817,
            "unit": "ns",
            "range": "± 109.00438672073417"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29785.120718819755,
            "unit": "ns",
            "range": "± 32.69954684778359"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 64808.056640625,
            "unit": "ns",
            "range": "± 49.59610213294721"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4430945.3125,
            "unit": "ns",
            "range": "± 6943.746112140174"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 131670.03696986608,
            "unit": "ns",
            "range": "± 141.75945690534598"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283499365,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15489.793178013393,
            "unit": "ns",
            "range": "± 11.65312754523017"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17562.140096028645,
            "unit": "ns",
            "range": "± 10.616969531068193"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17628.72074672154,
            "unit": "ns",
            "range": "± 9.937476394065067"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8164.532764141376,
            "unit": "ns",
            "range": "± 11.360866650446718"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9391.933005196708,
            "unit": "ns",
            "range": "± 23.189018340783534"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10089.607238769531,
            "unit": "ns",
            "range": "± 13.306654684504837"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11951.839556012836,
            "unit": "ns",
            "range": "± 15.415729471299569"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8093.363307072566,
            "unit": "ns",
            "range": "± 7.647976827640085"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 91109.2755998884,
            "unit": "ns",
            "range": "± 357.19265286069725"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23665.73529924665,
            "unit": "ns",
            "range": "± 22.850869166596762"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 23390.768229166668,
            "unit": "ns",
            "range": "± 37.639830339749345"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 71685.10306222098,
            "unit": "ns",
            "range": "± 100.54432252189386"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 29155.178833007812,
            "unit": "ns",
            "range": "± 52.90617183569641"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 63456.146240234375,
            "unit": "ns",
            "range": "± 129.10976758959777"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4395293.449519231,
            "unit": "ns",
            "range": "± 6289.637861382302"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 130567.15262276786,
            "unit": "ns",
            "range": "± 150.4970953252707"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 89692.15932992789,
            "unit": "ns",
            "range": "± 264.51004503182565"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23942.440694173176,
            "unit": "ns",
            "range": "± 29.667616376922133"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22577.45079627404,
            "unit": "ns",
            "range": "± 45.98275622756445"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 71752.5390625,
            "unit": "ns",
            "range": "± 164.47646525880265"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29493.272835867745,
            "unit": "ns",
            "range": "± 58.151143657004"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 63664.943150111605,
            "unit": "ns",
            "range": "± 115.98645451977215"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4456180.078125,
            "unit": "ns",
            "range": "± 6013.819001427761"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 129754.85316685268,
            "unit": "ns",
            "range": "± 191.9905275645358"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376538394,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15413.171822684151,
            "unit": "ns",
            "range": "± 20.042674440008472"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17600.801908052883,
            "unit": "ns",
            "range": "± 8.58301609990358"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17531.44356863839,
            "unit": "ns",
            "range": "± 160.8955089643849"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8103.124872843425,
            "unit": "ns",
            "range": "± 10.629378129673835"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9326.403154645648,
            "unit": "ns",
            "range": "± 17.56077861879266"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 9991.628919328961,
            "unit": "ns",
            "range": "± 13.282646326743276"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11807.821764264789,
            "unit": "ns",
            "range": "± 9.756967052976332"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8090.779172457182,
            "unit": "ns",
            "range": "± 9.089697756488132"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 89830.33708844866,
            "unit": "ns",
            "range": "± 242.221598682443"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23493.355560302734,
            "unit": "ns",
            "range": "± 9.914092214931154"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22824.406315730168,
            "unit": "ns",
            "range": "± 17.10595441542532"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 71759.19015066964,
            "unit": "ns",
            "range": "± 94.75655244889397"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 28965.039934430803,
            "unit": "ns",
            "range": "± 55.73620791980094"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 62499.94669596354,
            "unit": "ns",
            "range": "± 115.45310672616073"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4490934.375,
            "unit": "ns",
            "range": "± 30094.230896327786"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 129471.21988932292,
            "unit": "ns",
            "range": "± 250.79656989048772"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 93059.29424579327,
            "unit": "ns",
            "range": "± 126.44848304469046"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23990.606471470423,
            "unit": "ns",
            "range": "± 20.83079522987227"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22918.196458082934,
            "unit": "ns",
            "range": "± 36.35862280211214"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 72827.6904296875,
            "unit": "ns",
            "range": "± 80.57397528429172"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29165.806477864582,
            "unit": "ns",
            "range": "± 26.59748649505647"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 63127.68816266741,
            "unit": "ns",
            "range": "± 130.04501852267916"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4426117.299107143,
            "unit": "ns",
            "range": "± 4880.811617510981"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 130147.30224609375,
            "unit": "ns",
            "range": "± 213.9536300703021"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736462288588,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15454.799979073661,
            "unit": "ns",
            "range": "± 25.941135923947503"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17551.50429861886,
            "unit": "ns",
            "range": "± 18.877660355026485"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17761.04766845703,
            "unit": "ns",
            "range": "± 16.410942517557647"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8073.091477614183,
            "unit": "ns",
            "range": "± 9.688677090457125"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9262.6974995931,
            "unit": "ns",
            "range": "± 14.025508914942996"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 9984.65303693499,
            "unit": "ns",
            "range": "± 16.057530040615347"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11936.770956856864,
            "unit": "ns",
            "range": "± 38.110524590004914"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8116.066131591797,
            "unit": "ns",
            "range": "± 11.039977819772165"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 91426.97056361607,
            "unit": "ns",
            "range": "± 267.4373793075773"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 24107.56072998047,
            "unit": "ns",
            "range": "± 12.148858951830285"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22820.56121826172,
            "unit": "ns",
            "range": "± 12.379165134000282"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 73576.36980329241,
            "unit": "ns",
            "range": "± 81.24499322184354"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 29104.683532714844,
            "unit": "ns",
            "range": "± 52.64457294972884"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 63456.12269810268,
            "unit": "ns",
            "range": "± 63.67144446599368"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4424058.816964285,
            "unit": "ns",
            "range": "± 19237.64501078097"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 132961.27278645834,
            "unit": "ns",
            "range": "± 115.65589141093149"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 92858.65152994792,
            "unit": "ns",
            "range": "± 332.12373440724906"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23894.646344866072,
            "unit": "ns",
            "range": "± 22.841097530893066"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22905.23435152494,
            "unit": "ns",
            "range": "± 28.348635875286643"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 72589.5625813802,
            "unit": "ns",
            "range": "± 57.16882670818093"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29224.022565569197,
            "unit": "ns",
            "range": "± 82.67508583956732"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 61244.984654017855,
            "unit": "ns",
            "range": "± 62.584045984555885"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4395013.671875,
            "unit": "ns",
            "range": "± 14911.753857062236"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 126309.99232700893,
            "unit": "ns",
            "range": "± 328.39825080781895"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736480046095,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15695.873436560998,
            "unit": "ns",
            "range": "± 11.34284698777605"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17776.045663016183,
            "unit": "ns",
            "range": "± 8.63984232171716"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17811.001586914062,
            "unit": "ns",
            "range": "± 23.67630858309744"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8123.521096365793,
            "unit": "ns",
            "range": "± 32.35956122677553"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9389.0771484375,
            "unit": "ns",
            "range": "± 18.434006430207393"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10048.402463472807,
            "unit": "ns",
            "range": "± 21.568670402220565"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11627.906271127555,
            "unit": "ns",
            "range": "± 22.597177801200278"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8245.089569091797,
            "unit": "ns",
            "range": "± 136.61626878146538"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 89175.77601841518,
            "unit": "ns",
            "range": "± 244.84849950690577"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 24109.130605061848,
            "unit": "ns",
            "range": "± 13.997398152831723"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22751.40568659856,
            "unit": "ns",
            "range": "± 8.026744546599124"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 69655.42724609375,
            "unit": "ns",
            "range": "± 156.03134010633005"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 31091.317749023438,
            "unit": "ns",
            "range": "± 166.07390415183698"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 63871.06404622396,
            "unit": "ns",
            "range": "± 186.58036751789336"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4438997.34375,
            "unit": "ns",
            "range": "± 27201.67539838188"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 129691.14292689732,
            "unit": "ns",
            "range": "± 186.175653970657"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 90718.41959635417,
            "unit": "ns",
            "range": "± 254.86025281711446"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23968.826497395832,
            "unit": "ns",
            "range": "± 30.537119913094294"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22636.275809151786,
            "unit": "ns",
            "range": "± 20.925997847087643"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 73540.31127929688,
            "unit": "ns",
            "range": "± 119.62206292778478"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 28375.746256510418,
            "unit": "ns",
            "range": "± 80.6236205861129"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 64430.859375,
            "unit": "ns",
            "range": "± 105.31779773219988"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4444782.198660715,
            "unit": "ns",
            "range": "± 15820.876239892274"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 132157.73111979166,
            "unit": "ns",
            "range": "± 124.07445922599649"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736554008048,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15712.506713867188,
            "unit": "ns",
            "range": "± 17.899127364429752"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17527.882821219308,
            "unit": "ns",
            "range": "± 19.22999016263151"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17493.078867594402,
            "unit": "ns",
            "range": "± 11.355633613758235"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8204.279327392578,
            "unit": "ns",
            "range": "± 15.190592209340313"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9567.447814941406,
            "unit": "ns",
            "range": "± 18.264060973997484"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 10103.155771891275,
            "unit": "ns",
            "range": "± 22.54697327770003"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11767.603084019252,
            "unit": "ns",
            "range": "± 26.65513181276633"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8262.601361955914,
            "unit": "ns",
            "range": "± 14.690209723432687"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 91030.38095327523,
            "unit": "ns",
            "range": "± 279.35790368355475"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23985.586547851562,
            "unit": "ns",
            "range": "± 17.56515709278339"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 22661.524861653645,
            "unit": "ns",
            "range": "± 14.541466176599773"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 73563.88305664062,
            "unit": "ns",
            "range": "± 87.59580741154814"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 31809.810791015625,
            "unit": "ns",
            "range": "± 52.46812245955955"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 63171.48152669271,
            "unit": "ns",
            "range": "± 130.17744198522908"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4481756.863839285,
            "unit": "ns",
            "range": "± 19964.52952066769"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 129983.15999348958,
            "unit": "ns",
            "range": "± 161.5708214826037"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 91363.28450520833,
            "unit": "ns",
            "range": "± 508.5091788957659"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23922.058759416854,
            "unit": "ns",
            "range": "± 32.30711791176173"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 22694.20435978816,
            "unit": "ns",
            "range": "± 17.530445697831833"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 73304.69031700722,
            "unit": "ns",
            "range": "± 67.23378109524583"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 29101.619262695312,
            "unit": "ns",
            "range": "± 86.32728512755514"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 64091.15091959635,
            "unit": "ns",
            "range": "± 34.43733445549807"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4414536.941964285,
            "unit": "ns",
            "range": "± 14995.046916195655"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 126252.060546875,
            "unit": "ns",
            "range": "± 183.85743329573242"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736656212644,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: ACL)",
            "value": 15535.796465192523,
            "unit": "ns",
            "range": "± 23.843461996926866"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: ACL)",
            "value": 17410.95973423549,
            "unit": "ns",
            "range": "± 15.144760675714453"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: ACL)",
            "value": 17552.793884277344,
            "unit": "ns",
            "range": "± 14.212260308542882"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: ACL)",
            "value": 8080.158124651228,
            "unit": "ns",
            "range": "± 7.90575421470985"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: ACL)",
            "value": 9338.115574763371,
            "unit": "ns",
            "range": "± 79.93690013394192"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: ACL)",
            "value": 9712.772134634164,
            "unit": "ns",
            "range": "± 19.4564221680781"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: ACL)",
            "value": 11501.952655498799,
            "unit": "ns",
            "range": "± 13.16999006400762"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: ACL)",
            "value": 8103.10549054827,
            "unit": "ns",
            "range": "± 8.438128439195173"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: AOF)",
            "value": 92486.82512555804,
            "unit": "ns",
            "range": "± 269.47474426099024"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: AOF)",
            "value": 23956.10591343471,
            "unit": "ns",
            "range": "± 15.323954252187237"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: AOF)",
            "value": 23214.21864827474,
            "unit": "ns",
            "range": "± 21.569768140775917"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: AOF)",
            "value": 74119.50846354167,
            "unit": "ns",
            "range": "± 96.53718647728854"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: AOF)",
            "value": 28905.84950764974,
            "unit": "ns",
            "range": "± 47.04552774761451"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: AOF)",
            "value": 63723.36710611979,
            "unit": "ns",
            "range": "± 139.06115325124568"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: AOF)",
            "value": 4409087.552083333,
            "unit": "ns",
            "range": "± 24263.013120176878"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: AOF)",
            "value": 137019.95768229166,
            "unit": "ns",
            "range": "± 329.36134138747434"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: None)",
            "value": 93143.98885091145,
            "unit": "ns",
            "range": "± 252.50611897859528"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: None)",
            "value": 23496.92101111779,
            "unit": "ns",
            "range": "± 10.484903777217433"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: None)",
            "value": 23046.9140625,
            "unit": "ns",
            "range": "± 20.567328551803158"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: None)",
            "value": 71337.66828264509,
            "unit": "ns",
            "range": "± 121.88775610695006"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: None)",
            "value": 28995.513480050224,
            "unit": "ns",
            "range": "± 57.301794289417266"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: None)",
            "value": 61707.4951171875,
            "unit": "ns",
            "range": "± 58.26382836658666"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: None)",
            "value": 4330225.892857143,
            "unit": "ns",
            "range": "± 7027.509621157974"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: None)",
            "value": 129234.23374720982,
            "unit": "ns",
            "range": "± 165.52707705608722"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254934898,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,Limit)",
            "value": 90495.14770507812,
            "unit": "ns",
            "range": "± 313.7602760076484"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,Limit)",
            "value": 23664.278705303484,
            "unit": "ns",
            "range": "± 14.846248575689957"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,Limit)",
            "value": 22921.56699044364,
            "unit": "ns",
            "range": "± 74.6128251190256"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,Limit)",
            "value": 74396.30737304688,
            "unit": "ns",
            "range": "± 76.79629702297947"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,Limit)",
            "value": 31118.826293945312,
            "unit": "ns",
            "range": "± 35.867907612820126"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,Limit)",
            "value": 63805.66691080729,
            "unit": "ns",
            "range": "± 122.72327589944622"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,Limit)",
            "value": 5298898.2421875,
            "unit": "ns",
            "range": "± 58930.282090954286"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,Limit)",
            "value": 167434.61791992188,
            "unit": "ns",
            "range": "± 28118.48306666311"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,None)",
            "value": 91041.03922526042,
            "unit": "ns",
            "range": "± 310.59915959199094"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,None)",
            "value": 23448.163713727678,
            "unit": "ns",
            "range": "± 16.460026797262653"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,None)",
            "value": 23020.606776646204,
            "unit": "ns",
            "range": "± 16.572284836993166"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,None)",
            "value": 73787.22272600446,
            "unit": "ns",
            "range": "± 54.55685519261343"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,None)",
            "value": 30294.627497746395,
            "unit": "ns",
            "range": "± 32.00773840221373"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,None)",
            "value": 61015.297154017855,
            "unit": "ns",
            "range": "± 116.77474692802424"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,None)",
            "value": 5250580.833333333,
            "unit": "ns",
            "range": "± 49634.61276704264"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,None)",
            "value": 166918.73852539062,
            "unit": "ns",
            "range": "± 28298.48817372307"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Native,None)",
            "value": 91282.79174804688,
            "unit": "ns",
            "range": "± 217.5203255495618"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Native,None)",
            "value": 23930.46194223257,
            "unit": "ns",
            "range": "± 17.931721816814083"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Native,None)",
            "value": 22952.537972586495,
            "unit": "ns",
            "range": "± 24.96495681827056"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Native,None)",
            "value": 73410.14485677083,
            "unit": "ns",
            "range": "± 121.6957539570132"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Native,None)",
            "value": 30335.498657226562,
            "unit": "ns",
            "range": "± 29.894703419058864"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Native,None)",
            "value": 63654.42097981771,
            "unit": "ns",
            "range": "± 141.92935535150556"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Native,None)",
            "value": 4378256.328125,
            "unit": "ns",
            "range": "± 9573.974130064074"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Native,None)",
            "value": 123621.56459263393,
            "unit": "ns",
            "range": "± 197.47601696348192"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,Limit)",
            "value": 92107.19430106027,
            "unit": "ns",
            "range": "± 166.7051326967115"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,Limit)",
            "value": 23506.56956263951,
            "unit": "ns",
            "range": "± 31.75864173621011"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,Limit)",
            "value": 23212.360491071428,
            "unit": "ns",
            "range": "± 102.67227361128694"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,Limit)",
            "value": 73851.14397321429,
            "unit": "ns",
            "range": "± 153.8626488185314"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,Limit)",
            "value": 30067.853291829426,
            "unit": "ns",
            "range": "± 40.9111819582131"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,Limit)",
            "value": 61909.11342075893,
            "unit": "ns",
            "range": "± 105.3739052223505"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,Limit)",
            "value": 5045273.604910715,
            "unit": "ns",
            "range": "± 8231.842341208157"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,Limit)",
            "value": 140729.33443509616,
            "unit": "ns",
            "range": "± 136.89450388308103"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,None)",
            "value": 93098.85602678571,
            "unit": "ns",
            "range": "± 316.0480580260105"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,None)",
            "value": 23731.395830426896,
            "unit": "ns",
            "range": "± 15.616444491066176"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,None)",
            "value": 23040.508422851562,
            "unit": "ns",
            "range": "± 13.301835775534474"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,None)",
            "value": 76948.5822405134,
            "unit": "ns",
            "range": "± 186.23584766210686"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,None)",
            "value": 29652.0893351237,
            "unit": "ns",
            "range": "± 55.368159854666445"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,None)",
            "value": 61481.651893028844,
            "unit": "ns",
            "range": "± 131.17026899481323"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,None)",
            "value": 5019014.899553572,
            "unit": "ns",
            "range": "± 8480.80927445806"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,None)",
            "value": 146765.47688802084,
            "unit": "ns",
            "range": "± 378.4364457464689"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737789506298,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,Limit)",
            "value": 92851.74298967634,
            "unit": "ns",
            "range": "± 354.2411106849163"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,Limit)",
            "value": 25164.10205547626,
            "unit": "ns",
            "range": "± 136.692821074006"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,Limit)",
            "value": 23866.519165039062,
            "unit": "ns",
            "range": "± 35.03708510484557"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,Limit)",
            "value": 74809.49794224331,
            "unit": "ns",
            "range": "± 331.7129080972784"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,Limit)",
            "value": 31765.567220052082,
            "unit": "ns",
            "range": "± 100.60359952850645"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,Limit)",
            "value": 63956.50634765625,
            "unit": "ns",
            "range": "± 257.91029459148757"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,Limit)",
            "value": 5409751.682692308,
            "unit": "ns",
            "range": "± 46318.65221500012"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,Limit)",
            "value": 171028.748046875,
            "unit": "ns",
            "range": "± 30510.4752182125"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,None)",
            "value": 92162.05095563616,
            "unit": "ns",
            "range": "± 235.08907640794857"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,None)",
            "value": 24923.87941800631,
            "unit": "ns",
            "range": "± 27.61217014923664"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,None)",
            "value": 23969.678321251504,
            "unit": "ns",
            "range": "± 30.294811419641473"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,None)",
            "value": 75501.40119280134,
            "unit": "ns",
            "range": "± 179.37367948074225"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,None)",
            "value": 32629.144287109375,
            "unit": "ns",
            "range": "± 54.92773291879583"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,None)",
            "value": 63476.373291015625,
            "unit": "ns",
            "range": "± 266.1719225530123"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,None)",
            "value": 5427040.755208333,
            "unit": "ns",
            "range": "± 68444.76259003891"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,None)",
            "value": 169659.79638671875,
            "unit": "ns",
            "range": "± 28974.10457450894"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Native,None)",
            "value": 94337.1219889323,
            "unit": "ns",
            "range": "± 605.0023031828936"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Native,None)",
            "value": 24822.01407296317,
            "unit": "ns",
            "range": "± 21.914633499150078"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Native,None)",
            "value": 24438.731384277344,
            "unit": "ns",
            "range": "± 59.807714957075255"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Native,None)",
            "value": 76057.53946940105,
            "unit": "ns",
            "range": "± 248.56956172557497"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Native,None)",
            "value": 32318.94792829241,
            "unit": "ns",
            "range": "± 38.17582890814089"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Native,None)",
            "value": 63260.50240652902,
            "unit": "ns",
            "range": "± 193.83519779829203"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Native,None)",
            "value": 4454357.533482143,
            "unit": "ns",
            "range": "± 7572.086323248594"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Native,None)",
            "value": 131641.60970052084,
            "unit": "ns",
            "range": "± 161.05478810150277"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,Limit)",
            "value": 93639.4502766927,
            "unit": "ns",
            "range": "± 348.8701008795561"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,Limit)",
            "value": 24827.030639648438,
            "unit": "ns",
            "range": "± 30.683704607392915"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,Limit)",
            "value": 23925.746663411457,
            "unit": "ns",
            "range": "± 26.045272055578724"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,Limit)",
            "value": 75275.68054199219,
            "unit": "ns",
            "range": "± 116.04300271675514"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,Limit)",
            "value": 32734.52392578125,
            "unit": "ns",
            "range": "± 83.17560322797618"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,Limit)",
            "value": 62158.49609375,
            "unit": "ns",
            "range": "± 83.4223667510632"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,Limit)",
            "value": 4993029.739583333,
            "unit": "ns",
            "range": "± 26736.493226613205"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,Limit)",
            "value": 148066.24004657453,
            "unit": "ns",
            "range": "± 602.9673572421569"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,None)",
            "value": 95609.27546574519,
            "unit": "ns",
            "range": "± 299.3781772220511"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,None)",
            "value": 25005.1606241862,
            "unit": "ns",
            "range": "± 89.60410704757226"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,None)",
            "value": 23937.823922293526,
            "unit": "ns",
            "range": "± 64.72130876108525"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,None)",
            "value": 73907.7412923177,
            "unit": "ns",
            "range": "± 58.28767593081372"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,None)",
            "value": 32365.567016601562,
            "unit": "ns",
            "range": "± 31.263338785984935"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,None)",
            "value": 63335.821533203125,
            "unit": "ns",
            "range": "± 258.44602032426513"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,None)",
            "value": 4955587.388392857,
            "unit": "ns",
            "range": "± 22669.972932042794"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,None)",
            "value": 147160.90087890625,
            "unit": "ns",
            "range": "± 368.5948181406381"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738051390448,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,Limit)",
            "value": 94029.29077148438,
            "unit": "ns",
            "range": "± 278.0630612939867"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,Limit)",
            "value": 24968.560791015625,
            "unit": "ns",
            "range": "± 17.662189038920474"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,Limit)",
            "value": 24148.089364858773,
            "unit": "ns",
            "range": "± 30.080873408747742"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,Limit)",
            "value": 75744.88572340745,
            "unit": "ns",
            "range": "± 119.81536592264224"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,Limit)",
            "value": 31355.1753452846,
            "unit": "ns",
            "range": "± 64.17218402363157"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,Limit)",
            "value": 65926.55901227679,
            "unit": "ns",
            "range": "± 170.80548721520452"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,Limit)",
            "value": 5261184.973958333,
            "unit": "ns",
            "range": "± 59148.91107699381"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,Limit)",
            "value": 166326.00732421875,
            "unit": "ns",
            "range": "± 28557.315112081018"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Managed,None)",
            "value": 94347.4491373698,
            "unit": "ns",
            "range": "± 303.11048209809474"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Managed,None)",
            "value": 25338.234252929688,
            "unit": "ns",
            "range": "± 26.168280524457384"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Managed,None)",
            "value": 23847.828420003254,
            "unit": "ns",
            "range": "± 9.961370252903052"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Managed,None)",
            "value": 74855.54036458333,
            "unit": "ns",
            "range": "± 136.7855811646077"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Managed,None)",
            "value": 31853.656209309895,
            "unit": "ns",
            "range": "± 51.634215093892614"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Managed,None)",
            "value": 62577.81633649553,
            "unit": "ns",
            "range": "± 100.88172781147517"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Managed,None)",
            "value": 5256256.744791667,
            "unit": "ns",
            "range": "± 49725.56013051237"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Managed,None)",
            "value": 175306.06909179688,
            "unit": "ns",
            "range": "± 29624.34803223031"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Native,None)",
            "value": 93039.67982700893,
            "unit": "ns",
            "range": "± 188.82816610224987"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Native,None)",
            "value": 25022.59063720703,
            "unit": "ns",
            "range": "± 33.54335864987184"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Native,None)",
            "value": 24427.38974434989,
            "unit": "ns",
            "range": "± 11.902329758700773"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Native,None)",
            "value": 76596.75728934152,
            "unit": "ns",
            "range": "± 154.101126459599"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Native,None)",
            "value": 35280.24149576823,
            "unit": "ns",
            "range": "± 37.34585249531119"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Native,None)",
            "value": 63620.49211774553,
            "unit": "ns",
            "range": "± 80.17320215843637"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Native,None)",
            "value": 4450230.915178572,
            "unit": "ns",
            "range": "± 7670.624633208564"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Native,None)",
            "value": 129231.5673828125,
            "unit": "ns",
            "range": "± 185.0578697380891"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,Limit)",
            "value": 91358.71669224331,
            "unit": "ns",
            "range": "± 177.14594961237339"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,Limit)",
            "value": 25005.557250976562,
            "unit": "ns",
            "range": "± 32.88913018456655"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,Limit)",
            "value": 24013.979085286457,
            "unit": "ns",
            "range": "± 32.71704175651036"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,Limit)",
            "value": 75722.50447591145,
            "unit": "ns",
            "range": "± 994.0291368972321"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,Limit)",
            "value": 31291.63330078125,
            "unit": "ns",
            "range": "± 80.65125936122796"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,Limit)",
            "value": 62379.14254324777,
            "unit": "ns",
            "range": "± 71.50058087320605"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,Limit)",
            "value": 4996666.276041667,
            "unit": "ns",
            "range": "± 8053.732989149646"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,Limit)",
            "value": 147302.76529947916,
            "unit": "ns",
            "range": "± 594.6528798161071"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptLoad(Params: Tracked,None)",
            "value": 91948.8996233259,
            "unit": "ns",
            "range": "± 297.40456178753595"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsTrue(Params: Tracked,None)",
            "value": 24830.8203125,
            "unit": "ns",
            "range": "± 32.20553571300068"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ScriptExistsFalse(Params: Tracked,None)",
            "value": 24062.337239583332,
            "unit": "ns",
            "range": "± 47.73192604260536"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.Eval(Params: Tracked,None)",
            "value": 74555.10770357572,
            "unit": "ns",
            "range": "± 89.01809475789373"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.EvalSha(Params: Tracked,None)",
            "value": 31307.382202148438,
            "unit": "ns",
            "range": "± 87.27587623456824"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.SmallScript(Params: Tracked,None)",
            "value": 62364.57781110491,
            "unit": "ns",
            "range": "± 78.62151960625471"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.LargeScript(Params: Tracked,None)",
            "value": 4988418.582589285,
            "unit": "ns",
            "range": "± 12219.521627843802"
          },
          {
            "name": "BDN.benchmark.Operations.ScriptOperations.ArrayReturn(Params: Tracked,None)",
            "value": 141411.9718424479,
            "unit": "ns",
            "range": "± 722.7762066387942"
          }
        ]
      }
    ],
    "Operations.HashObjectOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734132960917,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 132049.5407063802,
            "unit": "ns",
            "range": "± 1765.7819295576637"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9261.21183980306,
            "unit": "ns",
            "range": "± 81.64589258247013"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8254.04911334698,
            "unit": "ns",
            "range": "± 29.940228941531185"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 7903.879172691932,
            "unit": "ns",
            "range": "± 35.84254580891323"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 9925.944778442383,
            "unit": "ns",
            "range": "± 64.12422307654022"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11186.45803615025,
            "unit": "ns",
            "range": "± 74.48537939020294"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7445.992502339681,
            "unit": "ns",
            "range": "± 38.320718563955886"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7553.418674214681,
            "unit": "ns",
            "range": "± 52.536283770436945"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9578.145228794643,
            "unit": "ns",
            "range": "± 40.6286547095637"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10395.576411946615,
            "unit": "ns",
            "range": "± 83.08160463591267"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9171.571921212333,
            "unit": "ns",
            "range": "± 88.1752227552261"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13252.466153971354,
            "unit": "ns",
            "range": "± 73.49541163426808"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10458.570088313176,
            "unit": "ns",
            "range": "± 27.31176561538661"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 9428.90762201945,
            "unit": "ns",
            "range": "± 8.737023247775793"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7784.958447969877,
            "unit": "ns",
            "range": "± 22.587060637131106"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 148482.6137858073,
            "unit": "ns",
            "range": "± 1259.9102356594622"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 43704.67446027483,
            "unit": "ns",
            "range": "± 213.23520532292036"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 45502.187299455916,
            "unit": "ns",
            "range": "± 285.1263186846996"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 49900.58187430246,
            "unit": "ns",
            "range": "± 273.71302430097694"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 87490.61834309896,
            "unit": "ns",
            "range": "± 623.8343752943433"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 110350.54670817057,
            "unit": "ns",
            "range": "± 510.62453284661393"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 44834.53278459822,
            "unit": "ns",
            "range": "± 196.02776755329097"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 39901.98810424805,
            "unit": "ns",
            "range": "± 516.7497219253725"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 48731.83440348307,
            "unit": "ns",
            "range": "± 294.5428039708339"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 81670.07393101284,
            "unit": "ns",
            "range": "± 440.8947538258065"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 60019.53112792969,
            "unit": "ns",
            "range": "± 629.5419390682257"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13323.874215932992,
            "unit": "ns",
            "range": "± 29.82627574030274"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 74316.45236002604,
            "unit": "ns",
            "range": "± 548.9440176477644"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 43077.64760044643,
            "unit": "ns",
            "range": "± 127.96029302132548"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 46374.31073201497,
            "unit": "ns",
            "range": "± 449.3071112254425"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 136836.74014718193,
            "unit": "ns",
            "range": "± 197.91231058722718"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 45064.47432657878,
            "unit": "ns",
            "range": "± 169.37738167859743"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 44603.184735107425,
            "unit": "ns",
            "range": "± 157.30329662525364"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 55436.65355137416,
            "unit": "ns",
            "range": "± 114.37251922839502"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 71602.41117506761,
            "unit": "ns",
            "range": "± 181.1149101796601"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 100828.00686848958,
            "unit": "ns",
            "range": "± 251.45980742950724"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 47282.92847987584,
            "unit": "ns",
            "range": "± 187.73403111525909"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39043.39669799805,
            "unit": "ns",
            "range": "± 78.64171147533467"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 47556.95196533203,
            "unit": "ns",
            "range": "± 288.83167763503644"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 70709.06467285156,
            "unit": "ns",
            "range": "± 454.9253488185122"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 55851.94170939128,
            "unit": "ns",
            "range": "± 272.45333300103323"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13310.827342442104,
            "unit": "ns",
            "range": "± 38.997204566939416"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 65330.3880452474,
            "unit": "ns",
            "range": "± 232.9291762774466"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44198.65678914388,
            "unit": "ns",
            "range": "± 219.2797055033353"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 47464.13401285807,
            "unit": "ns",
            "range": "± 167.7570209884607"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734134615255,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 130850.46634615384,
            "unit": "ns",
            "range": "± 403.530139361655"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9152.122744750977,
            "unit": "ns",
            "range": "± 89.94185708896998"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8041.478967519907,
            "unit": "ns",
            "range": "± 4.414544111095751"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 7886.881243896484,
            "unit": "ns",
            "range": "± 33.24767759757552"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10230.179346720377,
            "unit": "ns",
            "range": "± 66.4495086974743"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11050.872403826032,
            "unit": "ns",
            "range": "± 16.13762939480599"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7433.928165142353,
            "unit": "ns",
            "range": "± 11.972405372841143"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7594.169723510742,
            "unit": "ns",
            "range": "± 7.4175783122896"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9015.369426472982,
            "unit": "ns",
            "range": "± 70.18005484096703"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10955.251419067383,
            "unit": "ns",
            "range": "± 85.42773687294839"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9331.612150828043,
            "unit": "ns",
            "range": "± 36.10654270303548"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13142.290683746338,
            "unit": "ns",
            "range": "± 18.19598177688433"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9681.657997131348,
            "unit": "ns",
            "range": "± 89.08812298954359"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 9535.795061551607,
            "unit": "ns",
            "range": "± 30.623209494835873"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8140.607756551107,
            "unit": "ns",
            "range": "± 105.69933016491842"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 151396.8809640067,
            "unit": "ns",
            "range": "± 1029.4494826723972"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 49453.53301188151,
            "unit": "ns",
            "range": "± 227.91414368446596"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 44157.97162882487,
            "unit": "ns",
            "range": "± 190.8549332497136"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 54935.36186523437,
            "unit": "ns",
            "range": "± 288.70372121232015"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 85585.89001464844,
            "unit": "ns",
            "range": "± 1823.9984403368817"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 112216.0226789202,
            "unit": "ns",
            "range": "± 550.3918144472946"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 43692.63138991136,
            "unit": "ns",
            "range": "± 105.40161346929881"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 38760.784920828686,
            "unit": "ns",
            "range": "± 283.94915985156763"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 52822.61626180013,
            "unit": "ns",
            "range": "± 337.2618902140515"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 81084.2402256557,
            "unit": "ns",
            "range": "± 724.2204042665813"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 57538.03908691406,
            "unit": "ns",
            "range": "± 290.98390558330414"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13279.55683680943,
            "unit": "ns",
            "range": "± 51.172702630819636"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 74568.26368931362,
            "unit": "ns",
            "range": "± 269.77366053884015"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 51237.59279581706,
            "unit": "ns",
            "range": "± 153.73538132549209"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 44662.08667428153,
            "unit": "ns",
            "range": "± 102.8979934183339"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 135693.203133138,
            "unit": "ns",
            "range": "± 573.5429806571111"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 42977.73941853841,
            "unit": "ns",
            "range": "± 173.56304012790008"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 43168.64846567007,
            "unit": "ns",
            "range": "± 131.56871134267124"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 55956.45936701848,
            "unit": "ns",
            "range": "± 96.57100224673638"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 74373.4502040318,
            "unit": "ns",
            "range": "± 321.9385587192885"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 108182.70327148438,
            "unit": "ns",
            "range": "± 538.0334674258604"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 44577.12827351888,
            "unit": "ns",
            "range": "± 134.1510056309465"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39323.19331258138,
            "unit": "ns",
            "range": "± 275.4031859318211"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 48226.558030192056,
            "unit": "ns",
            "range": "± 243.63451529422193"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 71286.48572591147,
            "unit": "ns",
            "range": "± 354.3821158402961"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 55739.91121128627,
            "unit": "ns",
            "range": "± 368.25230884863896"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13186.601328168597,
            "unit": "ns",
            "range": "± 36.59663864159555"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 65048.05232747396,
            "unit": "ns",
            "range": "± 333.64987243147687"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45193.87700108119,
            "unit": "ns",
            "range": "± 271.6160564238074"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 46383.52359008789,
            "unit": "ns",
            "range": "± 62.397762472769074"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734377921318,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 140065.32720947266,
            "unit": "ns",
            "range": "± 373.5459334528882"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9163.691018676758,
            "unit": "ns",
            "range": "± 41.56706909741989"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8055.186254648062,
            "unit": "ns",
            "range": "± 6.521201589860332"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8069.244928632464,
            "unit": "ns",
            "range": "± 53.0264548347966"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10023.612834385463,
            "unit": "ns",
            "range": "± 67.50275024399726"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10943.009137471518,
            "unit": "ns",
            "range": "± 5.23593647522178"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7426.952805110386,
            "unit": "ns",
            "range": "± 33.15294884284215"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7485.094405873617,
            "unit": "ns",
            "range": "± 40.04407324159967"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9163.714755718525,
            "unit": "ns",
            "range": "± 7.306680398538396"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10474.73973642985,
            "unit": "ns",
            "range": "± 73.4200999986696"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 8750.123606168307,
            "unit": "ns",
            "range": "± 44.089341217103126"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13169.651035308838,
            "unit": "ns",
            "range": "± 35.112418108431115"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10334.201622517903,
            "unit": "ns",
            "range": "± 96.83751956015283"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 9551.30991414388,
            "unit": "ns",
            "range": "± 78.46012074577128"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7512.176001957485,
            "unit": "ns",
            "range": "± 41.0355878275936"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 148520.51632254463,
            "unit": "ns",
            "range": "± 800.5368873034084"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 44013.1412494366,
            "unit": "ns",
            "range": "± 111.84055003681446"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 42950.516106238734,
            "unit": "ns",
            "range": "± 184.0712916058837"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 49679.35961507161,
            "unit": "ns",
            "range": "± 413.07999060089503"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 81858.57802734376,
            "unit": "ns",
            "range": "± 658.8462957195937"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 116798.84073311942,
            "unit": "ns",
            "range": "± 654.8661536315143"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 45308.140779622394,
            "unit": "ns",
            "range": "± 635.1394692693204"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 40289.17634684245,
            "unit": "ns",
            "range": "± 529.1172619037354"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 48580.7065386091,
            "unit": "ns",
            "range": "± 289.0949288338194"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 80415.8279663086,
            "unit": "ns",
            "range": "± 772.8999127135845"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 60026.033107212614,
            "unit": "ns",
            "range": "± 457.88779215621645"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13280.000632222493,
            "unit": "ns",
            "range": "± 98.78674903477526"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 75581.07906087239,
            "unit": "ns",
            "range": "± 359.432427480618"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 42687.39781901042,
            "unit": "ns",
            "range": "± 154.70603277504688"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 45507.48094831194,
            "unit": "ns",
            "range": "± 79.66257785222896"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 133299.81729329427,
            "unit": "ns",
            "range": "± 576.0160983481752"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 42900.637225341794,
            "unit": "ns",
            "range": "± 206.46905353288074"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 43792.63558146159,
            "unit": "ns",
            "range": "± 165.3546465790475"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 50785.34969388522,
            "unit": "ns",
            "range": "± 57.07542030145086"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 76521.02379557291,
            "unit": "ns",
            "range": "± 584.2398099771858"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 101012.71968180338,
            "unit": "ns",
            "range": "± 336.4927510986663"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 45280.243028913224,
            "unit": "ns",
            "range": "± 125.83261009814407"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39705.22477620443,
            "unit": "ns",
            "range": "± 80.9501289209368"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 47952.98322941707,
            "unit": "ns",
            "range": "± 236.14326571878908"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 70500.01690673828,
            "unit": "ns",
            "range": "± 599.4303700780401"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 55257.6111101423,
            "unit": "ns",
            "range": "± 241.89171038489093"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13215.820724487305,
            "unit": "ns",
            "range": "± 30.538947012996683"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 64948.26868489583,
            "unit": "ns",
            "range": "± 302.6397203044981"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44449.16861833845,
            "unit": "ns",
            "range": "± 92.59689774468836"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 44996.90498046875,
            "unit": "ns",
            "range": "± 195.85507709651566"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734393389791,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 133693.42501126803,
            "unit": "ns",
            "range": "± 270.9960385057336"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10926.186759440105,
            "unit": "ns",
            "range": "± 117.67798663643796"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8386.620781531701,
            "unit": "ns",
            "range": "± 30.33517908223759"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8237.233208211263,
            "unit": "ns",
            "range": "± 104.13436660654739"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10214.791303362164,
            "unit": "ns",
            "range": "± 77.64008419943725"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11084.595880780902,
            "unit": "ns",
            "range": "± 69.65220048869094"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8466.946003214518,
            "unit": "ns",
            "range": "± 98.47671208402994"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8546.693412193885,
            "unit": "ns",
            "range": "± 45.02619096919319"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9386.979064941406,
            "unit": "ns",
            "range": "± 9.830435986349308"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11968.659385172527,
            "unit": "ns",
            "range": "± 96.7418065226291"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9271.566780677209,
            "unit": "ns",
            "range": "± 18.725035203123255"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13271.66728101458,
            "unit": "ns",
            "range": "± 72.98957620993527"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10827.478407796223,
            "unit": "ns",
            "range": "± 77.19007525387967"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10794.347698505107,
            "unit": "ns",
            "range": "± 50.88827825421079"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8159.31241431603,
            "unit": "ns",
            "range": "± 27.359934383901443"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 151893.3078531901,
            "unit": "ns",
            "range": "± 1051.550790004139"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 44451.0116007487,
            "unit": "ns",
            "range": "± 417.59477738355696"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 47476.314479282926,
            "unit": "ns",
            "range": "± 288.024668568063"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 53519.919285700875,
            "unit": "ns",
            "range": "± 178.739747271875"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 83225.75995279948,
            "unit": "ns",
            "range": "± 713.0340095209277"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 108827.19243977865,
            "unit": "ns",
            "range": "± 545.1197277587464"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 44745.4819922814,
            "unit": "ns",
            "range": "± 76.62809455491148"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 39144.1285142165,
            "unit": "ns",
            "range": "± 48.52905124102143"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 50866.71139119466,
            "unit": "ns",
            "range": "± 322.6601154409032"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 81545.98564801898,
            "unit": "ns",
            "range": "± 401.34629055277657"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 57489.80249430339,
            "unit": "ns",
            "range": "± 306.6142999486406"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13470.971206665039,
            "unit": "ns",
            "range": "± 68.90009828753655"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 76696.88185471755,
            "unit": "ns",
            "range": "± 181.36000828383627"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45645.53793334961,
            "unit": "ns",
            "range": "± 110.28919873406151"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 50935.21778971354,
            "unit": "ns",
            "range": "± 221.4237570440768"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 133420.34831891741,
            "unit": "ns",
            "range": "± 239.21001809833973"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44989.05336914062,
            "unit": "ns",
            "range": "± 155.93776988975293"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 44580.946271623885,
            "unit": "ns",
            "range": "± 89.97271392147275"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 50689.567403157555,
            "unit": "ns",
            "range": "± 213.94891663572525"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 75194.17003173828,
            "unit": "ns",
            "range": "± 397.1060139128289"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 106331.927734375,
            "unit": "ns",
            "range": "± 424.97368164692546"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 52611.46059163412,
            "unit": "ns",
            "range": "± 119.48341716671992"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 38359.765268961586,
            "unit": "ns",
            "range": "± 38.96243342629687"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 50972.194852701825,
            "unit": "ns",
            "range": "± 227.96266186399023"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 69248.43533121745,
            "unit": "ns",
            "range": "± 369.25418454416933"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 57314.57287394206,
            "unit": "ns",
            "range": "± 358.84896490772246"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13241.23494544396,
            "unit": "ns",
            "range": "± 39.317480338491684"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 64571.18165690104,
            "unit": "ns",
            "range": "± 279.87578770432697"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45402.18411254883,
            "unit": "ns",
            "range": "± 188.32973945646987"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 47129.08881632487,
            "unit": "ns",
            "range": "± 153.87785761886374"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734484309245,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 132126.18744303385,
            "unit": "ns",
            "range": "± 1879.61574238476"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9652.712161254884,
            "unit": "ns",
            "range": "± 81.62423652068568"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8662.22061665853,
            "unit": "ns",
            "range": "± 92.70696356076071"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8807.352758135114,
            "unit": "ns",
            "range": "± 85.42562272167106"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10899.213327261117,
            "unit": "ns",
            "range": "± 41.77788205675592"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10831.871938069662,
            "unit": "ns",
            "range": "± 9.340266242715106"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7936.071559651693,
            "unit": "ns",
            "range": "± 111.33209349130101"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7936.779958871694,
            "unit": "ns",
            "range": "± 20.368017874433"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9662.816357421874,
            "unit": "ns",
            "range": "± 65.41826609683046"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10927.358548990886,
            "unit": "ns",
            "range": "± 83.75708714894107"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9119.91070429484,
            "unit": "ns",
            "range": "± 6.702026802542183"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13220.589799063546,
            "unit": "ns",
            "range": "± 106.19229918400252"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9894.51456451416,
            "unit": "ns",
            "range": "± 72.91578367358025"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 9849.122329711914,
            "unit": "ns",
            "range": "± 4.632767070730715"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7907.455957685198,
            "unit": "ns",
            "range": "± 67.43719927028614"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 149734.863663737,
            "unit": "ns",
            "range": "± 1526.2438577990786"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 46087.50047302246,
            "unit": "ns",
            "range": "± 106.35837442119288"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 46971.45606079102,
            "unit": "ns",
            "range": "± 239.84543394349845"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 50143.24976094564,
            "unit": "ns",
            "range": "± 656.4776626122606"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 82390.95156424386,
            "unit": "ns",
            "range": "± 643.0590113570066"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 113229.56861223493,
            "unit": "ns",
            "range": "± 417.8750555946825"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46625.97926228841,
            "unit": "ns",
            "range": "± 268.14339574684686"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 40613.04667154948,
            "unit": "ns",
            "range": "± 290.5773291595352"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 48944.78420316256,
            "unit": "ns",
            "range": "± 115.13939620440631"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 82276.46139090402,
            "unit": "ns",
            "range": "± 488.4515085005882"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 59457.826009114586,
            "unit": "ns",
            "range": "± 619.0369226798946"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13216.604806753305,
            "unit": "ns",
            "range": "± 56.03512799723493"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 73299.5489827474,
            "unit": "ns",
            "range": "± 443.0213006036811"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 49035.66515677316,
            "unit": "ns",
            "range": "± 299.8981653359364"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 46067.94711303711,
            "unit": "ns",
            "range": "± 114.7429599928305"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 132258.38080705915,
            "unit": "ns",
            "range": "± 331.4410210431471"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 45679.82600504557,
            "unit": "ns",
            "range": "± 168.7109475327549"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 46137.61870117187,
            "unit": "ns",
            "range": "± 221.21901123805966"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 48711.16895345052,
            "unit": "ns",
            "range": "± 161.3495962662104"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 74003.10817464192,
            "unit": "ns",
            "range": "± 201.64637298765405"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 99770.64415690103,
            "unit": "ns",
            "range": "± 393.1633740384646"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 45653.4544514974,
            "unit": "ns",
            "range": "± 219.80418805420243"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39522.983834402905,
            "unit": "ns",
            "range": "± 142.70534904925165"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 51106.98257039388,
            "unit": "ns",
            "range": "± 451.3247551078065"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 72504.33964029948,
            "unit": "ns",
            "range": "± 462.47373825297734"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 54666.01689453125,
            "unit": "ns",
            "range": "± 389.1499501715149"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13213.124412536621,
            "unit": "ns",
            "range": "± 54.642974863075786"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 68860.10750732422,
            "unit": "ns",
            "range": "± 319.14524440135716"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 48279.36775861467,
            "unit": "ns",
            "range": "± 153.36997330367515"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 45509.182781982425,
            "unit": "ns",
            "range": "± 194.95721155534537"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734560133867,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 135096.7401968149,
            "unit": "ns",
            "range": "± 547.9871661407797"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9382.05143330892,
            "unit": "ns",
            "range": "± 102.10803572962418"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8621.609036254882,
            "unit": "ns",
            "range": "± 102.7751982717392"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8578.574255136344,
            "unit": "ns",
            "range": "± 29.630018698538752"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10656.721882120768,
            "unit": "ns",
            "range": "± 129.7531764908597"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10825.38201268514,
            "unit": "ns",
            "range": "± 57.572315425980584"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8186.950206756592,
            "unit": "ns",
            "range": "± 30.8037030811234"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7937.649629720052,
            "unit": "ns",
            "range": "± 119.3477347365387"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9501.834889729818,
            "unit": "ns",
            "range": "± 29.695241928337367"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10811.834164937338,
            "unit": "ns",
            "range": "± 6.610285729937787"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9002.457251915564,
            "unit": "ns",
            "range": "± 9.150185480568835"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13233.942831856864,
            "unit": "ns",
            "range": "± 61.49662208688875"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10724.089719136557,
            "unit": "ns",
            "range": "± 11.648056212740878"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10388.242026265461,
            "unit": "ns",
            "range": "± 83.88709206095666"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7888.549642709585,
            "unit": "ns",
            "range": "± 6.096783948430326"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 149506.90086951622,
            "unit": "ns",
            "range": "± 549.6684908392225"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 45560.02679007394,
            "unit": "ns",
            "range": "± 133.76887056502673"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 43543.54631696428,
            "unit": "ns",
            "range": "± 254.0513579422278"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 51501.722908528645,
            "unit": "ns",
            "range": "± 362.10084458802436"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 84633.77369572566,
            "unit": "ns",
            "range": "± 353.91962322323104"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 111597.03040364584,
            "unit": "ns",
            "range": "± 606.2858685439465"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46098.19059855143,
            "unit": "ns",
            "range": "± 348.24245235739255"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 42274.73270874024,
            "unit": "ns",
            "range": "± 60.00298204842224"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 50048.528853352866,
            "unit": "ns",
            "range": "± 285.2720374497416"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 80536.82535807292,
            "unit": "ns",
            "range": "± 542.5592083031581"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54041.96654052734,
            "unit": "ns",
            "range": "± 369.6538365410696"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13216.173095703125,
            "unit": "ns",
            "range": "± 32.381327183689976"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 74088.82431466239,
            "unit": "ns",
            "range": "± 383.2386813909293"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 47529.256864420575,
            "unit": "ns",
            "range": "± 184.93690870688656"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 48067.611615862166,
            "unit": "ns",
            "range": "± 136.23283882355256"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 135262.81534016927,
            "unit": "ns",
            "range": "± 673.7506949878715"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 43734.366662597655,
            "unit": "ns",
            "range": "± 183.48260000733623"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 46176.46572672526,
            "unit": "ns",
            "range": "± 240.80956667222634"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 50574.07158610026,
            "unit": "ns",
            "range": "± 209.93130079549422"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 75384.79694417318,
            "unit": "ns",
            "range": "± 389.0934860455941"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 105747.65236816407,
            "unit": "ns",
            "range": "± 412.81667254015605"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 48171.24433680943,
            "unit": "ns",
            "range": "± 134.3450681777934"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39686.66370098408,
            "unit": "ns",
            "range": "± 123.09321595629437"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 49354.75879778181,
            "unit": "ns",
            "range": "± 190.27862863591267"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 70368.71657714844,
            "unit": "ns",
            "range": "± 181.91762703653276"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 53557.01890258789,
            "unit": "ns",
            "range": "± 212.91435856330705"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13160.470162024865,
            "unit": "ns",
            "range": "± 36.31527394269472"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 65989.18231201172,
            "unit": "ns",
            "range": "± 302.67174735431394"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45711.169028727214,
            "unit": "ns",
            "range": "± 238.32322980738056"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 50574.0794921875,
            "unit": "ns",
            "range": "± 226.2394257785085"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734579412200,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 130207.97964913504,
            "unit": "ns",
            "range": "± 436.250047012682"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9775.295589991978,
            "unit": "ns",
            "range": "± 24.602913022339468"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8611.345399039132,
            "unit": "ns",
            "range": "± 79.30569263291278"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8255.276286198543,
            "unit": "ns",
            "range": "± 5.406307259861262"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10478.303602091471,
            "unit": "ns",
            "range": "± 88.53653129013898"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10914.910268147787,
            "unit": "ns",
            "range": "± 87.61275277977911"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8154.876194545201,
            "unit": "ns",
            "range": "± 15.48526236383674"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7943.549923706055,
            "unit": "ns",
            "range": "± 76.91821384475166"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9488.751568603515,
            "unit": "ns",
            "range": "± 78.30516680712368"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10898.565929957798,
            "unit": "ns",
            "range": "± 77.02630244140646"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9274.724881998698,
            "unit": "ns",
            "range": "± 127.48445380969981"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13213.572905985515,
            "unit": "ns",
            "range": "± 87.31061346601778"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10892.648452758789,
            "unit": "ns",
            "range": "± 37.34254730007156"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10119.368744986397,
            "unit": "ns",
            "range": "± 66.70529802798632"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8453.24227294922,
            "unit": "ns",
            "range": "± 30.103509847359046"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 148338.43697415866,
            "unit": "ns",
            "range": "± 532.9825712427507"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 47683.251724243164,
            "unit": "ns",
            "range": "± 130.08770761113666"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 44418.80442592076,
            "unit": "ns",
            "range": "± 288.044164409306"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 49252.416630045576,
            "unit": "ns",
            "range": "± 256.2823761747791"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 83695.35856119792,
            "unit": "ns",
            "range": "± 499.94303089525414"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 117841.93579915365,
            "unit": "ns",
            "range": "± 696.4939304078434"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46738.453927847055,
            "unit": "ns",
            "range": "± 153.3960070399955"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 42524.71194458008,
            "unit": "ns",
            "range": "± 172.55362832614"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 48721.55832926432,
            "unit": "ns",
            "range": "± 454.8465009167973"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 84844.948992048,
            "unit": "ns",
            "range": "± 748.2257206948454"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 58157.90227050781,
            "unit": "ns",
            "range": "± 420.6936360582536"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13184.640317644391,
            "unit": "ns",
            "range": "± 24.436212356809722"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 76560.54218401227,
            "unit": "ns",
            "range": "± 320.18537200407917"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45617.553056989396,
            "unit": "ns",
            "range": "± 160.92495344129884"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 50440.35831124442,
            "unit": "ns",
            "range": "± 146.80476027334893"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 132011.2068684896,
            "unit": "ns",
            "range": "± 254.3771817922557"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44807.21088867188,
            "unit": "ns",
            "range": "± 128.4969691386475"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 45728.86770395132,
            "unit": "ns",
            "range": "± 182.9584915581738"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 49139.534767659505,
            "unit": "ns",
            "range": "± 151.85855114354067"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 76652.57461111886,
            "unit": "ns",
            "range": "± 275.6822395339185"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 99678.4216389974,
            "unit": "ns",
            "range": "± 372.00516183213364"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 47546.435446602954,
            "unit": "ns",
            "range": "± 53.293935230643"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 45275.081217447914,
            "unit": "ns",
            "range": "± 128.87384350833338"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 50061.02652587891,
            "unit": "ns",
            "range": "± 204.40812596587537"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 70510.83394949777,
            "unit": "ns",
            "range": "± 352.51037410382514"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 63938.00677020733,
            "unit": "ns",
            "range": "± 151.6946551727422"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13214.347834269205,
            "unit": "ns",
            "range": "± 37.99669045462826"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 65323.28185221354,
            "unit": "ns",
            "range": "± 212.01244275137307"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 47695.813502720426,
            "unit": "ns",
            "range": "± 128.4770052909285"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 45082.721451822916,
            "unit": "ns",
            "range": "± 159.08252286854864"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734596641303,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 137046.8662027995,
            "unit": "ns",
            "range": "± 1294.7248078006812"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9705.156737263997,
            "unit": "ns",
            "range": "± 119.1251668094122"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8588.046920776367,
            "unit": "ns",
            "range": "± 34.369190593223884"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8766.962690080914,
            "unit": "ns",
            "range": "± 24.87635406155148"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10918.907040596008,
            "unit": "ns",
            "range": "± 199.40721759226952"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10743.808089036207,
            "unit": "ns",
            "range": "± 11.81996409846883"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7901.344385782878,
            "unit": "ns",
            "range": "± 70.87604740490272"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8038.217033973107,
            "unit": "ns",
            "range": "± 50.573954932851464"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9485.97235434396,
            "unit": "ns",
            "range": "± 63.712256731886775"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11056.043645222982,
            "unit": "ns",
            "range": "± 107.96902609996684"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9116.35769144694,
            "unit": "ns",
            "range": "± 91.96924121930553"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13161.011109572191,
            "unit": "ns",
            "range": "± 44.023589167617956"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9994.992875162761,
            "unit": "ns",
            "range": "± 93.56211202231925"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 9979.970955984933,
            "unit": "ns",
            "range": "± 69.7201446105722"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8306.9936806815,
            "unit": "ns",
            "range": "± 30.50076644778406"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 148584.7912841797,
            "unit": "ns",
            "range": "± 1708.5082661236777"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 50975.16310221354,
            "unit": "ns",
            "range": "± 215.73077770707073"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 45326.34044974191,
            "unit": "ns",
            "range": "± 313.37765821459055"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 55649.99453938802,
            "unit": "ns",
            "range": "± 200.41441699191205"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 83516.22103177584,
            "unit": "ns",
            "range": "± 434.9293807972666"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 113294.67158203125,
            "unit": "ns",
            "range": "± 663.3539848018852"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 47186.18060913086,
            "unit": "ns",
            "range": "± 437.613416433335"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 40199.022341214695,
            "unit": "ns",
            "range": "± 60.68429262994372"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 50669.419926570015,
            "unit": "ns",
            "range": "± 126.54642224278786"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 81159.57386997768,
            "unit": "ns",
            "range": "± 245.8486224261681"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 58245.28774820964,
            "unit": "ns",
            "range": "± 689.5929085267857"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13177.156037466866,
            "unit": "ns",
            "range": "± 75.27856232924296"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 75172.67463030134,
            "unit": "ns",
            "range": "± 465.96666566503757"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 51079.72849934896,
            "unit": "ns",
            "range": "± 408.43695373675143"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 45454.24902108999,
            "unit": "ns",
            "range": "± 194.6623881657925"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 134382.11029459635,
            "unit": "ns",
            "range": "± 702.5862002566894"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 46768.11596069336,
            "unit": "ns",
            "range": "± 137.99702714082798"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 43124.70305379232,
            "unit": "ns",
            "range": "± 105.99850607432333"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 48696.89549967448,
            "unit": "ns",
            "range": "± 165.6898539816482"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 79908.95955113003,
            "unit": "ns",
            "range": "± 263.16259875650735"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 100977.75048421224,
            "unit": "ns",
            "range": "± 515.9806877301414"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 45032.29289754232,
            "unit": "ns",
            "range": "± 94.79539564291794"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39329.98184640067,
            "unit": "ns",
            "range": "± 121.07996074092715"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 48825.16775716146,
            "unit": "ns",
            "range": "± 345.20163160645666"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 75245.91837565105,
            "unit": "ns",
            "range": "± 464.90013912000995"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 54274.659303792316,
            "unit": "ns",
            "range": "± 237.11070120145976"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13153.536473955426,
            "unit": "ns",
            "range": "± 35.43809732123286"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 64279.86651611328,
            "unit": "ns",
            "range": "± 300.771523934521"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45187.0229448591,
            "unit": "ns",
            "range": "± 133.29923229468224"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 47192.15009483924,
            "unit": "ns",
            "range": "± 58.72582494659985"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734644081035,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 135546.15576171875,
            "unit": "ns",
            "range": "± 857.0972102105665"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9336.982286725726,
            "unit": "ns",
            "range": "± 64.9217914023413"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8634.479395185199,
            "unit": "ns",
            "range": "± 57.68078198617963"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8296.862107594809,
            "unit": "ns",
            "range": "± 6.372525601803327"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10964.027997843425,
            "unit": "ns",
            "range": "± 77.98608852986642"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11348.892047337124,
            "unit": "ns",
            "range": "± 77.19625758811698"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7860.927393232073,
            "unit": "ns",
            "range": "± 5.378414263173749"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7989.693347930908,
            "unit": "ns",
            "range": "± 23.217717128953883"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9586.50559387207,
            "unit": "ns",
            "range": "± 127.2071106773541"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10916.701516287667,
            "unit": "ns",
            "range": "± 71.5898624222443"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9161.593032836914,
            "unit": "ns",
            "range": "± 100.3734934598241"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13210.929736328126,
            "unit": "ns",
            "range": "± 75.00056939176928"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10570.280394490559,
            "unit": "ns",
            "range": "± 89.17039186018675"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 9916.712223307291,
            "unit": "ns",
            "range": "± 80.40768694867657"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8268.443498738607,
            "unit": "ns",
            "range": "± 68.65686620066121"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 155623.9083077567,
            "unit": "ns",
            "range": "± 622.9186606733113"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 49422.43948800223,
            "unit": "ns",
            "range": "± 259.359308025131"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 45067.26435546875,
            "unit": "ns",
            "range": "± 331.09235532421553"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 49740.108018141524,
            "unit": "ns",
            "range": "± 105.66702228950005"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 84190.29419817243,
            "unit": "ns",
            "range": "± 677.8843465530991"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 109858.63529866537,
            "unit": "ns",
            "range": "± 701.9441753280408"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 47687.31199863979,
            "unit": "ns",
            "range": "± 218.0070184143951"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 40720.68869425456,
            "unit": "ns",
            "range": "± 323.97400884688363"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 48722.3133152553,
            "unit": "ns",
            "range": "± 275.6703971355825"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 81876.18393147786,
            "unit": "ns",
            "range": "± 623.8635888121377"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54051.49589233399,
            "unit": "ns",
            "range": "± 417.5883020242107"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13214.723646036784,
            "unit": "ns",
            "range": "± 89.84595279344613"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 74139.6681599935,
            "unit": "ns",
            "range": "± 579.7886490566383"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45925.138842773435,
            "unit": "ns",
            "range": "± 363.85862784849155"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 45361.28379516602,
            "unit": "ns",
            "range": "± 99.06942009234693"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 131388.7241908482,
            "unit": "ns",
            "range": "± 269.7531456026275"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44927.298799641925,
            "unit": "ns",
            "range": "± 225.24728871427726"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 49314.059598795575,
            "unit": "ns",
            "range": "± 199.76068709501936"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 49599.30569893973,
            "unit": "ns",
            "range": "± 142.38033036053332"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 75060.57560221355,
            "unit": "ns",
            "range": "± 518.1664548148062"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 104271.84962565104,
            "unit": "ns",
            "range": "± 408.0270475744195"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 51926.53852539063,
            "unit": "ns",
            "range": "± 220.03751425390715"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 40060.73479817708,
            "unit": "ns",
            "range": "± 142.42947533473125"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 48029.38236345564,
            "unit": "ns",
            "range": "± 233.0025033631334"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 70582.56660679409,
            "unit": "ns",
            "range": "± 348.19313786777457"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 54459.22920328776,
            "unit": "ns",
            "range": "± 286.00819784283823"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13256.294377644857,
            "unit": "ns",
            "range": "± 82.42789745042376"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 65615.22613055889,
            "unit": "ns",
            "range": "± 278.9576900495116"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 46074.54444783529,
            "unit": "ns",
            "range": "± 237.14229921737038"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 46894.880693708146,
            "unit": "ns",
            "range": "± 170.5149927851867"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734648351981,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 134110.58923339844,
            "unit": "ns",
            "range": "± 638.8838623497577"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9849.149465942382,
            "unit": "ns",
            "range": "± 138.74772048136376"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8595.241395216723,
            "unit": "ns",
            "range": "± 34.85166782342353"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8226.050818125406,
            "unit": "ns",
            "range": "± 8.77946383843865"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10830.63212476458,
            "unit": "ns",
            "range": "± 47.927107851823166"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10978.320544433594,
            "unit": "ns",
            "range": "± 123.51110842038817"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8153.748192420373,
            "unit": "ns",
            "range": "± 31.379106261702532"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8162.477215106671,
            "unit": "ns",
            "range": "± 65.10650104164905"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 10313.730419703892,
            "unit": "ns",
            "range": "± 26.584900891990152"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11029.312294514973,
            "unit": "ns",
            "range": "± 143.369581990225"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9124.405697631835,
            "unit": "ns",
            "range": "± 103.5209636083618"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13319.618392944336,
            "unit": "ns",
            "range": "± 35.93378005873878"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9894.070967356363,
            "unit": "ns",
            "range": "± 50.62905605499128"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10147.23188273112,
            "unit": "ns",
            "range": "± 37.613470903819795"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8212.207940419516,
            "unit": "ns",
            "range": "± 33.05338891818893"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 146643.15203857422,
            "unit": "ns",
            "range": "± 524.1767475047573"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 43427.21224271334,
            "unit": "ns",
            "range": "± 115.15553722411858"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 52639.98507181803,
            "unit": "ns",
            "range": "± 118.88596562950272"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 55959.185978480746,
            "unit": "ns",
            "range": "± 379.67897555280274"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 90463.25465494792,
            "unit": "ns",
            "range": "± 840.8882932533334"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 111760.62785644531,
            "unit": "ns",
            "range": "± 1363.149401520636"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 53613.989541190014,
            "unit": "ns",
            "range": "± 242.16025476279393"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 39710.61727670523,
            "unit": "ns",
            "range": "± 52.328014511225064"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 53916.6944972447,
            "unit": "ns",
            "range": "± 484.89848756695324"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 81295.86079915364,
            "unit": "ns",
            "range": "± 693.5151618055595"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 55861.121944173174,
            "unit": "ns",
            "range": "± 599.2595362531641"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13257.609184852014,
            "unit": "ns",
            "range": "± 35.10941757642843"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 72719.78556315105,
            "unit": "ns",
            "range": "± 217.20990010687217"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44845.741438802084,
            "unit": "ns",
            "range": "± 129.13825639217407"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 47761.00161743164,
            "unit": "ns",
            "range": "± 192.69792183368003"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 132067.39155273436,
            "unit": "ns",
            "range": "± 1096.5065265615608"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 43154.63174874442,
            "unit": "ns",
            "range": "± 348.52309727345465"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 47704.906537737166,
            "unit": "ns",
            "range": "± 217.59779705495492"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 49529.58162027995,
            "unit": "ns",
            "range": "± 247.79514176649238"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 75579.81719970703,
            "unit": "ns",
            "range": "± 580.5754890070067"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 105536.58612060547,
            "unit": "ns",
            "range": "± 420.8609881547376"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 48728.24876621791,
            "unit": "ns",
            "range": "± 315.97381068534287"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 45245.07514648438,
            "unit": "ns",
            "range": "± 273.317160144257"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 47978.03426106771,
            "unit": "ns",
            "range": "± 394.70585657038583"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 70792.35670572917,
            "unit": "ns",
            "range": "± 515.1538205229086"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 59751.03365885417,
            "unit": "ns",
            "range": "± 124.9001897204584"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13412.097021484375,
            "unit": "ns",
            "range": "± 78.98948039652457"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 64149.41630045573,
            "unit": "ns",
            "range": "± 347.96984828189727"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 46153.7744547526,
            "unit": "ns",
            "range": "± 260.9720541318322"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 44287.02937098912,
            "unit": "ns",
            "range": "± 209.91866673156514"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734653168286,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 140307.10467529297,
            "unit": "ns",
            "range": "± 400.90054982013163"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9513.949490356445,
            "unit": "ns",
            "range": "± 23.575644505618776"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8556.826934814453,
            "unit": "ns",
            "range": "± 20.115082899908288"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8437.228709881123,
            "unit": "ns",
            "range": "± 35.69204023936522"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10370.628978729248,
            "unit": "ns",
            "range": "± 22.452956108719704"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11326.518416849773,
            "unit": "ns",
            "range": "± 109.93393436756783"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8106.370966984676,
            "unit": "ns",
            "range": "± 5.538806993572239"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8395.205472310385,
            "unit": "ns",
            "range": "± 18.42596236065681"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9635.778783944937,
            "unit": "ns",
            "range": "± 56.36237141239692"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11452.162437438965,
            "unit": "ns",
            "range": "± 57.333963812278135"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9308.47411855062,
            "unit": "ns",
            "range": "± 65.58414338330856"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13131.790478633,
            "unit": "ns",
            "range": "± 34.507956673000876"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 11032.09579264323,
            "unit": "ns",
            "range": "± 68.9369271919757"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 9951.64009475708,
            "unit": "ns",
            "range": "± 16.497434187069913"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8027.6673494974775,
            "unit": "ns",
            "range": "± 7.73978047305396"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 149952.94369303386,
            "unit": "ns",
            "range": "± 675.1888957879171"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 44090.82309366862,
            "unit": "ns",
            "range": "± 182.61226521163158"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 45433.1692974384,
            "unit": "ns",
            "range": "± 133.1969150176581"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 50513.903653971356,
            "unit": "ns",
            "range": "± 300.8921198537077"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 85002.4966430664,
            "unit": "ns",
            "range": "± 305.14133739275866"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 108530.40357317243,
            "unit": "ns",
            "range": "± 507.3145077902476"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 51703.100295003256,
            "unit": "ns",
            "range": "± 169.5405154005293"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 40449.8107816256,
            "unit": "ns",
            "range": "± 152.59033019099388"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 51972.998050944014,
            "unit": "ns",
            "range": "± 479.8003909220948"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 81700.00622151693,
            "unit": "ns",
            "range": "± 522.6354027730678"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 57710.80292487867,
            "unit": "ns",
            "range": "± 1817.2383185899082"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13156.374753679547,
            "unit": "ns",
            "range": "± 78.87428027941456"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 74100.74086216518,
            "unit": "ns",
            "range": "± 362.548728719595"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44743.98928019206,
            "unit": "ns",
            "range": "± 340.7156895440602"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 51217.05125325521,
            "unit": "ns",
            "range": "± 126.45003502626918"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 131603.5338483538,
            "unit": "ns",
            "range": "± 451.97495978669707"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44159.32670084635,
            "unit": "ns",
            "range": "± 234.67867706559846"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 42834.24643147786,
            "unit": "ns",
            "range": "± 179.50994315854794"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 53899.6881643442,
            "unit": "ns",
            "range": "± 89.53999672901769"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 76555.56720377604,
            "unit": "ns",
            "range": "± 469.1652979450089"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 104416.4755772182,
            "unit": "ns",
            "range": "± 314.86292362201004"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 46788.82709960938,
            "unit": "ns",
            "range": "± 121.72922781158836"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39863.13764735631,
            "unit": "ns",
            "range": "± 106.60841971481031"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 48405.306006798375,
            "unit": "ns",
            "range": "± 151.97537042716127"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 69973.05686442058,
            "unit": "ns",
            "range": "± 265.10396416120847"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 56845.98685099284,
            "unit": "ns",
            "range": "± 467.13390262849794"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13149.605426025391,
            "unit": "ns",
            "range": "± 42.53326618253652"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 64991.11372884115,
            "unit": "ns",
            "range": "± 324.7353746474488"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 51490.227024332686,
            "unit": "ns",
            "range": "± 114.5898977718057"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 47932.28154209682,
            "unit": "ns",
            "range": "± 157.0420206435577"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747793726,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 137047.904296875,
            "unit": "ns",
            "range": "± 1088.581143841104"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9413.507788085937,
            "unit": "ns",
            "range": "± 111.60905068568249"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8615.386304582868,
            "unit": "ns",
            "range": "± 57.59625270549494"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8425.381814575196,
            "unit": "ns",
            "range": "± 101.27519206154831"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10360.129232553336,
            "unit": "ns",
            "range": "± 12.11717129167386"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11019.768568856376,
            "unit": "ns",
            "range": "± 117.58417842052798"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7981.465089064378,
            "unit": "ns",
            "range": "± 40.16525634593001"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8079.393457685198,
            "unit": "ns",
            "range": "± 61.04053817042673"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9442.388951228215,
            "unit": "ns",
            "range": "± 7.227263416454855"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11041.390969412667,
            "unit": "ns",
            "range": "± 47.30832952524828"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 10104.912701416015,
            "unit": "ns",
            "range": "± 108.8586315351977"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13248.774402618408,
            "unit": "ns",
            "range": "± 20.424445991442546"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10328.060013834636,
            "unit": "ns",
            "range": "± 126.4090632975106"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10359.011962890625,
            "unit": "ns",
            "range": "± 8.999963482142178"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8117.1915700276695,
            "unit": "ns",
            "range": "± 151.03410706046358"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 147187.60303673378,
            "unit": "ns",
            "range": "± 598.3398707664538"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 44159.783518473305,
            "unit": "ns",
            "range": "± 124.98122265968787"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 46200.713174002514,
            "unit": "ns",
            "range": "± 230.47336096559917"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 56140.05272420248,
            "unit": "ns",
            "range": "± 384.4339164772157"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 86056.42855834961,
            "unit": "ns",
            "range": "± 122.12438894287986"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 108670.699412028,
            "unit": "ns",
            "range": "± 298.9864034595972"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 47184.400033133374,
            "unit": "ns",
            "range": "± 159.11782858144016"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 41550.61202494303,
            "unit": "ns",
            "range": "± 99.86789702846295"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 50186.763362630205,
            "unit": "ns",
            "range": "± 518.5701186203081"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 81586.74299723307,
            "unit": "ns",
            "range": "± 1229.1644890427337"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 56556.00761108399,
            "unit": "ns",
            "range": "± 498.84836424287977"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13234.372006929838,
            "unit": "ns",
            "range": "± 18.535737460973774"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 73487.08623395648,
            "unit": "ns",
            "range": "± 578.7099828365544"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44071.006552559986,
            "unit": "ns",
            "range": "± 220.38589051559327"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 48229.2040629069,
            "unit": "ns",
            "range": "± 307.4300142153336"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 135919.19871303014,
            "unit": "ns",
            "range": "± 335.47506109168364"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44646.267333984375,
            "unit": "ns",
            "range": "± 172.12772058519872"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 51190.3887765067,
            "unit": "ns",
            "range": "± 195.40410388871217"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 54845.464869907926,
            "unit": "ns",
            "range": "± 130.91202462287382"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 76485.81243896484,
            "unit": "ns",
            "range": "± 1425.1363806450565"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 100982.11024576823,
            "unit": "ns",
            "range": "± 818.6562572427454"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 45667.220829554964,
            "unit": "ns",
            "range": "± 95.15366789237979"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 41467.186055501305,
            "unit": "ns",
            "range": "± 40.20858534722336"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 53815.780700683594,
            "unit": "ns",
            "range": "± 197.3572642138832"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 69381.39710344587,
            "unit": "ns",
            "range": "± 386.9001953984022"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 57254.01342337472,
            "unit": "ns",
            "range": "± 157.12581424807794"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13237.328545203576,
            "unit": "ns",
            "range": "± 29.218792754558127"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 65494.38787841797,
            "unit": "ns",
            "range": "± 263.00746460381595"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 46244.99838867188,
            "unit": "ns",
            "range": "± 174.4083226742062"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 48237.52985839844,
            "unit": "ns",
            "range": "± 159.93626213187346"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734907457563,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 132666.75201885516,
            "unit": "ns",
            "range": "± 469.79092054771775"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9584.163978068034,
            "unit": "ns",
            "range": "± 88.38259926068653"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8860.84133605957,
            "unit": "ns",
            "range": "± 102.06616322592791"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8362.233469281879,
            "unit": "ns",
            "range": "± 31.05136021495222"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10692.876585642496,
            "unit": "ns",
            "range": "± 26.95988150409428"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11010.396725463866,
            "unit": "ns",
            "range": "± 117.00446608746103"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8266.608738825871,
            "unit": "ns",
            "range": "± 21.800492423187233"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8074.17722269694,
            "unit": "ns",
            "range": "± 101.69902124847566"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 10263.613854726156,
            "unit": "ns",
            "range": "± 5.526285252384248"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10868.298169962565,
            "unit": "ns",
            "range": "± 78.51521663663065"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9098.04454167684,
            "unit": "ns",
            "range": "± 9.658598597797594"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13227.142429896763,
            "unit": "ns",
            "range": "± 56.70671488284787"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9973.45341796875,
            "unit": "ns",
            "range": "± 102.10919575862553"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10486.118694051107,
            "unit": "ns",
            "range": "± 88.54298434137793"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7985.391985575358,
            "unit": "ns",
            "range": "± 5.711317120402143"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 151819.67042759486,
            "unit": "ns",
            "range": "± 1434.8682668207352"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 44380.7595476423,
            "unit": "ns",
            "range": "± 126.23224197263737"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 46485.83662923177,
            "unit": "ns",
            "range": "± 453.1345518478909"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 51620.05377666767,
            "unit": "ns",
            "range": "± 291.68990420362826"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 84578.4674967448,
            "unit": "ns",
            "range": "± 430.0643015005173"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 110598.30618082682,
            "unit": "ns",
            "range": "± 528.3339498062113"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 47190.70922415597,
            "unit": "ns",
            "range": "± 208.78632788011407"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 40152.014591761996,
            "unit": "ns",
            "range": "± 153.88026762901697"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 49276.00886230469,
            "unit": "ns",
            "range": "± 437.10254906581184"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 83642.74772542318,
            "unit": "ns",
            "range": "± 651.1657945139967"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 58536.30070800781,
            "unit": "ns",
            "range": "± 361.88752753198406"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13202.647235576924,
            "unit": "ns",
            "range": "± 20.61979369515581"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 73632.56808035714,
            "unit": "ns",
            "range": "± 630.9898844173841"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 46036.92908121745,
            "unit": "ns",
            "range": "± 181.90223612998912"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 48163.60700334822,
            "unit": "ns",
            "range": "± 135.6157442015296"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 137425.69956752233,
            "unit": "ns",
            "range": "± 456.5279120093592"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44356.03417154948,
            "unit": "ns",
            "range": "± 282.98550322430964"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 51299.62721034459,
            "unit": "ns",
            "range": "± 165.39593447338538"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 49027.63243689904,
            "unit": "ns",
            "range": "± 133.1419607894696"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 73647.73244803293,
            "unit": "ns",
            "range": "± 346.18511576276035"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 101912.45548502605,
            "unit": "ns",
            "range": "± 474.7864053521728"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 47774.82015991211,
            "unit": "ns",
            "range": "± 289.67236026775487"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 46926.40281778971,
            "unit": "ns",
            "range": "± 161.47725592260318"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 50373.383643517125,
            "unit": "ns",
            "range": "± 163.89789458853232"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 68894.97579752604,
            "unit": "ns",
            "range": "± 279.7708566070025"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 55464.97563273112,
            "unit": "ns",
            "range": "± 275.64071239907844"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13496.691808847281,
            "unit": "ns",
            "range": "± 50.07696026952535"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 65800.80510660807,
            "unit": "ns",
            "range": "± 380.01603581508857"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45428.07421439035,
            "unit": "ns",
            "range": "± 190.77101705934402"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 48099.48198242187,
            "unit": "ns",
            "range": "± 154.6060916364665"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735408266547,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 137767.76391601562,
            "unit": "ns",
            "range": "± 901.6837997246138"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9352.222928728375,
            "unit": "ns",
            "range": "± 52.81095432142746"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8706.876799519856,
            "unit": "ns",
            "range": "± 114.2768925944985"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8282.569648742676,
            "unit": "ns",
            "range": "± 8.917653519442661"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10571.993552652995,
            "unit": "ns",
            "range": "± 76.3047198174471"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11588.641517130534,
            "unit": "ns",
            "range": "± 110.59556680192202"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7972.678935124324,
            "unit": "ns",
            "range": "± 4.6169674864895995"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8082.845584869385,
            "unit": "ns",
            "range": "± 22.292759735103346"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9506.994087727864,
            "unit": "ns",
            "range": "± 87.30709184360745"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11048.767888750348,
            "unit": "ns",
            "range": "± 48.31960290216547"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9060.017287118095,
            "unit": "ns",
            "range": "± 45.7537951335774"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13162.321352445162,
            "unit": "ns",
            "range": "± 54.83175976226102"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10454.727621895927,
            "unit": "ns",
            "range": "± 91.73036629992184"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10186.731336466471,
            "unit": "ns",
            "range": "± 103.29342488357973"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8613.092417035785,
            "unit": "ns",
            "range": "± 60.67974476873315"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 147480.2185139974,
            "unit": "ns",
            "range": "± 1153.1511307844908"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 43691.20766339983,
            "unit": "ns",
            "range": "± 196.5017688902514"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 47073.84630911691,
            "unit": "ns",
            "range": "± 267.47971403116094"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 53706.63465372721,
            "unit": "ns",
            "range": "± 43.454829108129395"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 85161.13346354167,
            "unit": "ns",
            "range": "± 399.6548997441244"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 110320.42365722657,
            "unit": "ns",
            "range": "± 646.3043037920106"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 52582.69942220052,
            "unit": "ns",
            "range": "± 323.0658447119256"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 41653.523490397136,
            "unit": "ns",
            "range": "± 328.3701471502175"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 50634.55026245117,
            "unit": "ns",
            "range": "± 317.77404797813205"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 80990.10963541667,
            "unit": "ns",
            "range": "± 708.6457221936834"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 58538.322204589844,
            "unit": "ns",
            "range": "± 170.8642955094337"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13181.158533732096,
            "unit": "ns",
            "range": "± 87.96471252429242"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 73313.17143031528,
            "unit": "ns",
            "range": "± 431.98646512346545"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 42759.17525809152,
            "unit": "ns",
            "range": "± 303.5204124008509"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 47900.1948285784,
            "unit": "ns",
            "range": "± 176.420134789411"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 136068.19163411457,
            "unit": "ns",
            "range": "± 463.7629771729975"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44230.59777396066,
            "unit": "ns",
            "range": "± 163.86895804419942"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 46683.480224609375,
            "unit": "ns",
            "range": "± 196.64307776932426"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 49090.9940232497,
            "unit": "ns",
            "range": "± 85.28340057683938"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 77316.05574253628,
            "unit": "ns",
            "range": "± 349.00630447767105"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 106033.14119059245,
            "unit": "ns",
            "range": "± 594.9196671867783"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 45207.03861345564,
            "unit": "ns",
            "range": "± 71.30161859127188"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 42394.61648966472,
            "unit": "ns",
            "range": "± 143.62075186306532"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 49302.43965657552,
            "unit": "ns",
            "range": "± 214.34657425252274"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 69053.3896525065,
            "unit": "ns",
            "range": "± 465.4050166394565"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 53219.40633283342,
            "unit": "ns",
            "range": "± 342.74602564762205"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13157.419573465982,
            "unit": "ns",
            "range": "± 46.04746654546972"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 65579.60919189453,
            "unit": "ns",
            "range": "± 314.8442005985512"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 46340.60754394531,
            "unit": "ns",
            "range": "± 207.02990844814752"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 44530.12120768229,
            "unit": "ns",
            "range": "± 199.6904047687836"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187973579,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 139738.15305989582,
            "unit": "ns",
            "range": "± 1359.2155146707903"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9568.820400238037,
            "unit": "ns",
            "range": "± 7.853321991929923"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8856.34288259653,
            "unit": "ns",
            "range": "± 13.209634222770273"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8413.277278900146,
            "unit": "ns",
            "range": "± 10.805412233241723"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11329.040378570557,
            "unit": "ns",
            "range": "± 33.19330252167959"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11643.2433497111,
            "unit": "ns",
            "range": "± 13.210317150683087"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8180.117838178362,
            "unit": "ns",
            "range": "± 47.271576679869476"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8061.329529898508,
            "unit": "ns",
            "range": "± 73.99790005910917"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9517.747329711914,
            "unit": "ns",
            "range": "± 57.78975479976811"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11015.562744140625,
            "unit": "ns",
            "range": "± 8.159962987460988"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9248.364035386305,
            "unit": "ns",
            "range": "± 41.510284575884704"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13386.38338294396,
            "unit": "ns",
            "range": "± 54.93188014063418"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10931.573546273368,
            "unit": "ns",
            "range": "± 70.65567845968343"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10010.078305925641,
            "unit": "ns",
            "range": "± 5.290375504957073"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8022.05597795759,
            "unit": "ns",
            "range": "± 9.466000456659623"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 151947.38521321616,
            "unit": "ns",
            "range": "± 1195.5453285709743"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 48121.83202311198,
            "unit": "ns",
            "range": "± 209.5980057146822"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 53396.187735421314,
            "unit": "ns",
            "range": "± 162.3326620272017"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 50938.50842989408,
            "unit": "ns",
            "range": "± 108.43959332046616"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 81777.62818196615,
            "unit": "ns",
            "range": "± 560.6495079779536"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 114280.01169433593,
            "unit": "ns",
            "range": "± 523.6909534287278"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46376.95729573568,
            "unit": "ns",
            "range": "± 144.43146919047854"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 42123.60487467448,
            "unit": "ns",
            "range": "± 175.71370810433206"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 50230.56224278041,
            "unit": "ns",
            "range": "± 162.26939495742394"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 82120.67600504558,
            "unit": "ns",
            "range": "± 236.85021987326238"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54093.18463541667,
            "unit": "ns",
            "range": "± 259.24233410966804"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13269.268284098307,
            "unit": "ns",
            "range": "± 56.81375823071724"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 73925.89292555589,
            "unit": "ns",
            "range": "± 210.81638152877105"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44769.54122314453,
            "unit": "ns",
            "range": "± 154.85892295538218"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 46595.088126046314,
            "unit": "ns",
            "range": "± 89.33957950644601"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 133188.26171875,
            "unit": "ns",
            "range": "± 424.4039911716747"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 43861.40489908854,
            "unit": "ns",
            "range": "± 194.34314917864768"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 44894.617213948564,
            "unit": "ns",
            "range": "± 147.175954267924"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 48458.711299351286,
            "unit": "ns",
            "range": "± 147.44401310652063"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 75820.51459612165,
            "unit": "ns",
            "range": "± 204.4977966190751"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 104171.72176688058,
            "unit": "ns",
            "range": "± 276.61735721340625"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 47852.15201241629,
            "unit": "ns",
            "range": "± 167.56786328874452"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 41305.58537190755,
            "unit": "ns",
            "range": "± 218.14728043559103"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 50748.459446498324,
            "unit": "ns",
            "range": "± 162.9876510064196"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 80603.2340983073,
            "unit": "ns",
            "range": "± 435.7142146161696"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 55673.514213053386,
            "unit": "ns",
            "range": "± 175.86268409881652"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13241.376875741142,
            "unit": "ns",
            "range": "± 72.07676965795666"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 66027.80878557477,
            "unit": "ns",
            "range": "± 177.29332903908528"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 43505.02493489583,
            "unit": "ns",
            "range": "± 223.86546743468455"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 46159.40760498047,
            "unit": "ns",
            "range": "± 147.73506519658488"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283755664,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 135333.3490641276,
            "unit": "ns",
            "range": "± 673.3854889005456"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9614.534286499023,
            "unit": "ns",
            "range": "± 55.91232760626154"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 9381.766404215496,
            "unit": "ns",
            "range": "± 56.60696945432957"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8389.59108558068,
            "unit": "ns",
            "range": "± 6.4284209572289"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10476.448200480143,
            "unit": "ns",
            "range": "± 88.02583013769627"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10944.860567365375,
            "unit": "ns",
            "range": "± 40.67851950489173"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8177.662038949819,
            "unit": "ns",
            "range": "± 19.206862658536096"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8429.618076578776,
            "unit": "ns",
            "range": "± 71.6358713515565"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 10355.686335245768,
            "unit": "ns",
            "range": "± 55.611122900341634"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11197.985867091587,
            "unit": "ns",
            "range": "± 15.712028050309526"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9552.275979614258,
            "unit": "ns",
            "range": "± 140.41715511294345"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13276.235203334263,
            "unit": "ns",
            "range": "± 56.783702655202724"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10829.74680887858,
            "unit": "ns",
            "range": "± 38.61011449991047"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10885.284637451172,
            "unit": "ns",
            "range": "± 50.803167332302046"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8052.3309010096955,
            "unit": "ns",
            "range": "± 37.505521635836466"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 149790.6336669922,
            "unit": "ns",
            "range": "± 512.7966034520223"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 46087.399489339194,
            "unit": "ns",
            "range": "± 240.3712040155556"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 47863.35115559896,
            "unit": "ns",
            "range": "± 210.35862805060492"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 49848.21734212239,
            "unit": "ns",
            "range": "± 202.80758458116566"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 82364.6632952009,
            "unit": "ns",
            "range": "± 414.9876769258025"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 113354.8466796875,
            "unit": "ns",
            "range": "± 486.31195964300525"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 45627.85000813802,
            "unit": "ns",
            "range": "± 296.74910647214284"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 39391.02185494559,
            "unit": "ns",
            "range": "± 129.72145505148632"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 49443.37321370443,
            "unit": "ns",
            "range": "± 171.68433841134765"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 82802.40062604632,
            "unit": "ns",
            "range": "± 260.2881198821584"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 60542.05300467355,
            "unit": "ns",
            "range": "± 281.5007252975144"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13236.677713012696,
            "unit": "ns",
            "range": "± 54.51581624952081"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 75541.39237758091,
            "unit": "ns",
            "range": "± 296.5796706830874"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 48524.14447631836,
            "unit": "ns",
            "range": "± 168.0967969349906"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 45466.73062133789,
            "unit": "ns",
            "range": "± 143.6339928936286"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 135608.36030273436,
            "unit": "ns",
            "range": "± 379.345709957869"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44851.08054460798,
            "unit": "ns",
            "range": "± 137.8108372470431"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 44400.23122965495,
            "unit": "ns",
            "range": "± 188.18292108993145"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 50588.61626180013,
            "unit": "ns",
            "range": "± 112.83859104829986"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 78812.51842447916,
            "unit": "ns",
            "range": "± 301.9609259061773"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 104779.70458984375,
            "unit": "ns",
            "range": "± 174.2662552068153"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 50849.25894601004,
            "unit": "ns",
            "range": "± 152.09991910455918"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 47919.061063639325,
            "unit": "ns",
            "range": "± 144.25409936822413"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 47246.920463053386,
            "unit": "ns",
            "range": "± 118.91062458928018"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 70680.06101888021,
            "unit": "ns",
            "range": "± 354.1651233941251"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 53379.350529261996,
            "unit": "ns",
            "range": "± 182.71272779931138"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13219.611302185058,
            "unit": "ns",
            "range": "± 33.150091301487016"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 68893.94174804687,
            "unit": "ns",
            "range": "± 235.68054393581735"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45339.07775472005,
            "unit": "ns",
            "range": "± 164.19844034017123"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 46536.59129987444,
            "unit": "ns",
            "range": "± 84.2298293758605"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376815149,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 142482.66135951452,
            "unit": "ns",
            "range": "± 744.4192023052959"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9983.43198939732,
            "unit": "ns",
            "range": "± 64.9760400719387"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 9129.167697906494,
            "unit": "ns",
            "range": "± 10.886126904460998"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8523.906255449567,
            "unit": "ns",
            "range": "± 38.71523725816176"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11187.462481907436,
            "unit": "ns",
            "range": "± 39.08018132305712"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11548.3910252889,
            "unit": "ns",
            "range": "± 62.12531542111669"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8044.154946463449,
            "unit": "ns",
            "range": "± 61.56412407273199"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8008.046657855694,
            "unit": "ns",
            "range": "± 28.50300505170774"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9704.328500366211,
            "unit": "ns",
            "range": "± 72.27720214548457"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10899.951789855957,
            "unit": "ns",
            "range": "± 53.30742179479137"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9242.872856140137,
            "unit": "ns",
            "range": "± 17.581798448245532"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13410.53946838379,
            "unit": "ns",
            "range": "± 48.829685979129344"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10539.619002278645,
            "unit": "ns",
            "range": "± 44.5762427238513"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10102.14944152832,
            "unit": "ns",
            "range": "± 45.15521038157946"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8333.8717313494,
            "unit": "ns",
            "range": "± 72.98737781172501"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 150039.95620117188,
            "unit": "ns",
            "range": "± 759.8765690253556"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 48356.55004679362,
            "unit": "ns",
            "range": "± 142.73019635777393"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 49852.66955566406,
            "unit": "ns",
            "range": "± 126.96550602252537"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 50813.26495797293,
            "unit": "ns",
            "range": "± 114.83941861664647"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 83520.8246459961,
            "unit": "ns",
            "range": "± 493.32706148769086"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 113307.89186604817,
            "unit": "ns",
            "range": "± 515.17208663851"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46275.261954171314,
            "unit": "ns",
            "range": "± 293.3416219463806"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 41463.88812764486,
            "unit": "ns",
            "range": "± 76.48017923991745"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 50305.442427571616,
            "unit": "ns",
            "range": "± 174.59305372504855"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 81452.73718261719,
            "unit": "ns",
            "range": "± 384.3070589721805"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 60109.18942495493,
            "unit": "ns",
            "range": "± 276.3847035905806"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13196.541193280902,
            "unit": "ns",
            "range": "± 68.81391790621586"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 76674.52689615886,
            "unit": "ns",
            "range": "± 376.7296227863053"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 46303.1428903433,
            "unit": "ns",
            "range": "± 187.58483553278242"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 48949.981842041016,
            "unit": "ns",
            "range": "± 128.25551095284453"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 129934.10673014323,
            "unit": "ns",
            "range": "± 210.02973704518897"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44566.947736467635,
            "unit": "ns",
            "range": "± 192.73867390755638"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 44914.01177775065,
            "unit": "ns",
            "range": "± 164.14881634467633"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 48306.566606794084,
            "unit": "ns",
            "range": "± 151.37613598450025"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 79363.9895345052,
            "unit": "ns",
            "range": "± 293.6322871334274"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 104645.4861694336,
            "unit": "ns",
            "range": "± 215.8535078373614"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 49753.2376839774,
            "unit": "ns",
            "range": "± 146.24181849779677"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39684.67443847656,
            "unit": "ns",
            "range": "± 110.26088553109925"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 47893.5515965053,
            "unit": "ns",
            "range": "± 155.9200110213186"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 70345.93326416015,
            "unit": "ns",
            "range": "± 269.28345201568555"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 53659.18357195173,
            "unit": "ns",
            "range": "± 167.72767368479668"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13277.781201876127,
            "unit": "ns",
            "range": "± 34.93108185692229"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 66122.69049479166,
            "unit": "ns",
            "range": "± 152.49733919588553"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 50817.726951090495,
            "unit": "ns",
            "range": "± 220.1846035144121"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 45684.23422241211,
            "unit": "ns",
            "range": "± 93.18350240350715"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736462566600,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 141205.38413085937,
            "unit": "ns",
            "range": "± 619.7895814937231"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9672.130260760967,
            "unit": "ns",
            "range": "± 16.02782262784193"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8999.613680326021,
            "unit": "ns",
            "range": "± 25.860655348339513"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8459.788720448812,
            "unit": "ns",
            "range": "± 6.969684095776569"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11101.332498168946,
            "unit": "ns",
            "range": "± 76.32950468836417"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10918.974713643393,
            "unit": "ns",
            "range": "± 21.17711754393642"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8124.404929024832,
            "unit": "ns",
            "range": "± 61.12639633512108"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8014.812472752163,
            "unit": "ns",
            "range": "± 69.00778600791851"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 10346.707904522236,
            "unit": "ns",
            "range": "± 27.60767479546205"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11664.388837687175,
            "unit": "ns",
            "range": "± 73.93207485455876"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9165.411294301352,
            "unit": "ns",
            "range": "± 6.178102609642555"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13241.967234802247,
            "unit": "ns",
            "range": "± 58.29384756749732"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10723.030992126465,
            "unit": "ns",
            "range": "± 110.41968240719913"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10549.016521199545,
            "unit": "ns",
            "range": "± 67.06031213453025"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8231.14672088623,
            "unit": "ns",
            "range": "± 50.03353790933051"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 151581.4380405971,
            "unit": "ns",
            "range": "± 408.93911347546623"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 45119.27858479818,
            "unit": "ns",
            "range": "± 255.05604914242085"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 50028.26388315054,
            "unit": "ns",
            "range": "± 139.45092591936796"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 54421.95639241536,
            "unit": "ns",
            "range": "± 202.7800839782731"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 86534.39658028739,
            "unit": "ns",
            "range": "± 193.0621822763561"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 115806.66665039063,
            "unit": "ns",
            "range": "± 447.9317861802186"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46861.939208984375,
            "unit": "ns",
            "range": "± 219.64614652246595"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 41361.88926478795,
            "unit": "ns",
            "range": "± 462.6714951438967"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 47400.76250281701,
            "unit": "ns",
            "range": "± 160.33148745607278"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 82292.4400390625,
            "unit": "ns",
            "range": "± 482.3291637031258"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 57000.31996808733,
            "unit": "ns",
            "range": "± 237.76811536352741"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13236.838845825196,
            "unit": "ns",
            "range": "± 89.61527196562287"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 78505.54314778646,
            "unit": "ns",
            "range": "± 239.30289092697745"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 46565.073704020186,
            "unit": "ns",
            "range": "± 166.62200673232707"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 46106.19327218192,
            "unit": "ns",
            "range": "± 139.5517051867157"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 134529.1384358724,
            "unit": "ns",
            "range": "± 725.9703123617222"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 45639.620115153,
            "unit": "ns",
            "range": "± 277.07075522392154"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 48055.90586344401,
            "unit": "ns",
            "range": "± 216.7769054582244"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 49045.77682059152,
            "unit": "ns",
            "range": "± 222.76763222717665"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 77181.01717529297,
            "unit": "ns",
            "range": "± 404.0963903697538"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 105201.08793422153,
            "unit": "ns",
            "range": "± 269.9390203556238"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 46951.2900390625,
            "unit": "ns",
            "range": "± 191.97353757365954"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39196.71495768229,
            "unit": "ns",
            "range": "± 216.36192398506594"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 48329.71829630534,
            "unit": "ns",
            "range": "± 277.6833694782105"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 75714.20124162946,
            "unit": "ns",
            "range": "± 271.068512600744"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 56287.462681361605,
            "unit": "ns",
            "range": "± 159.0068907946432"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13130.447911580404,
            "unit": "ns",
            "range": "± 57.77769824578567"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 66378.08685772236,
            "unit": "ns",
            "range": "± 169.547264623502"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44814.09463297526,
            "unit": "ns",
            "range": "± 120.72566767104215"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 45793.793123372394,
            "unit": "ns",
            "range": "± 123.08805931442609"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736480354768,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 136896.9878627232,
            "unit": "ns",
            "range": "± 686.1708464462495"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10386.263629150391,
            "unit": "ns",
            "range": "± 67.52170230863292"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 9094.815487452915,
            "unit": "ns",
            "range": "± 48.07430333409764"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8392.836911010741,
            "unit": "ns",
            "range": "± 67.72082101936124"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11421.724169413248,
            "unit": "ns",
            "range": "± 53.83346562174139"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11065.442576090494,
            "unit": "ns",
            "range": "± 43.718646095697636"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8331.59164755685,
            "unit": "ns",
            "range": "± 66.20368235075223"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8568.302554539272,
            "unit": "ns",
            "range": "± 66.09769223937005"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 10135.010464008037,
            "unit": "ns",
            "range": "± 38.2415761712574"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11248.232325236002,
            "unit": "ns",
            "range": "± 38.199399921199"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9470.730044773647,
            "unit": "ns",
            "range": "± 52.31143199386267"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13214.03780423678,
            "unit": "ns",
            "range": "± 82.08460675127935"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 11024.277420552571,
            "unit": "ns",
            "range": "± 45.88392069709525"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10305.305171421596,
            "unit": "ns",
            "range": "± 16.75965140680476"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8248.671567644391,
            "unit": "ns",
            "range": "± 80.73204309312594"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 147076.83997395833,
            "unit": "ns",
            "range": "± 738.46648334941"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 44668.412288411455,
            "unit": "ns",
            "range": "± 150.10306678375477"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 44107.904994419645,
            "unit": "ns",
            "range": "± 251.96670615703664"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 56427.306131998695,
            "unit": "ns",
            "range": "± 251.094357630245"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 85667.76636614118,
            "unit": "ns",
            "range": "± 363.19994340743807"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 112169.51591796875,
            "unit": "ns",
            "range": "± 684.1270581183103"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 45645.02222115653,
            "unit": "ns",
            "range": "± 238.70287452168043"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 39596.76480102539,
            "unit": "ns",
            "range": "± 197.90035723639798"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 58538.67077636719,
            "unit": "ns",
            "range": "± 202.3161719163419"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 83354.65418294272,
            "unit": "ns",
            "range": "± 356.88666083704607"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54264.82262714092,
            "unit": "ns",
            "range": "± 255.8467506556748"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13133.305378253643,
            "unit": "ns",
            "range": "± 32.592310803901334"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 78056.21623347356,
            "unit": "ns",
            "range": "± 377.27399725068"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45236.165356445315,
            "unit": "ns",
            "range": "± 247.82757004034482"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 45826.916044108075,
            "unit": "ns",
            "range": "± 178.49071974803775"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 133193.9775216239,
            "unit": "ns",
            "range": "± 618.9804498087278"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 45088.90583089193,
            "unit": "ns",
            "range": "± 245.83529679004593"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 46472.43312726702,
            "unit": "ns",
            "range": "± 194.8367176575415"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 52572.08516845703,
            "unit": "ns",
            "range": "± 143.07173143808754"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 76958.57751057943,
            "unit": "ns",
            "range": "± 359.0979723072091"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 108505.60756138393,
            "unit": "ns",
            "range": "± 202.34131448169268"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 45552.24128941127,
            "unit": "ns",
            "range": "± 102.12695070137318"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 40665.38407389323,
            "unit": "ns",
            "range": "± 383.1814786805595"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 56757.85710261418,
            "unit": "ns",
            "range": "± 132.12988551368827"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 74230.85083821615,
            "unit": "ns",
            "range": "± 375.00282947931566"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 54485.26374598912,
            "unit": "ns",
            "range": "± 174.68777996264646"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13229.727587890626,
            "unit": "ns",
            "range": "± 52.205894906950284"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 67005.15309651692,
            "unit": "ns",
            "range": "± 395.2605864679497"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45222.10866605319,
            "unit": "ns",
            "range": "± 195.41624523926956"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 46777.727486746655,
            "unit": "ns",
            "range": "± 166.7335432417075"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736554196194,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 136172.2372872489,
            "unit": "ns",
            "range": "± 390.8368342674588"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10395.822964986166,
            "unit": "ns",
            "range": "± 11.91833596751983"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 9790.729382324218,
            "unit": "ns",
            "range": "± 59.16840411465536"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8664.812072753906,
            "unit": "ns",
            "range": "± 116.2797475503126"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10739.463729858398,
            "unit": "ns",
            "range": "± 52.897346571961435"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10880.70378672282,
            "unit": "ns",
            "range": "± 78.92426003770619"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8275.188331017127,
            "unit": "ns",
            "range": "± 32.510057131113854"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8561.32284037272,
            "unit": "ns",
            "range": "± 51.613858302237006"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 10468.517157999675,
            "unit": "ns",
            "range": "± 50.49791937287181"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10967.94262084961,
            "unit": "ns",
            "range": "± 65.2727058708239"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9355.351819719586,
            "unit": "ns",
            "range": "± 70.02424015458978"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13266.247862008902,
            "unit": "ns",
            "range": "± 45.9282760697308"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 11008.858109694262,
            "unit": "ns",
            "range": "± 63.163987396115026"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10532.547402445476,
            "unit": "ns",
            "range": "± 64.8601509602821"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8126.81147257487,
            "unit": "ns",
            "range": "± 46.66445300679058"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 148445.84770856585,
            "unit": "ns",
            "range": "± 873.3799080654794"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 44299.73904418945,
            "unit": "ns",
            "range": "± 143.8734850411108"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 47695.38335571289,
            "unit": "ns",
            "range": "± 403.4921587532097"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 48418.25911603655,
            "unit": "ns",
            "range": "± 199.20567235480078"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 86740.63890729632,
            "unit": "ns",
            "range": "± 746.2247706618246"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 112290.4478149414,
            "unit": "ns",
            "range": "± 646.7298600314841"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46328.13506673177,
            "unit": "ns",
            "range": "± 256.9906329252124"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36867.66169230143,
            "unit": "ns",
            "range": "± 234.83068185638447"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 51162.00389317104,
            "unit": "ns",
            "range": "± 151.49482449967775"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 83587.64489746094,
            "unit": "ns",
            "range": "± 582.3040068061508"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54394.97810058594,
            "unit": "ns",
            "range": "± 251.89954072675815"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13206.58682607015,
            "unit": "ns",
            "range": "± 124.94295962168586"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 76099.60151018415,
            "unit": "ns",
            "range": "± 255.86736249884217"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 47449.13034929548,
            "unit": "ns",
            "range": "± 184.5734031955955"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 45758.906677246094,
            "unit": "ns",
            "range": "± 118.56923759860729"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 136748.77819010417,
            "unit": "ns",
            "range": "± 812.6785877910565"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 51641.32787068685,
            "unit": "ns",
            "range": "± 189.0134916952911"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 45391.19853428432,
            "unit": "ns",
            "range": "± 196.70119614133088"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 47841.83310953776,
            "unit": "ns",
            "range": "± 122.11354186411805"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 76987.36938883463,
            "unit": "ns",
            "range": "± 359.6497363785719"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 113181.60971505301,
            "unit": "ns",
            "range": "± 434.1297498257999"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 51865.44428429237,
            "unit": "ns",
            "range": "± 208.1511686022025"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 40099.185856119795,
            "unit": "ns",
            "range": "± 205.4686026224485"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 53955.21229654948,
            "unit": "ns",
            "range": "± 289.8418342292874"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 71766.6000453404,
            "unit": "ns",
            "range": "± 231.0448376428777"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 52910.328985595705,
            "unit": "ns",
            "range": "± 196.48455716542844"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13156.083208356586,
            "unit": "ns",
            "range": "± 31.926265983938723"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 68105.25324503581,
            "unit": "ns",
            "range": "± 194.64043496931865"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 51190.44704182943,
            "unit": "ns",
            "range": "± 250.08416884755792"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 45320.639387864336,
            "unit": "ns",
            "range": "± 47.39267786137969"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736656419728,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 133627.85428873697,
            "unit": "ns",
            "range": "± 476.76252772778724"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9724.700891113282,
            "unit": "ns",
            "range": "± 77.6327665250521"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8673.70634765625,
            "unit": "ns",
            "range": "± 44.690318680145204"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8581.875658475436,
            "unit": "ns",
            "range": "± 23.286031666909196"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11272.223764038086,
            "unit": "ns",
            "range": "± 85.38983460390303"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10956.259860447475,
            "unit": "ns",
            "range": "± 55.15093660876976"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8150.498831431071,
            "unit": "ns",
            "range": "± 16.842649277688444"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8171.190244234525,
            "unit": "ns",
            "range": "± 25.8762958327796"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9991.728338388297,
            "unit": "ns",
            "range": "± 50.236156478006194"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11165.660518939678,
            "unit": "ns",
            "range": "± 16.337961183802612"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9139.375338040865,
            "unit": "ns",
            "range": "± 30.500240114411326"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13169.791283743722,
            "unit": "ns",
            "range": "± 57.0332275376879"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10421.322002156576,
            "unit": "ns",
            "range": "± 47.64191369951007"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10689.009871927898,
            "unit": "ns",
            "range": "± 48.32477247600589"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8176.474721636091,
            "unit": "ns",
            "range": "± 50.118990163119655"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 148227.42168317523,
            "unit": "ns",
            "range": "± 426.6764133070753"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 45960.59141031901,
            "unit": "ns",
            "range": "± 204.05988764005303"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 50258.953630719865,
            "unit": "ns",
            "range": "± 216.70481418302"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 48120.19919637044,
            "unit": "ns",
            "range": "± 134.70298484373373"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 88584.96126302083,
            "unit": "ns",
            "range": "± 231.90621745646368"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 111601.5493774414,
            "unit": "ns",
            "range": "± 551.4736106330446"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46611.29323120117,
            "unit": "ns",
            "range": "± 189.12950352969824"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 39769.929251534595,
            "unit": "ns",
            "range": "± 132.80117356838187"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 48540.422487386066,
            "unit": "ns",
            "range": "± 318.8690900252152"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 83916.96442522321,
            "unit": "ns",
            "range": "± 413.2257462170667"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 53713.417427571614,
            "unit": "ns",
            "range": "± 230.45101337423515"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13173.991618347169,
            "unit": "ns",
            "range": "± 51.29868327013061"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 78281.21018066406,
            "unit": "ns",
            "range": "± 230.00377265034038"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 50015.86195882162,
            "unit": "ns",
            "range": "± 168.5693989451323"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 50868.16532796224,
            "unit": "ns",
            "range": "± 159.37625668947092"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 134530.15434570314,
            "unit": "ns",
            "range": "± 542.1946696171921"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44729.91287231445,
            "unit": "ns",
            "range": "± 245.6039302152068"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 44114.80796595982,
            "unit": "ns",
            "range": "± 132.1125160827463"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 49757.175354003906,
            "unit": "ns",
            "range": "± 110.89576163111836"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 77859.37894694011,
            "unit": "ns",
            "range": "± 1155.7645011146947"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 108111.03034667969,
            "unit": "ns",
            "range": "± 290.82062198627136"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 50809.389259847005,
            "unit": "ns",
            "range": "± 106.22017249039655"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 40819.613415057844,
            "unit": "ns",
            "range": "± 101.08598136901942"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 48560.481280517575,
            "unit": "ns",
            "range": "± 137.2249896693908"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 73384.12916782925,
            "unit": "ns",
            "range": "± 202.56098837626539"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 54877.70831298828,
            "unit": "ns",
            "range": "± 132.32665282020582"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13174.33532169887,
            "unit": "ns",
            "range": "± 47.16793911426157"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 72133.12661977914,
            "unit": "ns",
            "range": "± 146.79974997998232"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45494.63528442383,
            "unit": "ns",
            "range": "± 123.7802161235152"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 45653.9400390625,
            "unit": "ns",
            "range": "± 110.19462603682699"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254655621,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 132193.0472981771,
            "unit": "ns",
            "range": "± 878.8228786454554"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 9584.176526896159,
            "unit": "ns",
            "range": "± 68.0066018378968"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 9432.144900730678,
            "unit": "ns",
            "range": "± 36.18582792933971"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8428.215379842122,
            "unit": "ns",
            "range": "± 62.393957290845144"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 10734.068302408854,
            "unit": "ns",
            "range": "± 78.17991171498133"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 10898.772641863141,
            "unit": "ns",
            "range": "± 52.06974954287974"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8012.972911541278,
            "unit": "ns",
            "range": "± 32.763286425027744"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8108.689125061035,
            "unit": "ns",
            "range": "± 39.8505000165011"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 10248.442920939127,
            "unit": "ns",
            "range": "± 76.85065779658127"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 10872.545019022624,
            "unit": "ns",
            "range": "± 68.36683948915783"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 9676.012705121722,
            "unit": "ns",
            "range": "± 56.48223349205691"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13083.317027791341,
            "unit": "ns",
            "range": "± 51.41304898935218"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10000.886726966271,
            "unit": "ns",
            "range": "± 15.510565499679977"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 10128.133151245118,
            "unit": "ns",
            "range": "± 56.21655918166412"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8191.618300217849,
            "unit": "ns",
            "range": "± 17.109470074850087"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 159137.36401367188,
            "unit": "ns",
            "range": "± 842.1005916136537"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 46711.43405761719,
            "unit": "ns",
            "range": "± 190.24616862804757"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 44798.88752092634,
            "unit": "ns",
            "range": "± 168.13681477382704"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 51219.78178992638,
            "unit": "ns",
            "range": "± 115.93196145237852"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 85427.78302940956,
            "unit": "ns",
            "range": "± 261.6972648674664"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 111472.54664306641,
            "unit": "ns",
            "range": "± 692.1214867514846"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 49024.51474202474,
            "unit": "ns",
            "range": "± 192.4400723737373"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 40774.97739868164,
            "unit": "ns",
            "range": "± 217.11190294220074"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 50064.074094645184,
            "unit": "ns",
            "range": "± 183.00373624530886"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 82682.58116861978,
            "unit": "ns",
            "range": "± 324.9380850957567"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54014.42395629883,
            "unit": "ns",
            "range": "± 986.5982901262284"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13446.770048875074,
            "unit": "ns",
            "range": "± 30.775520409422384"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 76299.7029157366,
            "unit": "ns",
            "range": "± 317.06768268501173"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45767.96036202567,
            "unit": "ns",
            "range": "± 115.7889099764509"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 45831.86451416016,
            "unit": "ns",
            "range": "± 86.47917356445146"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 133502.05514322917,
            "unit": "ns",
            "range": "± 234.15432170884552"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44444.505959065755,
            "unit": "ns",
            "range": "± 198.6813854385309"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 44932.54643351237,
            "unit": "ns",
            "range": "± 198.90396537494314"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 51725.0916015625,
            "unit": "ns",
            "range": "± 126.3502849562068"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 73186.49365234375,
            "unit": "ns",
            "range": "± 129.26644301863496"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 105228.63075474331,
            "unit": "ns",
            "range": "± 376.52555396579635"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 50416.26636446439,
            "unit": "ns",
            "range": "± 68.10447259709272"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 40030.09646809896,
            "unit": "ns",
            "range": "± 107.03809184955462"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 48126.14639485677,
            "unit": "ns",
            "range": "± 188.19834282783867"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 70658.17078857422,
            "unit": "ns",
            "range": "± 468.2470155324823"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 57475.89729410807,
            "unit": "ns",
            "range": "± 316.5648406803293"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13201.307869466145,
            "unit": "ns",
            "range": "± 43.926655664097595"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 66767.50339181082,
            "unit": "ns",
            "range": "± 291.0271671604712"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45823.47047322591,
            "unit": "ns",
            "range": "± 158.24979853695677"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 46269.4719523112,
            "unit": "ns",
            "range": "± 191.6848358664568"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737789302542,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 136928.0200846354,
            "unit": "ns",
            "range": "± 989.9701529111599"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10583.62721455892,
            "unit": "ns",
            "range": "± 63.786703538009625"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 9731.016811116537,
            "unit": "ns",
            "range": "± 62.39170813639572"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 10263.158586774554,
            "unit": "ns",
            "range": "± 37.796220318560145"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11872.819384061373,
            "unit": "ns",
            "range": "± 27.206534939411814"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 11953.692310039814,
            "unit": "ns",
            "range": "± 11.502493613065132"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 9746.427215576172,
            "unit": "ns",
            "range": "± 21.08707036621337"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 9447.624994550433,
            "unit": "ns",
            "range": "± 66.55791512750656"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 11371.280602088342,
            "unit": "ns",
            "range": "± 83.41528381384516"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 12441.682820638021,
            "unit": "ns",
            "range": "± 92.82996542464751"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 10352.698003496442,
            "unit": "ns",
            "range": "± 77.15592048932223"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13212.291879272461,
            "unit": "ns",
            "range": "± 72.80731972754116"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 11388.092608860561,
            "unit": "ns",
            "range": "± 24.729561466172544"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 11788.85638972691,
            "unit": "ns",
            "range": "± 67.04640694658893"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 9996.933787027994,
            "unit": "ns",
            "range": "± 6.165970630677986"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 153447.64156901042,
            "unit": "ns",
            "range": "± 1144.793462593954"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 57389.930363581734,
            "unit": "ns",
            "range": "± 160.11256688894952"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 50734.58495657785,
            "unit": "ns",
            "range": "± 410.31294263556526"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 53018.558388846264,
            "unit": "ns",
            "range": "± 285.9233146622775"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 84875.81264085036,
            "unit": "ns",
            "range": "± 299.6527384093231"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 113041.15301106771,
            "unit": "ns",
            "range": "± 441.1671130331951"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 50864.47089930943,
            "unit": "ns",
            "range": "± 286.76150690121216"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 54691.753670828686,
            "unit": "ns",
            "range": "± 101.77469250994858"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 50753.42206013997,
            "unit": "ns",
            "range": "± 463.96724173072124"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 91183.55668945312,
            "unit": "ns",
            "range": "± 460.69718712050457"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 57943.448931012834,
            "unit": "ns",
            "range": "± 290.587010284242"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13377.189421517509,
            "unit": "ns",
            "range": "± 56.11973312767377"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 80160.1530843099,
            "unit": "ns",
            "range": "± 417.9287761638553"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 64824.16249302455,
            "unit": "ns",
            "range": "± 246.2731589598443"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 50406.03153404823,
            "unit": "ns",
            "range": "± 264.28608110516035"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 138036.93575613838,
            "unit": "ns",
            "range": "± 698.6007572532828"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 59409.79310709635,
            "unit": "ns",
            "range": "± 262.6784202911239"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 50340.90925011268,
            "unit": "ns",
            "range": "± 147.46278354656158"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 52759.96773856027,
            "unit": "ns",
            "range": "± 174.18368186993453"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 76391.32135009766,
            "unit": "ns",
            "range": "± 338.3551002996942"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 105523.95346773588,
            "unit": "ns",
            "range": "± 252.48638573918595"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 48127.29275105794,
            "unit": "ns",
            "range": "± 185.33887012642285"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 58684.079130045575,
            "unit": "ns",
            "range": "± 188.62411481851842"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 51651.299857584636,
            "unit": "ns",
            "range": "± 204.83434899417932"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 79485.46022135417,
            "unit": "ns",
            "range": "± 390.191881219979"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 61642.18040248326,
            "unit": "ns",
            "range": "± 385.457799446783"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13243.263333129882,
            "unit": "ns",
            "range": "± 55.92300985558175"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 68640.15238850912,
            "unit": "ns",
            "range": "± 316.32625763264883"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 62401.34786283053,
            "unit": "ns",
            "range": "± 157.6094668931589"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 49823.21340942383,
            "unit": "ns",
            "range": "± 151.8034995788223"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738051106294,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 135588.63720703125,
            "unit": "ns",
            "range": "± 840.2762224291449"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 11281.335141863141,
            "unit": "ns",
            "range": "± 63.71510745994338"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 10152.229843139648,
            "unit": "ns",
            "range": "± 103.5701489628132"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 10304.8130666097,
            "unit": "ns",
            "range": "± 73.77966964208692"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11881.809378560383,
            "unit": "ns",
            "range": "± 92.97474941579475"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 12257.578094482422,
            "unit": "ns",
            "range": "± 25.98482136497096"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 10592.523233032227,
            "unit": "ns",
            "range": "± 75.44344745595754"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 9965.100286865234,
            "unit": "ns",
            "range": "± 66.39346411912922"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 11298.341781616211,
            "unit": "ns",
            "range": "± 132.52870650903225"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 13446.077546255929,
            "unit": "ns",
            "range": "± 91.07237098674258"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 10998.223771231515,
            "unit": "ns",
            "range": "± 43.54721079882793"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 13253.555388387043,
            "unit": "ns",
            "range": "± 61.01494688293245"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 11777.16362508138,
            "unit": "ns",
            "range": "± 63.9566871506609"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 11451.783973185222,
            "unit": "ns",
            "range": "± 49.14348745262108"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 10952.489778645833,
            "unit": "ns",
            "range": "± 53.95297949332024"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 154604.94926757814,
            "unit": "ns",
            "range": "± 836.6749924891553"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 62772.90440673828,
            "unit": "ns",
            "range": "± 248.70257698196903"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 46843.45360020229,
            "unit": "ns",
            "range": "± 260.50455607892883"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 52418.854322160994,
            "unit": "ns",
            "range": "± 129.97679526549413"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 85762.50091552734,
            "unit": "ns",
            "range": "± 601.4322494199087"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 111238.94307163784,
            "unit": "ns",
            "range": "± 397.8789583471161"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 48588.764060465495,
            "unit": "ns",
            "range": "± 213.26553643693816"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 54254.457314627514,
            "unit": "ns",
            "range": "± 143.63766290121376"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 52319.87673950195,
            "unit": "ns",
            "range": "± 238.84945232219215"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 88628.70319073017,
            "unit": "ns",
            "range": "± 332.22475449590814"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 56886.93931070963,
            "unit": "ns",
            "range": "± 238.17666286409016"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 13277.951144917806,
            "unit": "ns",
            "range": "± 46.00968910384663"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 77168.72162272135,
            "unit": "ns",
            "range": "± 287.45137774949666"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 58809.53291015625,
            "unit": "ns",
            "range": "± 271.04941047966014"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 54325.355594889326,
            "unit": "ns",
            "range": "± 207.4002240034008"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 136752.0326960637,
            "unit": "ns",
            "range": "± 319.2271942376686"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 58731.52648925781,
            "unit": "ns",
            "range": "± 209.81312062529295"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 51806.67133585612,
            "unit": "ns",
            "range": "± 139.92036245190772"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 50752.58029174805,
            "unit": "ns",
            "range": "± 206.10703177861282"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 77841.41609409878,
            "unit": "ns",
            "range": "± 178.69596591045146"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 111079.66927897136,
            "unit": "ns",
            "range": "± 551.2919770209422"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 48997.14329310826,
            "unit": "ns",
            "range": "± 189.4988040643422"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 53906.807364908855,
            "unit": "ns",
            "range": "± 191.5258654330531"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 51448.53008597238,
            "unit": "ns",
            "range": "± 216.43447786290184"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 77651.96075439453,
            "unit": "ns",
            "range": "± 334.62202731095084"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 57861.86904500325,
            "unit": "ns",
            "range": "± 284.35314315035265"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 13279.48333231608,
            "unit": "ns",
            "range": "± 60.28873630123457"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 68905.58107096354,
            "unit": "ns",
            "range": "± 353.8838619637189"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 59534.88443603516,
            "unit": "ns",
            "range": "± 244.7163996337993"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 47654.06596476237,
            "unit": "ns",
            "range": "± 161.74283337724628"
          }
        ]
      }
    ],
    "Operations.HashObjectOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3",
          "message": "Add BDN tests:  Operations.RawStringOperations and Operations.CustomOperations (#876)\n\n* Added two more BDN perf tests: Operations.CustomOperations and Operations.RawStringOperations\r\n\r\n* Added BDN Charts to the badges\r\n\r\n* Added link to BDN charts to website\r\n\r\n* Setting results array to 70 so we have plenty of space for different results (in a single BDN result set).\r\n\r\n* Added ScriptOperations and conrresponding expected values in Config file\r\n\r\n---------\r\n\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2024-12-13T15:18:56-08:00",
          "tree_id": "57912268bf5280aad0e440f06d42d6f0248c6523",
          "url": "https://github.com/microsoft/garnet/commit/3d3e8d6ee656f9c091cbd6c37a7d30db9c45f8b3"
        },
        "date": 1734133254596,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 110489.42972819011,
            "unit": "ns",
            "range": "± 223.35897961574173"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10601.69916788737,
            "unit": "ns",
            "range": "± 52.03221879335324"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 7863.757651192801,
            "unit": "ns",
            "range": "± 56.62073714339424"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8216.988830566406,
            "unit": "ns",
            "range": "± 16.07693491017271"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11611.951555524554,
            "unit": "ns",
            "range": "± 21.527745344500627"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 12780.42696439303,
            "unit": "ns",
            "range": "± 7.13121827778979"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7190.104620797293,
            "unit": "ns",
            "range": "± 4.060285270062505"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7428.389485677083,
            "unit": "ns",
            "range": "± 14.961872604921068"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8407.438307542066,
            "unit": "ns",
            "range": "± 15.996078329854267"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9342.504374186197,
            "unit": "ns",
            "range": "± 15.63584214075571"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 11428.544362386068,
            "unit": "ns",
            "range": "± 4.499240888042529"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9152.65840802874,
            "unit": "ns",
            "range": "± 32.805026349869166"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10830.60048421224,
            "unit": "ns",
            "range": "± 40.898518477277"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12358.497009277344,
            "unit": "ns",
            "range": "± 19.23932682104836"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7303.404780796596,
            "unit": "ns",
            "range": "± 7.284389905070189"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 115153.48161969866,
            "unit": "ns",
            "range": "± 392.98742697168916"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 41961.37172154018,
            "unit": "ns",
            "range": "± 143.39446833535797"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 42854.20880998884,
            "unit": "ns",
            "range": "± 92.45001617776934"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 46849.13757324219,
            "unit": "ns",
            "range": "± 105.93068675449814"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 67188.88113839286,
            "unit": "ns",
            "range": "± 295.12371755937323"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 96519.32721819196,
            "unit": "ns",
            "range": "± 271.272639735563"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 42446.30839029948,
            "unit": "ns",
            "range": "± 50.55960606207696"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36975.96435546875,
            "unit": "ns",
            "range": "± 76.60610878602361"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 45687.169189453125,
            "unit": "ns",
            "range": "± 219.10119635997307"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 63527.586263020836,
            "unit": "ns",
            "range": "± 125.76961783977347"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 53027.845982142855,
            "unit": "ns",
            "range": "± 96.13583218938591"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9135.09052821568,
            "unit": "ns",
            "range": "± 19.536171162171122"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 59869.764927455355,
            "unit": "ns",
            "range": "± 179.42780133792053"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44367.47349330357,
            "unit": "ns",
            "range": "± 127.62754745040876"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 40975.223013070914,
            "unit": "ns",
            "range": "± 59.7835206276425"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 97708.75478891227,
            "unit": "ns",
            "range": "± 143.30390367893514"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 41753.52294921875,
            "unit": "ns",
            "range": "± 106.20671759095826"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 38883.288138253345,
            "unit": "ns",
            "range": "± 113.47470757287167"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 45820.36917550223,
            "unit": "ns",
            "range": "± 86.89280426953597"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 60037.20011393229,
            "unit": "ns",
            "range": "± 766.8113249135868"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 86336.34294782366,
            "unit": "ns",
            "range": "± 138.90641811365722"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43558.131103515625,
            "unit": "ns",
            "range": "± 120.3467075661461"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 35401.75258091518,
            "unit": "ns",
            "range": "± 66.8511653055571"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 45121.060650165266,
            "unit": "ns",
            "range": "± 63.25950849836349"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 54010.76354980469,
            "unit": "ns",
            "range": "± 125.08112716261013"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 54850.51531110491,
            "unit": "ns",
            "range": "± 33.34684507333669"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9094.465964181083,
            "unit": "ns",
            "range": "± 30.738823696518995"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 50680.37414550781,
            "unit": "ns",
            "range": "± 103.57674721590152"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 43135.181100027905,
            "unit": "ns",
            "range": "± 101.811146145499"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 43194.05604771205,
            "unit": "ns",
            "range": "± 59.41132024406252"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "635cd58ab0fe9423a13f1a0c38b715e61dafde22",
          "message": "Revert \"[helm-chart] Add helm-docs to the helm chart workflow (#862)\" (#881)\n\nThis reverts commit f1ce0dafecaba15335e8e0767a6eeb441b72e56c.",
          "timestamp": "2024-12-13T15:46:32-08:00",
          "tree_id": "013e7e35462603ca9b981e1384552f47be440c50",
          "url": "https://github.com/microsoft/garnet/commit/635cd58ab0fe9423a13f1a0c38b715e61dafde22"
        },
        "date": 1734134870954,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 97933.30078125,
            "unit": "ns",
            "range": "± 225.86521041317465"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10148.410914494441,
            "unit": "ns",
            "range": "± 54.40240408451228"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 7529.920069376628,
            "unit": "ns",
            "range": "± 37.77063017626564"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8043.315778459822,
            "unit": "ns",
            "range": "± 8.501976151114182"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11719.681549072266,
            "unit": "ns",
            "range": "± 64.36499981070962"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13251.913706461588,
            "unit": "ns",
            "range": "± 88.80743565644188"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7367.218290056501,
            "unit": "ns",
            "range": "± 14.192166096487535"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7633.177947998047,
            "unit": "ns",
            "range": "± 15.782041075897565"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8426.82118733724,
            "unit": "ns",
            "range": "± 15.01875734614907"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9385.242462158203,
            "unit": "ns",
            "range": "± 19.28789885399269"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 11430.725860595703,
            "unit": "ns",
            "range": "± 9.99799842539024"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9273.4011332194,
            "unit": "ns",
            "range": "± 18.334055955580848"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9885.7346089681,
            "unit": "ns",
            "range": "± 75.83339720451"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12218.954467773438,
            "unit": "ns",
            "range": "± 22.779071296039056"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7467.85265604655,
            "unit": "ns",
            "range": "± 5.601367742746436"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 113494.47428385417,
            "unit": "ns",
            "range": "± 421.9002441307937"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 41315.50821940104,
            "unit": "ns",
            "range": "± 59.5981425627972"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 40815.38303920201,
            "unit": "ns",
            "range": "± 49.4661077163688"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 45973.60135591947,
            "unit": "ns",
            "range": "± 70.0380154541413"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 68947.74739583333,
            "unit": "ns",
            "range": "± 335.4342306565449"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 95718.18806966145,
            "unit": "ns",
            "range": "± 392.95917061250503"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 43719.86650739397,
            "unit": "ns",
            "range": "± 101.48890096256225"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 34618.02629743303,
            "unit": "ns",
            "range": "± 83.99243677662152"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 43315.03470284598,
            "unit": "ns",
            "range": "± 61.998335478524304"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 64600.360107421875,
            "unit": "ns",
            "range": "± 140.4522089435867"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54336.802978515625,
            "unit": "ns",
            "range": "± 120.87732673065457"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9357.106475830078,
            "unit": "ns",
            "range": "± 14.566572314960107"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 58741.2548828125,
            "unit": "ns",
            "range": "± 327.88199472692366"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44777.049037388395,
            "unit": "ns",
            "range": "± 93.63991899591593"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 43134.46004231771,
            "unit": "ns",
            "range": "± 60.93633022978825"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 97444.09220377605,
            "unit": "ns",
            "range": "± 314.2761189528818"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 41807.60052020733,
            "unit": "ns",
            "range": "± 72.52260063081627"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 39212.67618815104,
            "unit": "ns",
            "range": "± 91.11779855107784"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 46880.44657389323,
            "unit": "ns",
            "range": "± 185.00899126222342"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 58286.02512904576,
            "unit": "ns",
            "range": "± 104.85038433212111"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 85849.98474121094,
            "unit": "ns",
            "range": "± 106.20169728945366"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43112.62773786272,
            "unit": "ns",
            "range": "± 74.40909609266568"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 34524.736328125,
            "unit": "ns",
            "range": "± 77.5539601178284"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 44646.16139729818,
            "unit": "ns",
            "range": "± 34.21394756031912"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 53024.595424107145,
            "unit": "ns",
            "range": "± 154.69666562010906"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 54205.27547200521,
            "unit": "ns",
            "range": "± 125.19050555901477"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9300.203880896936,
            "unit": "ns",
            "range": "± 12.641346124792914"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 48866.225022536055,
            "unit": "ns",
            "range": "± 56.15536763906542"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45345.249720982145,
            "unit": "ns",
            "range": "± 62.326958446159814"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 43143.83108956473,
            "unit": "ns",
            "range": "± 56.342308970493605"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "babykart@gmail.com",
            "name": "babykart",
            "username": "babykart"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fad521ea6d85fa24ed8c209651b54d0b87b2434e",
          "message": "[helm-chart] Add helm-docs to the helm chart workflow (#883)\n\n* Standardize the variables\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add Helm chart artifacts build directory\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Add helm-docs to the helm chart workflow\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n* Create a PR to update charts/garnet/README.md\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: babykart <babykart@gmail.com>",
          "timestamp": "2024-12-16T11:21:10-08:00",
          "tree_id": "67ea2f25ee5b507cb48ef54f8edc68e2f900019c",
          "url": "https://github.com/microsoft/garnet/commit/fad521ea6d85fa24ed8c209651b54d0b87b2434e"
        },
        "date": 1734378143029,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 100970.64493815105,
            "unit": "ns",
            "range": "± 281.3538342805135"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10550.745391845703,
            "unit": "ns",
            "range": "± 63.15000521561217"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8076.069582425631,
            "unit": "ns",
            "range": "± 24.324425914335844"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8012.752641950335,
            "unit": "ns",
            "range": "± 10.32507254715908"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 14416.331892747145,
            "unit": "ns",
            "range": "± 42.21392464649954"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13285.841369628906,
            "unit": "ns",
            "range": "± 56.60280966868314"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7359.978778545673,
            "unit": "ns",
            "range": "± 5.995348190127972"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7373.080280848912,
            "unit": "ns",
            "range": "± 17.84601812496947"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8377.420806884766,
            "unit": "ns",
            "range": "± 19.3948262832214"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9515.421600341797,
            "unit": "ns",
            "range": "± 53.384658091723736"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 11208.066676213191,
            "unit": "ns",
            "range": "± 7.933152914887054"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9218.385725754957,
            "unit": "ns",
            "range": "± 23.359362810895522"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9985.774641770582,
            "unit": "ns",
            "range": "± 35.78582553083719"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12164.936065673828,
            "unit": "ns",
            "range": "± 21.171917156183547"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7360.859629313151,
            "unit": "ns",
            "range": "± 7.7988690724681495"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 118610.67940848214,
            "unit": "ns",
            "range": "± 413.9095591399211"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 41231.81508382162,
            "unit": "ns",
            "range": "± 43.18046183430667"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 39998.96501813616,
            "unit": "ns",
            "range": "± 74.07269302283878"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 45808.33304268973,
            "unit": "ns",
            "range": "± 82.01660906532884"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 66789.23715444711,
            "unit": "ns",
            "range": "± 173.87286431168346"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 95753.60107421875,
            "unit": "ns",
            "range": "± 276.8157489972267"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 42539.25405649038,
            "unit": "ns",
            "range": "± 43.79772754325932"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 41077.57344563802,
            "unit": "ns",
            "range": "± 45.6138574457133"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 43536.334228515625,
            "unit": "ns",
            "range": "± 91.8615125502856"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 62121.677943638395,
            "unit": "ns",
            "range": "± 191.9967890585633"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 52289.59777832031,
            "unit": "ns",
            "range": "± 124.76648080608902"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9094.728698730469,
            "unit": "ns",
            "range": "± 22.413063339188003"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 58572.37200055803,
            "unit": "ns",
            "range": "± 199.3740625487391"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45369.365046574516,
            "unit": "ns",
            "range": "± 61.93072284175789"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 43308.509521484375,
            "unit": "ns",
            "range": "± 107.71841281669091"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 96592.34110514323,
            "unit": "ns",
            "range": "± 106.50508973741033"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 44926.15487234933,
            "unit": "ns",
            "range": "± 167.8024072638411"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 42345.64373309795,
            "unit": "ns",
            "range": "± 24.332837875597658"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 46075.99158653846,
            "unit": "ns",
            "range": "± 55.03477350896663"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 58451.32097516741,
            "unit": "ns",
            "range": "± 142.3408579062335"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 85733.41627854567,
            "unit": "ns",
            "range": "± 239.9118655302813"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 45015.32653808594,
            "unit": "ns",
            "range": "± 84.66165612410225"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 35505.212838309155,
            "unit": "ns",
            "range": "± 89.2890102477662"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 47184.493146623885,
            "unit": "ns",
            "range": "± 100.43087751052406"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 62288.983154296875,
            "unit": "ns",
            "range": "± 100.42276310467797"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 51825.47220865885,
            "unit": "ns",
            "range": "± 86.18676985437939"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9122.64164515904,
            "unit": "ns",
            "range": "± 12.242435457520275"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 50035.73384602865,
            "unit": "ns",
            "range": "± 90.29655737587599"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45027.16580904447,
            "unit": "ns",
            "range": "± 81.68191272063636"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 44095.44939313616,
            "unit": "ns",
            "range": "± 135.43186706985537"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1f9e51cf689fb94fec629b9081f772de4659966",
          "message": "[Compatibility] Added ZINTER, ZINTERCARD, ZINTERSTORE command (#831)\n\n* Added ZINTER, ZINTERCARD, ZINTERSTORE command\r\n\r\n* Format fix\r\n\r\n* Test fix\r\n\r\n* Added comments and docs\r\n\r\n* Fix magic string\r\n\r\n* Review commands\r\n\r\n* Fixed review comments\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2024-12-16T15:39:13-08:00",
          "tree_id": "3fdad4f3173b970d1a3410a66f90dcdfd4c6e497",
          "url": "https://github.com/microsoft/garnet/commit/f1f9e51cf689fb94fec629b9081f772de4659966"
        },
        "date": 1734393624614,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 98997.95532226562,
            "unit": "ns",
            "range": "± 137.92473179404087"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10606.321062360492,
            "unit": "ns",
            "range": "± 25.613950183412697"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 7859.610544840495,
            "unit": "ns",
            "range": "± 11.151324023841457"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8854.041900634766,
            "unit": "ns",
            "range": "± 84.22561566038141"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11875.072127122145,
            "unit": "ns",
            "range": "± 17.369251474945127"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 16064.143430269682,
            "unit": "ns",
            "range": "± 19.43948792141135"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7846.562194824219,
            "unit": "ns",
            "range": "± 44.00497285011369"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7533.05800301688,
            "unit": "ns",
            "range": "± 7.599692568574355"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8825.804697672525,
            "unit": "ns",
            "range": "± 48.93216676265469"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9513.483319963727,
            "unit": "ns",
            "range": "± 9.089556469449539"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12011.215444711539,
            "unit": "ns",
            "range": "± 15.456914028691095"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9204.119328090123,
            "unit": "ns",
            "range": "± 21.134792620209907"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10083.800288609096,
            "unit": "ns",
            "range": "± 97.12840613913862"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12568.708801269531,
            "unit": "ns",
            "range": "± 11.669765754676927"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7712.427629743303,
            "unit": "ns",
            "range": "± 10.823209452502732"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 113629.2497907366,
            "unit": "ns",
            "range": "± 197.10951450216672"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 42462.036568777905,
            "unit": "ns",
            "range": "± 73.06156855925182"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 42249.21915690104,
            "unit": "ns",
            "range": "± 61.652642878405416"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 49124.755859375,
            "unit": "ns",
            "range": "± 64.13747830867308"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 68026.92993164062,
            "unit": "ns",
            "range": "± 272.4173150756739"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 95938.66821289062,
            "unit": "ns",
            "range": "± 265.98482128459966"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 41262.60925292969,
            "unit": "ns",
            "range": "± 66.55106669048651"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36244.96547154018,
            "unit": "ns",
            "range": "± 59.04944551839308"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 43064.50758713942,
            "unit": "ns",
            "range": "± 70.92113886581362"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 64103.85306222098,
            "unit": "ns",
            "range": "± 310.72323190294355"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 51437.217610677086,
            "unit": "ns",
            "range": "± 71.65341144245919"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9452.77372087751,
            "unit": "ns",
            "range": "± 17.859287162487757"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 58351.451416015625,
            "unit": "ns",
            "range": "± 205.2857337774988"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44428.245326450895,
            "unit": "ns",
            "range": "± 59.48855569188802"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 41485.46578543527,
            "unit": "ns",
            "range": "± 77.13526865690785"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 98328.52870396206,
            "unit": "ns",
            "range": "± 233.09974425947166"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 41976.09395345052,
            "unit": "ns",
            "range": "± 69.6075062039392"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 40787.320181039664,
            "unit": "ns",
            "range": "± 95.39999407031938"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 48785.12174166166,
            "unit": "ns",
            "range": "± 58.578666273842224"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 57564.9911063058,
            "unit": "ns",
            "range": "± 131.9696568535103"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 83412.66741071429,
            "unit": "ns",
            "range": "± 110.65929812638858"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43654.61918757512,
            "unit": "ns",
            "range": "± 50.937544808571324"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 37045.0205485026,
            "unit": "ns",
            "range": "± 72.193301609512"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 43684.14517916166,
            "unit": "ns",
            "range": "± 76.21778127180875"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 53157.723127092635,
            "unit": "ns",
            "range": "± 134.53213423579922"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 55682.36519949777,
            "unit": "ns",
            "range": "± 123.31350700835536"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9430.561116536459,
            "unit": "ns",
            "range": "± 36.19242508838143"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 49966.2510172526,
            "unit": "ns",
            "range": "± 149.33097262672803"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45090.00374930246,
            "unit": "ns",
            "range": "± 63.304758162618846"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 42255.17953725962,
            "unit": "ns",
            "range": "± 62.991088121475094"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d965f8ac2afed49be01eddca82a88923aa013f69",
          "message": "[Compatibility] Added ZUNION, ZUNIONSTORE commands (#833)\n\n* Added ZUNION, ZUNIONSTORE commands\r\n\r\n* Format fix\r\n\r\n* Fixed test failure\r\n\r\n* Fixed review commands\r\n\r\n* Build fix\r\n\r\n* Review command fixes\r\n\r\n* Buid fix",
          "timestamp": "2024-12-17T16:54:36-08:00",
          "tree_id": "91931c51f9df7e0404c9bb09d7a7dac5f9c45487",
          "url": "https://github.com/microsoft/garnet/commit/d965f8ac2afed49be01eddca82a88923aa013f69"
        },
        "date": 1734484548286,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 98085.19984654018,
            "unit": "ns",
            "range": "± 236.94755900959944"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10665.278116861979,
            "unit": "ns",
            "range": "± 29.36293007411747"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8407.979801722935,
            "unit": "ns",
            "range": "± 19.895585091026128"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8556.588451678936,
            "unit": "ns",
            "range": "± 57.36296564630779"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12095.51532451923,
            "unit": "ns",
            "range": "± 33.41902607195525"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13514.143880208334,
            "unit": "ns",
            "range": "± 8.086166368998747"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8155.329459054129,
            "unit": "ns",
            "range": "± 15.129071618098"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8240.8935546875,
            "unit": "ns",
            "range": "± 22.21213472419507"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9509.026285807291,
            "unit": "ns",
            "range": "± 20.546162187203816"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9909.767259870257,
            "unit": "ns",
            "range": "± 15.413748747799238"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12120.854010948768,
            "unit": "ns",
            "range": "± 9.305956338906235"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9119.513346354166,
            "unit": "ns",
            "range": "± 19.95417936502168"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10417.584287203275,
            "unit": "ns",
            "range": "± 12.974566114765352"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12697.159220377604,
            "unit": "ns",
            "range": "± 14.972427615467543"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8051.277821858724,
            "unit": "ns",
            "range": "± 69.72179827671562"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 114663.63612583706,
            "unit": "ns",
            "range": "± 366.598541917189"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 41259.57876352163,
            "unit": "ns",
            "range": "± 84.3439771264454"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 41486.71183268229,
            "unit": "ns",
            "range": "± 78.25306694891727"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 46013.46333821615,
            "unit": "ns",
            "range": "± 90.95067510108387"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 65670.78012319711,
            "unit": "ns",
            "range": "± 252.5775321236399"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 93782.04182942708,
            "unit": "ns",
            "range": "± 361.3743848569065"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 42022.18956580529,
            "unit": "ns",
            "range": "± 97.28579457644815"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 35860.318196614586,
            "unit": "ns",
            "range": "± 73.6395531354412"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 45038.57950846354,
            "unit": "ns",
            "range": "± 95.32234743119346"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 62636.96736653646,
            "unit": "ns",
            "range": "± 274.2690275825931"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54352.284458705355,
            "unit": "ns",
            "range": "± 129.1540080451235"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9335.101611797627,
            "unit": "ns",
            "range": "± 25.98194052589114"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 59027.71257672991,
            "unit": "ns",
            "range": "± 238.8896114366696"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 43920.43497721354,
            "unit": "ns",
            "range": "± 123.38470088283609"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 43075.21525065104,
            "unit": "ns",
            "range": "± 100.96309788882112"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 102264.8699079241,
            "unit": "ns",
            "range": "± 225.71177225175646"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 40405.277361188615,
            "unit": "ns",
            "range": "± 107.11307749366046"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 41959.56290108817,
            "unit": "ns",
            "range": "± 84.71927651636378"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 46345.37658691406,
            "unit": "ns",
            "range": "± 100.51124539491938"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 59160.38635253906,
            "unit": "ns",
            "range": "± 80.80509413366077"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 86091.56755719866,
            "unit": "ns",
            "range": "± 165.2503742706162"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43993.7002999442,
            "unit": "ns",
            "range": "± 87.01846413028657"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 35290.43151855469,
            "unit": "ns",
            "range": "± 42.40885262956623"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 46157.7409010667,
            "unit": "ns",
            "range": "± 84.26982508516075"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 53453.09102376302,
            "unit": "ns",
            "range": "± 146.4418674095216"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 53077.38728841146,
            "unit": "ns",
            "range": "± 63.40831814185243"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9147.57330758231,
            "unit": "ns",
            "range": "± 17.980197291586066"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 49469.13123497596,
            "unit": "ns",
            "range": "± 90.34305043466013"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 42545.812552315845,
            "unit": "ns",
            "range": "± 65.50508596770956"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 42000.152587890625,
            "unit": "ns",
            "range": "± 71.84541736973968"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734560367943,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 99430.91552734375,
            "unit": "ns",
            "range": "± 465.2086710409537"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10624.098002115885,
            "unit": "ns",
            "range": "± 21.58624204698029"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8028.620969332182,
            "unit": "ns",
            "range": "± 19.215047304193906"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8513.28846858098,
            "unit": "ns",
            "range": "± 15.040679558729126"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12095.557250976562,
            "unit": "ns",
            "range": "± 20.039679043550276"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13469.019644601005,
            "unit": "ns",
            "range": "± 20.93814734826021"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8045.6553141276045,
            "unit": "ns",
            "range": "± 36.852069291670595"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8108.182423909505,
            "unit": "ns",
            "range": "± 50.2496202776582"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8955.620676676432,
            "unit": "ns",
            "range": "± 13.814982775647119"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9793.233489990234,
            "unit": "ns",
            "range": "± 11.622092784162504"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12000.2808204064,
            "unit": "ns",
            "range": "± 23.538229560086997"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9228.0419921875,
            "unit": "ns",
            "range": "± 12.581506039780905"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10034.704132080078,
            "unit": "ns",
            "range": "± 9.11097808577868"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12865.42493380033,
            "unit": "ns",
            "range": "± 7.94869394766894"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7871.231638590495,
            "unit": "ns",
            "range": "± 30.77456358516373"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 116618.22509765625,
            "unit": "ns",
            "range": "± 365.4694470434592"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 40870.281982421875,
            "unit": "ns",
            "range": "± 167.17041885727483"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 44540.03885904948,
            "unit": "ns",
            "range": "± 121.36003665226485"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 46271.190970284595,
            "unit": "ns",
            "range": "± 46.58711844800843"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 69685.94970703125,
            "unit": "ns",
            "range": "± 207.1960413388088"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 96420.92023577009,
            "unit": "ns",
            "range": "± 175.0157290524611"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 41875.65213716947,
            "unit": "ns",
            "range": "± 48.09407438603461"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 35943.23018391927,
            "unit": "ns",
            "range": "± 43.64127220584562"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 46305.41851337139,
            "unit": "ns",
            "range": "± 48.762037385750794"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 62289.505239633414,
            "unit": "ns",
            "range": "± 144.7683438910098"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 53838.6435953776,
            "unit": "ns",
            "range": "± 105.57056916027061"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9245.416150774274,
            "unit": "ns",
            "range": "± 20.863946109065736"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 62627.960611979164,
            "unit": "ns",
            "range": "± 144.30277781913682"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45188.16162109375,
            "unit": "ns",
            "range": "± 120.36553683752875"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 41732.44099934896,
            "unit": "ns",
            "range": "± 49.91233997864094"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 100111.33260091145,
            "unit": "ns",
            "range": "± 249.68415582332665"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 43515.783255440845,
            "unit": "ns",
            "range": "± 82.02086636090998"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 40131.175013950895,
            "unit": "ns",
            "range": "± 94.01744969446182"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 45416.959635416664,
            "unit": "ns",
            "range": "± 72.20770238358284"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 65202.63671875,
            "unit": "ns",
            "range": "± 241.66744081622969"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 88289.27350725446,
            "unit": "ns",
            "range": "± 128.56019100505125"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 42189.20200892857,
            "unit": "ns",
            "range": "± 149.54482641620598"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 37551.109212239586,
            "unit": "ns",
            "range": "± 49.82501336295596"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 45634.01428222656,
            "unit": "ns",
            "range": "± 89.72711897100434"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 54118.001302083336,
            "unit": "ns",
            "range": "± 66.73895112506372"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 52988.5634358724,
            "unit": "ns",
            "range": "± 127.68759130018465"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9119.75842989408,
            "unit": "ns",
            "range": "± 10.823586098309866"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 48812.37487792969,
            "unit": "ns",
            "range": "± 96.01838219330875"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 42810.90962727865,
            "unit": "ns",
            "range": "± 156.0875005319718"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 44121.17265973772,
            "unit": "ns",
            "range": "± 65.07045500714443"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734579676957,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 103782.93151855469,
            "unit": "ns",
            "range": "± 187.33159204795385"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10635.179392496744,
            "unit": "ns",
            "range": "± 10.84001255435829"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 7995.121471698468,
            "unit": "ns",
            "range": "± 11.34992474333477"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 9380.989888509115,
            "unit": "ns",
            "range": "± 39.45778257037184"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11917.01180594308,
            "unit": "ns",
            "range": "± 13.36051933197768"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13312.8298441569,
            "unit": "ns",
            "range": "± 12.422091330147117"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7892.413482666016,
            "unit": "ns",
            "range": "± 40.729475225572195"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8175.210876464844,
            "unit": "ns",
            "range": "± 16.845535087932046"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8921.89442952474,
            "unit": "ns",
            "range": "± 14.322742864144624"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9867.83457438151,
            "unit": "ns",
            "range": "± 19.417136399926203"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12106.228931133564,
            "unit": "ns",
            "range": "± 57.08414824930998"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9210.933467320034,
            "unit": "ns",
            "range": "± 15.173688951072435"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9947.445322672525,
            "unit": "ns",
            "range": "± 18.22714020310174"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12743.997548421225,
            "unit": "ns",
            "range": "± 16.690358954965177"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8140.401458740234,
            "unit": "ns",
            "range": "± 20.227915139428806"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 129481.15757533482,
            "unit": "ns",
            "range": "± 427.7876174562287"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 41281.483154296875,
            "unit": "ns",
            "range": "± 112.74826929186447"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 42178.33964029948,
            "unit": "ns",
            "range": "± 94.36316706928318"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 46505.671574519234,
            "unit": "ns",
            "range": "± 87.34421035115014"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 67579.75323016827,
            "unit": "ns",
            "range": "± 184.03287158904567"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 93534.84375,
            "unit": "ns",
            "range": "± 246.63699590656782"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 42089.58353678385,
            "unit": "ns",
            "range": "± 86.31124460469427"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 35698.42427571615,
            "unit": "ns",
            "range": "± 121.58107029850075"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 45591.48690359933,
            "unit": "ns",
            "range": "± 107.73757910198556"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 64251.2948172433,
            "unit": "ns",
            "range": "± 388.6126364936219"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 52941.09671456473,
            "unit": "ns",
            "range": "± 87.24997774081439"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9267.391313825336,
            "unit": "ns",
            "range": "± 25.09374312186833"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 56577.03770228795,
            "unit": "ns",
            "range": "± 116.48567859108233"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 43476.6366141183,
            "unit": "ns",
            "range": "± 145.92808343506542"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 43550.589224008414,
            "unit": "ns",
            "range": "± 126.67011516479208"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 100891.54227120536,
            "unit": "ns",
            "range": "± 146.09313492444574"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 42414.12440708705,
            "unit": "ns",
            "range": "± 221.21498768411686"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 39985.50760904948,
            "unit": "ns",
            "range": "± 104.81911946621476"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 45798.95368303572,
            "unit": "ns",
            "range": "± 56.903147290172775"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 58339.586966378345,
            "unit": "ns",
            "range": "± 143.79936540922068"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 85564.8664202009,
            "unit": "ns",
            "range": "± 280.5655783957243"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 42729.811314174105,
            "unit": "ns",
            "range": "± 74.13676132668022"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 36899.39493815104,
            "unit": "ns",
            "range": "± 68.67190258055122"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 44303.775896344865,
            "unit": "ns",
            "range": "± 55.22813943886646"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 53677.08609444754,
            "unit": "ns",
            "range": "± 192.301708527602"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 53831.299767127406,
            "unit": "ns",
            "range": "± 138.66527953259728"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9155.4052734375,
            "unit": "ns",
            "range": "± 16.635125065715748"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 48972.62180873326,
            "unit": "ns",
            "range": "± 118.98135599693939"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 41993.86807955228,
            "unit": "ns",
            "range": "± 51.38897167046944"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 42165.22705078125,
            "unit": "ns",
            "range": "± 116.74419350905073"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734596922692,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 116853.45133463542,
            "unit": "ns",
            "range": "± 279.2744245267955"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10638.676452636719,
            "unit": "ns",
            "range": "± 18.537371763746638"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8068.519709660457,
            "unit": "ns",
            "range": "± 10.46597467304504"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8514.363752092633,
            "unit": "ns",
            "range": "± 26.741233087084336"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12115.18827165876,
            "unit": "ns",
            "range": "± 16.629523298724738"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13344.210463303785,
            "unit": "ns",
            "range": "± 26.068807851549938"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8135.205841064453,
            "unit": "ns",
            "range": "± 52.18373599244709"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7616.452642587515,
            "unit": "ns",
            "range": "± 12.182149540407849"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8831.487383161273,
            "unit": "ns",
            "range": "± 29.07372009229275"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9840.894877115885,
            "unit": "ns",
            "range": "± 15.293945605833411"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12304.988743708684,
            "unit": "ns",
            "range": "± 16.00642398481665"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9190.393625895182,
            "unit": "ns",
            "range": "± 24.446783691832653"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10033.467864990234,
            "unit": "ns",
            "range": "± 17.799143537006856"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12877.232360839844,
            "unit": "ns",
            "range": "± 10.617929312515619"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8160.6772867838545,
            "unit": "ns",
            "range": "± 60.382026380792404"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 114852.74745396206,
            "unit": "ns",
            "range": "± 256.5135837764494"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 39560.0840250651,
            "unit": "ns",
            "range": "± 146.44574073062464"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 45049.30135091146,
            "unit": "ns",
            "range": "± 96.01245848928801"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 45458.96958571214,
            "unit": "ns",
            "range": "± 69.39568029776815"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 67502.69949776786,
            "unit": "ns",
            "range": "± 170.08432981165214"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 93204.04663085938,
            "unit": "ns",
            "range": "± 307.85695972227705"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 41459.99084472656,
            "unit": "ns",
            "range": "± 113.24688739786393"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36233.36405436198,
            "unit": "ns",
            "range": "± 57.22732394025111"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 45460.86934407552,
            "unit": "ns",
            "range": "± 100.96478818276712"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 61670.22966657366,
            "unit": "ns",
            "range": "± 191.57341047134682"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 53558.5205078125,
            "unit": "ns",
            "range": "± 145.66962056435403"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9113.049785907451,
            "unit": "ns",
            "range": "± 25.692397149562822"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 56683.70422363281,
            "unit": "ns",
            "range": "± 124.24907082494376"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 43432.77805873326,
            "unit": "ns",
            "range": "± 156.01878925968194"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 42775.54955115685,
            "unit": "ns",
            "range": "± 64.65288579180242"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 102077.51726422991,
            "unit": "ns",
            "range": "± 153.72484690108683"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 40790.392630440845,
            "unit": "ns",
            "range": "± 91.01103583322319"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 40190.5409749349,
            "unit": "ns",
            "range": "± 81.0525074948514"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 45763.42549641927,
            "unit": "ns",
            "range": "± 72.18784748969645"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 58482.29239327567,
            "unit": "ns",
            "range": "± 86.19468522671812"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 83971.23151506696,
            "unit": "ns",
            "range": "± 134.35077887638244"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 40709.80704171317,
            "unit": "ns",
            "range": "± 47.910683259961935"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 35485.92878069197,
            "unit": "ns",
            "range": "± 90.44071968428815"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 45099.69177246094,
            "unit": "ns",
            "range": "± 96.01291697016747"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 54896.620396205355,
            "unit": "ns",
            "range": "± 95.66913706149943"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 55179.10505022322,
            "unit": "ns",
            "range": "± 73.2859164434278"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9352.068764822823,
            "unit": "ns",
            "range": "± 27.518977902135383"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 49007.8617976262,
            "unit": "ns",
            "range": "± 65.16342366118594"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 43405.91169084822,
            "unit": "ns",
            "range": "± 71.61737073541559"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 40779.17611258371,
            "unit": "ns",
            "range": "± 52.239930164548205"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734644321891,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 99535.38382393973,
            "unit": "ns",
            "range": "± 170.48286227927025"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10742.031424386161,
            "unit": "ns",
            "range": "± 20.642940731447982"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8026.158796037947,
            "unit": "ns",
            "range": "± 17.37694065644537"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8575.7639058431,
            "unit": "ns",
            "range": "± 17.851550234245547"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12156.742858886719,
            "unit": "ns",
            "range": "± 11.599132540986085"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13496.695912679037,
            "unit": "ns",
            "range": "± 21.94796419768294"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 8250.961354573568,
            "unit": "ns",
            "range": "± 52.25441518765482"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7614.487662682166,
            "unit": "ns",
            "range": "± 7.1534665095625"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9025.792367117745,
            "unit": "ns",
            "range": "± 25.17811531097512"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9742.827723576473,
            "unit": "ns",
            "range": "± 15.132827379869378"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12308.063917893629,
            "unit": "ns",
            "range": "± 14.575464601252783"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9161.1939063439,
            "unit": "ns",
            "range": "± 14.129119100216625"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10068.536834716797,
            "unit": "ns",
            "range": "± 14.854808505050997"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12783.86713663737,
            "unit": "ns",
            "range": "± 12.654061023898617"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8210.198647635323,
            "unit": "ns",
            "range": "± 61.76975298732092"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 116815.06388346355,
            "unit": "ns",
            "range": "± 338.33880159486716"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 39310.82284109933,
            "unit": "ns",
            "range": "± 80.34739792335418"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 40843.03751627604,
            "unit": "ns",
            "range": "± 105.30747898986058"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 46510.27852376302,
            "unit": "ns",
            "range": "± 69.95958146751303"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 69823.7422688802,
            "unit": "ns",
            "range": "± 214.70042042012312"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 95206.38549804688,
            "unit": "ns",
            "range": "± 323.8670852826345"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 41521.3381253756,
            "unit": "ns",
            "range": "± 85.6676900303816"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36329.34529622396,
            "unit": "ns",
            "range": "± 72.5180311557756"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 46497.48087565104,
            "unit": "ns",
            "range": "± 86.69841052425778"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 61971.05015345982,
            "unit": "ns",
            "range": "± 211.69545943796942"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54246.2399996244,
            "unit": "ns",
            "range": "± 197.21600134381887"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9117.126770019531,
            "unit": "ns",
            "range": "± 25.862113345784635"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 54408.98699079241,
            "unit": "ns",
            "range": "± 111.24888699242595"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44010.942195012016,
            "unit": "ns",
            "range": "± 87.45762169718016"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 44109.32181222098,
            "unit": "ns",
            "range": "± 53.16213927709063"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 102021.3152204241,
            "unit": "ns",
            "range": "± 339.262052668299"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 42365.90270996094,
            "unit": "ns",
            "range": "± 109.67502736549598"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 40014.09037272135,
            "unit": "ns",
            "range": "± 64.0340012479885"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 46101.1469914363,
            "unit": "ns",
            "range": "± 55.212195680137945"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 59721.16219656808,
            "unit": "ns",
            "range": "± 86.62066405140938"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 87577.01134314903,
            "unit": "ns",
            "range": "± 356.6138948349399"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43101.263427734375,
            "unit": "ns",
            "range": "± 63.87005069096488"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 35275.41155133928,
            "unit": "ns",
            "range": "± 74.66110869111749"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 46013.20353190104,
            "unit": "ns",
            "range": "± 120.97804354742617"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 52630.945260184155,
            "unit": "ns",
            "range": "± 110.22412468357315"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 52844.91741473858,
            "unit": "ns",
            "range": "± 47.11565878815528"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9333.54985555013,
            "unit": "ns",
            "range": "± 17.723287143752845"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 56605.94569614955,
            "unit": "ns",
            "range": "± 69.86883385264179"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44794.61757114955,
            "unit": "ns",
            "range": "± 80.31552834294519"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 42479.74365234375,
            "unit": "ns",
            "range": "± 48.84926388518568"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734648627100,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 99952.57850060097,
            "unit": "ns",
            "range": "± 243.75141716782755"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10717.809677124023,
            "unit": "ns",
            "range": "± 18.104856205260887"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8072.629605806791,
            "unit": "ns",
            "range": "± 12.30557941831214"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 9358.848775227865,
            "unit": "ns",
            "range": "± 39.5397874391991"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12073.840688069662,
            "unit": "ns",
            "range": "± 16.5613087373136"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13536.940547398159,
            "unit": "ns",
            "range": "± 33.16084785721304"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7689.534868512835,
            "unit": "ns",
            "range": "± 17.8891218737372"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8316.661398751396,
            "unit": "ns",
            "range": "± 26.039881491917665"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8932.195281982422,
            "unit": "ns",
            "range": "± 29.963946760191494"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9783.81581624349,
            "unit": "ns",
            "range": "± 16.01022508086664"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12183.994947160993,
            "unit": "ns",
            "range": "± 12.301845823753888"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9166.078491210938,
            "unit": "ns",
            "range": "± 20.586115837488027"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10127.201407296317,
            "unit": "ns",
            "range": "± 38.39539232617392"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12748.954518636068,
            "unit": "ns",
            "range": "± 18.737606676636236"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8265.076555524554,
            "unit": "ns",
            "range": "± 55.98264557618051"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 114662.70141601562,
            "unit": "ns",
            "range": "± 382.2521721310752"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 42800.11535644531,
            "unit": "ns",
            "range": "± 142.29596913134085"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 43251.67419433594,
            "unit": "ns",
            "range": "± 66.34755125630633"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 46423.13396747295,
            "unit": "ns",
            "range": "± 93.5542527427555"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 65407.418212890625,
            "unit": "ns",
            "range": "± 251.6846321486172"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 94022.72908528645,
            "unit": "ns",
            "range": "± 228.5028577443316"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 41839.2333984375,
            "unit": "ns",
            "range": "± 165.04117277510105"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 35853.41012137277,
            "unit": "ns",
            "range": "± 113.2331805711294"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 45225.69838303786,
            "unit": "ns",
            "range": "± 106.02206990958253"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 62647.117919921875,
            "unit": "ns",
            "range": "± 188.9094552290261"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 57101.62833077567,
            "unit": "ns",
            "range": "± 82.59027726390663"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9073.575846354166,
            "unit": "ns",
            "range": "± 20.512328937263945"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 60134.169921875,
            "unit": "ns",
            "range": "± 194.3126641089503"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44048.038330078125,
            "unit": "ns",
            "range": "± 103.8166582020017"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 42223.330078125,
            "unit": "ns",
            "range": "± 96.32545113015375"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 100041.40276227679,
            "unit": "ns",
            "range": "± 115.45200841390006"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 41885.06978352865,
            "unit": "ns",
            "range": "± 81.49917554551521"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 42770.58890206473,
            "unit": "ns",
            "range": "± 68.17538681193633"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 45135.07995605469,
            "unit": "ns",
            "range": "± 54.40225382497912"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 58719.76501464844,
            "unit": "ns",
            "range": "± 132.9134797879637"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 84258.51702008929,
            "unit": "ns",
            "range": "± 201.15386537150584"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43020.72998046875,
            "unit": "ns",
            "range": "± 75.98405699482535"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 35013.417271205355,
            "unit": "ns",
            "range": "± 63.53123729595606"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 45228.71616908482,
            "unit": "ns",
            "range": "± 91.13489206099506"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 52810.59224446615,
            "unit": "ns",
            "range": "± 109.5011589905798"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 54667.24060058594,
            "unit": "ns",
            "range": "± 109.84230759736991"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9143.873923165458,
            "unit": "ns",
            "range": "± 18.587176658673343"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 53221.634783063615,
            "unit": "ns",
            "range": "± 81.18620138955922"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44313.782174246655,
            "unit": "ns",
            "range": "± 76.71257916017139"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 44940.242919921875,
            "unit": "ns",
            "range": "± 84.72894960055814"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734653368298,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 99704.08673967634,
            "unit": "ns",
            "range": "± 238.81107404840856"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10580.13211763822,
            "unit": "ns",
            "range": "± 13.400140058724256"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8109.236471993582,
            "unit": "ns",
            "range": "± 141.45470314391792"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8821.837506975446,
            "unit": "ns",
            "range": "± 17.664657572066076"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12070.630117563102,
            "unit": "ns",
            "range": "± 12.294909254750017"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13430.92798868815,
            "unit": "ns",
            "range": "± 25.59950612591913"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7693.877586951623,
            "unit": "ns",
            "range": "± 6.841483719834723"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8298.877825055804,
            "unit": "ns",
            "range": "± 13.537064938447338"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9022.795809232271,
            "unit": "ns",
            "range": "± 19.612167521931568"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9805.139051164899,
            "unit": "ns",
            "range": "± 13.450499097110736"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12090.511525472006,
            "unit": "ns",
            "range": "± 19.67375265966115"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9238.785298665365,
            "unit": "ns",
            "range": "± 18.57097957951566"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10124.172864641461,
            "unit": "ns",
            "range": "± 7.581614784003232"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12635.58590228741,
            "unit": "ns",
            "range": "± 10.541003935767238"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 8306.193288167318,
            "unit": "ns",
            "range": "± 86.87525733016574"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 114664.54060872395,
            "unit": "ns",
            "range": "± 248.7843313759071"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 43027.34093299279,
            "unit": "ns",
            "range": "± 149.41722963370157"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 39778.88854980469,
            "unit": "ns",
            "range": "± 83.6645559806738"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 45949.25755092076,
            "unit": "ns",
            "range": "± 104.09138662133962"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 64833.584829477164,
            "unit": "ns",
            "range": "± 276.3878580347087"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 94146.19750976562,
            "unit": "ns",
            "range": "± 223.44590643735518"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 41274.91237095424,
            "unit": "ns",
            "range": "± 73.19460087282377"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36808.941650390625,
            "unit": "ns",
            "range": "± 40.42676895021118"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 44076.38041178385,
            "unit": "ns",
            "range": "± 67.36627714265313"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 64525.196940104164,
            "unit": "ns",
            "range": "± 203.92420453577225"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 53512.90501185826,
            "unit": "ns",
            "range": "± 118.06051199529387"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9140.0752727802,
            "unit": "ns",
            "range": "± 19.30649880455645"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 58180.63191731771,
            "unit": "ns",
            "range": "± 147.96910231862861"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 43272.217232840405,
            "unit": "ns",
            "range": "± 116.51532254076369"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 42329.576932466945,
            "unit": "ns",
            "range": "± 108.71534636662712"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 101840.99033900669,
            "unit": "ns",
            "range": "± 96.96689150510295"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 41397.84944974459,
            "unit": "ns",
            "range": "± 145.9905566745648"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 42726.2294514974,
            "unit": "ns",
            "range": "± 126.40998156294633"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 46608.456186147836,
            "unit": "ns",
            "range": "± 39.58226121545791"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 63414.75341796875,
            "unit": "ns",
            "range": "± 220.23347264333447"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 83640.43317522321,
            "unit": "ns",
            "range": "± 150.59667516293416"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 41445.924072265625,
            "unit": "ns",
            "range": "± 81.76668455245458"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 36192.761666434155,
            "unit": "ns",
            "range": "± 47.49862528912345"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 43942.21888950893,
            "unit": "ns",
            "range": "± 110.58793036847418"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 54271.751185825895,
            "unit": "ns",
            "range": "± 239.2109444096443"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 53755.36905924479,
            "unit": "ns",
            "range": "± 120.89025439075847"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9147.655232747396,
            "unit": "ns",
            "range": "± 12.736060915566384"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 48969.00695800781,
            "unit": "ns",
            "range": "± 89.86972216636234"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 42256.86899820963,
            "unit": "ns",
            "range": "± 45.890521169844675"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 40828.63515218099,
            "unit": "ns",
            "range": "± 46.17917035771544"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734748000137,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 100948.03989955357,
            "unit": "ns",
            "range": "± 356.99269515533615"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10462.375996907553,
            "unit": "ns",
            "range": "± 10.115686511263103"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8272.594451904297,
            "unit": "ns",
            "range": "± 11.002997573801567"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8630.938720703125,
            "unit": "ns",
            "range": "± 10.625776777903887"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12146.22802734375,
            "unit": "ns",
            "range": "± 13.802025365954083"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13401.597849527994,
            "unit": "ns",
            "range": "± 18.727519818339516"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7589.319023719201,
            "unit": "ns",
            "range": "± 7.638615885648542"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7643.854086739676,
            "unit": "ns",
            "range": "± 12.117834328596286"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8794.041849772135,
            "unit": "ns",
            "range": "± 19.86350055391686"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9740.13921101888,
            "unit": "ns",
            "range": "± 14.655225575927217"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12047.343241373697,
            "unit": "ns",
            "range": "± 33.721995367144025"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9354.256984165737,
            "unit": "ns",
            "range": "± 17.755299480735353"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9896.02530343192,
            "unit": "ns",
            "range": "± 11.775499335934875"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12754.712350027901,
            "unit": "ns",
            "range": "± 34.02938349911123"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7539.206186930339,
            "unit": "ns",
            "range": "± 13.972144758156439"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 118455.86832682292,
            "unit": "ns",
            "range": "± 897.2179271275426"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 43867.98793247768,
            "unit": "ns",
            "range": "± 109.10688722494008"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 40309.29588904748,
            "unit": "ns",
            "range": "± 93.83218952773016"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 46115.91288248698,
            "unit": "ns",
            "range": "± 209.0358523371972"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 65604.95279947917,
            "unit": "ns",
            "range": "± 228.23433077964228"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 92867.2136579241,
            "unit": "ns",
            "range": "± 212.05416368183367"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 41966.202654157365,
            "unit": "ns",
            "range": "± 121.24139877699335"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 37053.143717447914,
            "unit": "ns",
            "range": "± 102.68243387487318"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 44527.96848842076,
            "unit": "ns",
            "range": "± 107.03144755142137"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 64373.4610421317,
            "unit": "ns",
            "range": "± 360.04129566973063"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 53868.419974190845,
            "unit": "ns",
            "range": "± 124.01373909552443"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9275.918813852164,
            "unit": "ns",
            "range": "± 20.6488775226414"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 56775.316569010414,
            "unit": "ns",
            "range": "± 147.1791708890789"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44514.83808244978,
            "unit": "ns",
            "range": "± 121.6867529326839"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 43513.58256022135,
            "unit": "ns",
            "range": "± 131.1595650775855"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 99764.580078125,
            "unit": "ns",
            "range": "± 226.83655633428828"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 51659.331868489586,
            "unit": "ns",
            "range": "± 140.30054972485362"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 41522.510986328125,
            "unit": "ns",
            "range": "± 78.98912751999408"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 46055.526498647836,
            "unit": "ns",
            "range": "± 41.59523692085133"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 58658.421223958336,
            "unit": "ns",
            "range": "± 116.0568526315606"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 85413.26153094952,
            "unit": "ns",
            "range": "± 128.0774117826518"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 41551.77873883928,
            "unit": "ns",
            "range": "± 75.52267514785136"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 35480.18249511719,
            "unit": "ns",
            "range": "± 106.10696426493986"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 44470.2978515625,
            "unit": "ns",
            "range": "± 104.43138502314339"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 55887.72234235491,
            "unit": "ns",
            "range": "± 133.8414849055005"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 52455.98406110491,
            "unit": "ns",
            "range": "± 79.72131124252093"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9251.680646623883,
            "unit": "ns",
            "range": "± 24.341199891669344"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 51483.39314778646,
            "unit": "ns",
            "range": "± 179.4320504300324"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44829.26541841947,
            "unit": "ns",
            "range": "± 83.65816830427475"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 43749.09647623698,
            "unit": "ns",
            "range": "± 87.06561127599174"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734907739992,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 100474.67128208706,
            "unit": "ns",
            "range": "± 140.46909447978757"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10526.939392089844,
            "unit": "ns",
            "range": "± 18.381248792646325"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 7971.606227329799,
            "unit": "ns",
            "range": "± 10.31367473190639"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8660.644095284599,
            "unit": "ns",
            "range": "± 10.389485350102426"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12044.007286658654,
            "unit": "ns",
            "range": "± 15.047781944970813"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13353.23726109096,
            "unit": "ns",
            "range": "± 30.051464458069116"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7542.4750736781525,
            "unit": "ns",
            "range": "± 11.17574941624052"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7530.669566563198,
            "unit": "ns",
            "range": "± 7.38648611181192"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8776.958770751953,
            "unit": "ns",
            "range": "± 12.70059783661384"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9854.81458391462,
            "unit": "ns",
            "range": "± 7.730936480309405"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 11967.858072916666,
            "unit": "ns",
            "range": "± 28.03951419099032"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9259.644317626953,
            "unit": "ns",
            "range": "± 19.392517749115054"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9857.515614827475,
            "unit": "ns",
            "range": "± 15.216370870353844"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12650.930531819662,
            "unit": "ns",
            "range": "± 23.584072991420637"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7597.127415583684,
            "unit": "ns",
            "range": "± 6.8116705521821"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 114978.28892299107,
            "unit": "ns",
            "range": "± 241.34025728018992"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 41915.80599271334,
            "unit": "ns",
            "range": "± 101.41015265722281"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 39896.98181152344,
            "unit": "ns",
            "range": "± 117.82133377462816"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 44827.15628487723,
            "unit": "ns",
            "range": "± 67.74881398797693"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 67061.92190987723,
            "unit": "ns",
            "range": "± 337.7067449121707"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 93711.26621791294,
            "unit": "ns",
            "range": "± 273.8681131391359"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 41690.909282977766,
            "unit": "ns",
            "range": "± 57.430906648466205"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 34027.71708170573,
            "unit": "ns",
            "range": "± 44.573449493725946"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 46374.96520996094,
            "unit": "ns",
            "range": "± 82.72226837853478"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 60833.167442908656,
            "unit": "ns",
            "range": "± 208.34091090060411"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 56324.89013671875,
            "unit": "ns",
            "range": "± 78.8640050009412"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9200.650126139322,
            "unit": "ns",
            "range": "± 11.887694258191662"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 56266.821725027905,
            "unit": "ns",
            "range": "± 162.8559401906546"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45662.804739815845,
            "unit": "ns",
            "range": "± 78.76281349310658"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 43031.15774301382,
            "unit": "ns",
            "range": "± 60.27852634486195"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 101195.02301897321,
            "unit": "ns",
            "range": "± 218.84735483350752"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 43361.4022391183,
            "unit": "ns",
            "range": "± 95.24095655304822"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 41254.3709891183,
            "unit": "ns",
            "range": "± 117.21170348127046"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 45790.58626615084,
            "unit": "ns",
            "range": "± 26.948433486867945"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 59273.57625325521,
            "unit": "ns",
            "range": "± 92.31184300256423"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 87588.07739257812,
            "unit": "ns",
            "range": "± 153.51429700537045"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43002.70472935268,
            "unit": "ns",
            "range": "± 76.41868377051787"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 34090.07350376674,
            "unit": "ns",
            "range": "± 65.01384504674209"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 49453.07399204799,
            "unit": "ns",
            "range": "± 59.579608853638916"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 53040.93322753906,
            "unit": "ns",
            "range": "± 176.39925455443503"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 53107.084001813615,
            "unit": "ns",
            "range": "± 85.23101585413131"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9102.104187011719,
            "unit": "ns",
            "range": "± 14.626401731981552"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 51126.191594050484,
            "unit": "ns",
            "range": "± 78.51321053603465"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45275.7821219308,
            "unit": "ns",
            "range": "± 68.04249898441213"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 47866.927228655135,
            "unit": "ns",
            "range": "± 40.439139898624056"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735408542707,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 97822.78536283053,
            "unit": "ns",
            "range": "± 217.7832648542623"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10593.670272827148,
            "unit": "ns",
            "range": "± 13.098357340777365"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8033.215077718099,
            "unit": "ns",
            "range": "± 11.213179571829118"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8750.816236223493,
            "unit": "ns",
            "range": "± 16.095351149770387"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12041.100260416666,
            "unit": "ns",
            "range": "± 15.009136626720071"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13619.595118931362,
            "unit": "ns",
            "range": "± 19.573743653325266"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7533.362851824079,
            "unit": "ns",
            "range": "± 22.963291246967557"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8154.625047956194,
            "unit": "ns",
            "range": "± 22.440856108421197"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8782.560495229867,
            "unit": "ns",
            "range": "± 22.848544410939198"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9731.663622174945,
            "unit": "ns",
            "range": "± 10.746011744607253"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 11915.813751220703,
            "unit": "ns",
            "range": "± 35.85751482825278"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9160.769348144531,
            "unit": "ns",
            "range": "± 15.632382049763374"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9969.85844203404,
            "unit": "ns",
            "range": "± 14.755642628602171"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12603.021064171424,
            "unit": "ns",
            "range": "± 8.30039242082607"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7578.747584025065,
            "unit": "ns",
            "range": "± 6.192732577117665"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 124554.78166852679,
            "unit": "ns",
            "range": "± 658.0561705911184"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 41319.68465169271,
            "unit": "ns",
            "range": "± 87.04809831903069"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 44153.76332600912,
            "unit": "ns",
            "range": "± 53.822353503743805"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 45312.56234305246,
            "unit": "ns",
            "range": "± 70.02603648524219"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 67188.67268880208,
            "unit": "ns",
            "range": "± 198.73730394153566"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 94260.66853841145,
            "unit": "ns",
            "range": "± 356.5513034867374"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 42550.342232840405,
            "unit": "ns",
            "range": "± 78.28520497894488"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36165.51114595853,
            "unit": "ns",
            "range": "± 53.614846413779475"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 46402.79642740885,
            "unit": "ns",
            "range": "± 90.14052591774268"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 64045.581868489586,
            "unit": "ns",
            "range": "± 206.93632810666023"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54158.910696847095,
            "unit": "ns",
            "range": "± 75.34725304910582"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9070.35164466271,
            "unit": "ns",
            "range": "± 20.687032284521024"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 57346.478271484375,
            "unit": "ns",
            "range": "± 121.50162282023096"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 46537.872314453125,
            "unit": "ns",
            "range": "± 59.35493880336666"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 42750.87629045759,
            "unit": "ns",
            "range": "± 40.83452659705454"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 97037.46337890625,
            "unit": "ns",
            "range": "± 229.2245219220243"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 41988.99492536272,
            "unit": "ns",
            "range": "± 58.547590387370875"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 41276.67367117746,
            "unit": "ns",
            "range": "± 70.77374999902096"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 47804.74650065104,
            "unit": "ns",
            "range": "± 137.3994212027449"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 65943.61287434895,
            "unit": "ns",
            "range": "± 154.54380822103184"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 84664.21770368304,
            "unit": "ns",
            "range": "± 197.83587323969928"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 41909.22066824777,
            "unit": "ns",
            "range": "± 51.916847802795324"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39253.5947672526,
            "unit": "ns",
            "range": "± 52.503624250212766"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 46256.68111165365,
            "unit": "ns",
            "range": "± 114.50795896877946"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 54953.988037109375,
            "unit": "ns",
            "range": "± 110.78633965328547"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 52876.660970052086,
            "unit": "ns",
            "range": "± 111.33144837074224"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9076.688820975167,
            "unit": "ns",
            "range": "± 24.347577550181164"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 50242.39153180803,
            "unit": "ns",
            "range": "± 97.96579711914531"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 45129.74650065104,
            "unit": "ns",
            "range": "± 61.920225390546115"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 42536.98294503348,
            "unit": "ns",
            "range": "± 72.69013104052802"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736188228010,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 102179.70493861607,
            "unit": "ns",
            "range": "± 175.6070703570841"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10527.187129429409,
            "unit": "ns",
            "range": "± 15.818603827363713"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8018.654339130108,
            "unit": "ns",
            "range": "± 20.07936870617441"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8540.581621442523,
            "unit": "ns",
            "range": "± 16.03623244105157"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12424.827902657646,
            "unit": "ns",
            "range": "± 14.574999445188746"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13814.841766357422,
            "unit": "ns",
            "range": "± 16.164787160788887"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7536.708132425944,
            "unit": "ns",
            "range": "± 8.095985838759482"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7547.657746535081,
            "unit": "ns",
            "range": "± 6.485386103909865"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8729.856545584542,
            "unit": "ns",
            "range": "± 16.039683517905186"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9727.915602463941,
            "unit": "ns",
            "range": "± 16.254520359624944"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12365.413970947266,
            "unit": "ns",
            "range": "± 36.2392713358073"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9066.736820765904,
            "unit": "ns",
            "range": "± 20.714601609646135"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10072.546151968148,
            "unit": "ns",
            "range": "± 15.293117916761817"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12769.974626813617,
            "unit": "ns",
            "range": "± 12.340911668802725"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7583.569013155424,
            "unit": "ns",
            "range": "± 9.14315387617323"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 127081.3703264509,
            "unit": "ns",
            "range": "± 585.1803440724794"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 43086.56529017857,
            "unit": "ns",
            "range": "± 115.34353853916565"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 39453.50083571214,
            "unit": "ns",
            "range": "± 78.97805042951745"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 45390.9423828125,
            "unit": "ns",
            "range": "± 109.42873306355408"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 68239.1064453125,
            "unit": "ns",
            "range": "± 191.86444138764398"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 92780.46997070312,
            "unit": "ns",
            "range": "± 322.75472052813376"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 42456.808268229164,
            "unit": "ns",
            "range": "± 96.77755554236167"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36468.374837239586,
            "unit": "ns",
            "range": "± 72.25104843571783"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 45454.981173001805,
            "unit": "ns",
            "range": "± 123.71798039409748"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 62494.88089425223,
            "unit": "ns",
            "range": "± 225.16904744861975"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 53804.471697126115,
            "unit": "ns",
            "range": "± 130.8005630347964"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9044.523402622768,
            "unit": "ns",
            "range": "± 21.49879496504321"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 58263.00001878005,
            "unit": "ns",
            "range": "± 143.95209570916188"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45327.04366048177,
            "unit": "ns",
            "range": "± 107.37990551946343"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 42858.946010044645,
            "unit": "ns",
            "range": "± 59.77018564172554"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 99086.21477399554,
            "unit": "ns",
            "range": "± 149.50389512338745"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 42839.803059895836,
            "unit": "ns",
            "range": "± 43.7666120150552"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 41879.32504507212,
            "unit": "ns",
            "range": "± 50.050914103043404"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 46297.540283203125,
            "unit": "ns",
            "range": "± 67.25119078124348"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 58780.88596888951,
            "unit": "ns",
            "range": "± 111.69333781600035"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 86431.05916341145,
            "unit": "ns",
            "range": "± 174.3113261328899"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 41478.0116780599,
            "unit": "ns",
            "range": "± 73.74281454046563"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 33870.63669057993,
            "unit": "ns",
            "range": "± 70.94983905669828"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 44028.61511230469,
            "unit": "ns",
            "range": "± 127.88932180518843"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 61154.722243088945,
            "unit": "ns",
            "range": "± 97.47605532664251"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 52965.914447490984,
            "unit": "ns",
            "range": "± 102.25991840475903"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9058.28147301307,
            "unit": "ns",
            "range": "± 21.947333674976523"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 49940.164794921875,
            "unit": "ns",
            "range": "± 68.18212994236133"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44481.913103376115,
            "unit": "ns",
            "range": "± 64.72308904388403"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 43204.1259765625,
            "unit": "ns",
            "range": "± 71.47699115904668"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736284044553,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 100665.72428385417,
            "unit": "ns",
            "range": "± 210.36313443531634"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10551.678771972656,
            "unit": "ns",
            "range": "± 9.47806919639793"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 7990.836510291467,
            "unit": "ns",
            "range": "± 7.277932500099411"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8609.969329833984,
            "unit": "ns",
            "range": "± 6.4377522988342815"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12091.991189809945,
            "unit": "ns",
            "range": "± 25.197106095833096"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13432.548014322916,
            "unit": "ns",
            "range": "± 5.525024393916497"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7573.843178382287,
            "unit": "ns",
            "range": "± 7.9956420089154046"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7758.79146030971,
            "unit": "ns",
            "range": "± 15.426719793752754"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 9183.170209612164,
            "unit": "ns",
            "range": "± 23.875027489826124"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9751.309204101562,
            "unit": "ns",
            "range": "± 29.503151933099563"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12355.802263532367,
            "unit": "ns",
            "range": "± 36.29177737483642"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9210.64725603376,
            "unit": "ns",
            "range": "± 19.258507692244244"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9979.383741106305,
            "unit": "ns",
            "range": "± 18.03751160249027"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12517.415266770582,
            "unit": "ns",
            "range": "± 10.926080958647464"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7768.946940104167,
            "unit": "ns",
            "range": "± 13.657378793803833"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 114961.6288248698,
            "unit": "ns",
            "range": "± 352.45504708453194"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 46261.47420247396,
            "unit": "ns",
            "range": "± 121.63306343199484"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 41565.68838266226,
            "unit": "ns",
            "range": "± 90.50594351017102"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 47235.60921805246,
            "unit": "ns",
            "range": "± 99.71396595713846"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 67766.33422851562,
            "unit": "ns",
            "range": "± 235.12873467347313"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 95817.9931640625,
            "unit": "ns",
            "range": "± 216.568592983849"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 44485.654860276445,
            "unit": "ns",
            "range": "± 110.79324769034201"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36785.81848144531,
            "unit": "ns",
            "range": "± 74.33075913942838"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 44670.9169514974,
            "unit": "ns",
            "range": "± 107.80100008016296"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 66990.9256998698,
            "unit": "ns",
            "range": "± 216.3557612874644"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 55383.890642438615,
            "unit": "ns",
            "range": "± 244.96436684273615"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9131.258174351284,
            "unit": "ns",
            "range": "± 16.784314631840676"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 58012.39536830357,
            "unit": "ns",
            "range": "± 191.53078571068934"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44977.39693777902,
            "unit": "ns",
            "range": "± 73.03003045458215"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 47507.9530843099,
            "unit": "ns",
            "range": "± 60.68464281103604"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 100876.78034855769,
            "unit": "ns",
            "range": "± 78.27814570731694"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 40525.79721304087,
            "unit": "ns",
            "range": "± 56.1183006662269"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 41999.91984049479,
            "unit": "ns",
            "range": "± 133.86904744790309"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 47370.214407784595,
            "unit": "ns",
            "range": "± 62.53608270535354"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 60648.54044596354,
            "unit": "ns",
            "range": "± 147.99952596162152"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 90644.69745342548,
            "unit": "ns",
            "range": "± 155.48565599627804"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 42287.97403971354,
            "unit": "ns",
            "range": "± 71.38462744472423"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 36016.29159109933,
            "unit": "ns",
            "range": "± 48.3630837595728"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 47038.14310709635,
            "unit": "ns",
            "range": "± 80.88292212317263"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 55882.53194173177,
            "unit": "ns",
            "range": "± 135.62631357929516"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 54678.861345563615,
            "unit": "ns",
            "range": "± 101.42035075705843"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9211.87733968099,
            "unit": "ns",
            "range": "± 20.515598238899987"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 50835.88155110677,
            "unit": "ns",
            "range": "± 93.27562695372868"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 43274.4873046875,
            "unit": "ns",
            "range": "± 38.451008371073435"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 41474.02119954427,
            "unit": "ns",
            "range": "± 65.58632152244469"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736377062375,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 101393.24166434152,
            "unit": "ns",
            "range": "± 331.5901205647065"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10592.589111328125,
            "unit": "ns",
            "range": "± 11.968491708299467"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 7996.393912179129,
            "unit": "ns",
            "range": "± 36.6209992783065"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8709.171295166016,
            "unit": "ns",
            "range": "± 16.80145793236522"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12155.044453938803,
            "unit": "ns",
            "range": "± 11.252880294594988"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 14179.430448091947,
            "unit": "ns",
            "range": "± 53.6987580543177"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7668.540602463942,
            "unit": "ns",
            "range": "± 9.477163053707509"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7814.0228271484375,
            "unit": "ns",
            "range": "± 12.461529292003785"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8914.473137488732,
            "unit": "ns",
            "range": "± 25.26618069892198"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9828.321075439453,
            "unit": "ns",
            "range": "± 19.284156871675883"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12371.414540608725,
            "unit": "ns",
            "range": "± 11.656873261292601"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9177.272142682757,
            "unit": "ns",
            "range": "± 21.996740578451025"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10078.73807634626,
            "unit": "ns",
            "range": "± 16.511704018043126"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12756.823076520648,
            "unit": "ns",
            "range": "± 18.7065972101194"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7649.745505196707,
            "unit": "ns",
            "range": "± 7.960765129460164"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 117137.11669921875,
            "unit": "ns",
            "range": "± 365.15667886112453"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 41239.63361467634,
            "unit": "ns",
            "range": "± 76.58812209678739"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 43219.70912388393,
            "unit": "ns",
            "range": "± 64.78693768926937"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 44353.20783342634,
            "unit": "ns",
            "range": "± 114.2810677661322"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 65694.9434407552,
            "unit": "ns",
            "range": "± 261.22064298342275"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 93227.81412760417,
            "unit": "ns",
            "range": "± 251.4042260730536"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46689.46736653646,
            "unit": "ns",
            "range": "± 194.25170434868153"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 37663.71067592076,
            "unit": "ns",
            "range": "± 80.70821379233132"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 48405.36475548377,
            "unit": "ns",
            "range": "± 84.80217553675291"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 62689.58599384014,
            "unit": "ns",
            "range": "± 182.56996669903188"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54343.65865071615,
            "unit": "ns",
            "range": "± 120.60511624557022"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9164.527486165365,
            "unit": "ns",
            "range": "± 17.747874347997232"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 57527.35005696615,
            "unit": "ns",
            "range": "± 125.72668892342385"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 46163.667951311385,
            "unit": "ns",
            "range": "± 93.74091298761783"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 44520.97285344051,
            "unit": "ns",
            "range": "± 80.63032094146935"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 102084.12710336539,
            "unit": "ns",
            "range": "± 133.47488476548628"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 42743.792317708336,
            "unit": "ns",
            "range": "± 146.96197147694605"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 42791.07431265024,
            "unit": "ns",
            "range": "± 85.92867786245075"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 45134.94131905692,
            "unit": "ns",
            "range": "± 52.79423797397529"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 63127.003831129805,
            "unit": "ns",
            "range": "± 119.79075644114332"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 88049.54659598214,
            "unit": "ns",
            "range": "± 70.58660072370434"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43756.60749162947,
            "unit": "ns",
            "range": "± 57.52909945384332"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 36481.373009314906,
            "unit": "ns",
            "range": "± 75.44428149849035"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 45040.6982421875,
            "unit": "ns",
            "range": "± 65.00979888926096"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 52420.55318196615,
            "unit": "ns",
            "range": "± 90.41524939156639"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 53413.343098958336,
            "unit": "ns",
            "range": "± 96.49242978830912"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9264.140026385967,
            "unit": "ns",
            "range": "± 18.962308845952304"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 51613.21739783654,
            "unit": "ns",
            "range": "± 87.04841604192042"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44639.84515850361,
            "unit": "ns",
            "range": "± 83.9371169057476"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 43156.84110201322,
            "unit": "ns",
            "range": "± 77.14983749109894"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736462780491,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 97569.29274338942,
            "unit": "ns",
            "range": "± 218.2592758289702"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 11075.530351911273,
            "unit": "ns",
            "range": "± 17.167442415280515"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8101.1926504281855,
            "unit": "ns",
            "range": "± 17.32247086121293"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8829.921605036809,
            "unit": "ns",
            "range": "± 89.03722217306967"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12212.997436523438,
            "unit": "ns",
            "range": "± 11.769174935488952"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13921.95528470553,
            "unit": "ns",
            "range": "± 17.642755818847963"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7801.727060171274,
            "unit": "ns",
            "range": "± 11.345355670872422"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7697.619120279948,
            "unit": "ns",
            "range": "± 3.895528060260717"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8886.193339029947,
            "unit": "ns",
            "range": "± 24.462640217359766"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9833.282252720424,
            "unit": "ns",
            "range": "± 18.183752012591814"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12042.469024658203,
            "unit": "ns",
            "range": "± 14.79894869106256"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9464.620535714286,
            "unit": "ns",
            "range": "± 20.744155665353727"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9999.426574707031,
            "unit": "ns",
            "range": "± 10.637968062959578"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12791.455637613932,
            "unit": "ns",
            "range": "± 26.3494042687213"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7633.422382061298,
            "unit": "ns",
            "range": "± 5.828010883227441"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 111418.38291713169,
            "unit": "ns",
            "range": "± 344.16840580175966"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 42219.03625488281,
            "unit": "ns",
            "range": "± 68.21991781778293"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 41490.504673549105,
            "unit": "ns",
            "range": "± 73.24458931837916"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 45554.812856820914,
            "unit": "ns",
            "range": "± 98.6230480791845"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 66022.10317758414,
            "unit": "ns",
            "range": "± 345.6415726624611"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 94774.95076497395,
            "unit": "ns",
            "range": "± 285.7422055981758"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46298.744303385414,
            "unit": "ns",
            "range": "± 210.9346217189512"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 37223.57811560998,
            "unit": "ns",
            "range": "± 73.01309885920153"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 43255.226353236605,
            "unit": "ns",
            "range": "± 54.11981183369893"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 62951.84748722957,
            "unit": "ns",
            "range": "± 311.2304778008251"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 53642.52057756697,
            "unit": "ns",
            "range": "± 70.2213001033304"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9137.540181477865,
            "unit": "ns",
            "range": "± 34.307527098959106"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 57451.635306222095,
            "unit": "ns",
            "range": "± 119.94621219310405"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 41962.10350623498,
            "unit": "ns",
            "range": "± 72.95170198949535"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 45409.89298502604,
            "unit": "ns",
            "range": "± 97.18901532571353"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 102923.29671223958,
            "unit": "ns",
            "range": "± 129.78563115836982"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 41985.497107872594,
            "unit": "ns",
            "range": "± 61.157210869506216"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 40970.93059833233,
            "unit": "ns",
            "range": "± 65.47054766439126"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 45602.87851186899,
            "unit": "ns",
            "range": "± 57.02586303914347"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 60367.16349283854,
            "unit": "ns",
            "range": "± 184.48453360922457"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 84516.2129720052,
            "unit": "ns",
            "range": "± 378.23926910679114"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43828.91366141183,
            "unit": "ns",
            "range": "± 83.73006235512578"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 36431.58220563616,
            "unit": "ns",
            "range": "± 65.01018298543336"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 46190.899658203125,
            "unit": "ns",
            "range": "± 58.66572860322764"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 54929.36314174107,
            "unit": "ns",
            "range": "± 111.89416917399284"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 52292.02575683594,
            "unit": "ns",
            "range": "± 107.10646477116643"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9189.945925199068,
            "unit": "ns",
            "range": "± 21.885145689350843"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 48641.668701171875,
            "unit": "ns",
            "range": "± 104.84324777851957"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44054.65311686198,
            "unit": "ns",
            "range": "± 92.37550690649694"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 41854.49785505022,
            "unit": "ns",
            "range": "± 41.54130358728817"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736480642756,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 101983.05429311898,
            "unit": "ns",
            "range": "± 298.5577269319864"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10586.998094831195,
            "unit": "ns",
            "range": "± 16.084477320816998"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 7984.792785644531,
            "unit": "ns",
            "range": "± 9.792399779221455"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8685.154070172992,
            "unit": "ns",
            "range": "± 30.2275756606276"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11996.742757161459,
            "unit": "ns",
            "range": "± 13.435159322310746"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13309.227576622596,
            "unit": "ns",
            "range": "± 85.74863475027331"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7571.067919049944,
            "unit": "ns",
            "range": "± 11.10782651185569"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7767.481689453125,
            "unit": "ns",
            "range": "± 15.061964520884565"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8964.412278395434,
            "unit": "ns",
            "range": "± 11.935577550161929"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9842.992095947266,
            "unit": "ns",
            "range": "± 26.856429325610986"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12231.822052001953,
            "unit": "ns",
            "range": "± 24.32625159256948"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9198.683166503906,
            "unit": "ns",
            "range": "± 29.729129657988018"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9922.415488106864,
            "unit": "ns",
            "range": "± 10.884145873558875"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12702.424011230469,
            "unit": "ns",
            "range": "± 23.43224838292967"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7735.646514892578,
            "unit": "ns",
            "range": "± 23.75502251116458"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 115459.57682291667,
            "unit": "ns",
            "range": "± 318.0524750588977"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 43244.37631460337,
            "unit": "ns",
            "range": "± 117.05431330260791"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 40452.13338216146,
            "unit": "ns",
            "range": "± 182.8844777884064"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 46244.81985909598,
            "unit": "ns",
            "range": "± 68.4402413073184"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 65321.168870192305,
            "unit": "ns",
            "range": "± 164.80555783805877"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 93642.42030552456,
            "unit": "ns",
            "range": "± 268.74607133059357"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 45036.226545061385,
            "unit": "ns",
            "range": "± 82.673323556063"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36292.40417480469,
            "unit": "ns",
            "range": "± 104.2772667047841"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 46751.62135532924,
            "unit": "ns",
            "range": "± 111.89779348509948"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 64336.33748372396,
            "unit": "ns",
            "range": "± 345.40558038460034"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54390.61971028646,
            "unit": "ns",
            "range": "± 304.83706578623304"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9064.554850260416,
            "unit": "ns",
            "range": "± 18.272779230779953"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 56547.05037434896,
            "unit": "ns",
            "range": "± 86.93268138607"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44386.96818033854,
            "unit": "ns",
            "range": "± 68.37419815760602"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 42099.47858537947,
            "unit": "ns",
            "range": "± 43.60694970075823"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 103845.99522181919,
            "unit": "ns",
            "range": "± 173.38134463657823"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 40964.11350795201,
            "unit": "ns",
            "range": "± 164.05080059464748"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 41964.264322916664,
            "unit": "ns",
            "range": "± 79.83029053157018"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 45749.52828543527,
            "unit": "ns",
            "range": "± 48.85390626199103"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 62581.63330078125,
            "unit": "ns",
            "range": "± 252.34827035046462"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 88008.57456752232,
            "unit": "ns",
            "range": "± 176.36027115571707"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 42429.96990497295,
            "unit": "ns",
            "range": "± 61.86724421681281"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 37385.998971121655,
            "unit": "ns",
            "range": "± 47.78941831953173"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 44518.30139160156,
            "unit": "ns",
            "range": "± 181.14469787478964"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 54083.04889385517,
            "unit": "ns",
            "range": "± 71.94319294734873"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 56093.564453125,
            "unit": "ns",
            "range": "± 127.70750890652543"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9034.768880208334,
            "unit": "ns",
            "range": "± 21.86322123838902"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 49784.21396108774,
            "unit": "ns",
            "range": "± 84.21482743566283"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44701.36047363281,
            "unit": "ns",
            "range": "± 70.05628869390476"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 43312.37229567308,
            "unit": "ns",
            "range": "± 96.12727399284348"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736554453490,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 107933.94775390625,
            "unit": "ns",
            "range": "± 255.01760962966173"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10572.63142512395,
            "unit": "ns",
            "range": "± 18.488231554329182"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8321.111958821615,
            "unit": "ns",
            "range": "± 7.492112343916607"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 9101.92153930664,
            "unit": "ns",
            "range": "± 55.93578129685412"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12001.088597224309,
            "unit": "ns",
            "range": "± 11.40169503745907"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13266.38934795673,
            "unit": "ns",
            "range": "± 9.949042845066426"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7665.469033377512,
            "unit": "ns",
            "range": "± 11.481644810637302"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7585.248620169504,
            "unit": "ns",
            "range": "± 4.580916268853433"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8877.540806361607,
            "unit": "ns",
            "range": "± 15.387355818831502"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9878.246634347099,
            "unit": "ns",
            "range": "± 7.622513315924461"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 11985.584477015904,
            "unit": "ns",
            "range": "± 7.235491679065283"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9292.185719807943,
            "unit": "ns",
            "range": "± 15.449788797365013"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9933.56682913644,
            "unit": "ns",
            "range": "± 9.913122730579387"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12591.07894897461,
            "unit": "ns",
            "range": "± 8.277105332479186"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7737.847900390625,
            "unit": "ns",
            "range": "± 15.919985756225348"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 115835.49641927083,
            "unit": "ns",
            "range": "± 577.0004251755993"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 41597.059983473555,
            "unit": "ns",
            "range": "± 64.04359533648773"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 41013.904244559155,
            "unit": "ns",
            "range": "± 78.28379739588372"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 46587.44553786058,
            "unit": "ns",
            "range": "± 26.011291566556867"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 66700.26506696429,
            "unit": "ns",
            "range": "± 473.6735628989829"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 92079.8845563616,
            "unit": "ns",
            "range": "± 207.31216554341734"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 46633.29874674479,
            "unit": "ns",
            "range": "± 167.8480176626275"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 36156.36291503906,
            "unit": "ns",
            "range": "± 45.833429588133995"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 43144.383021763395,
            "unit": "ns",
            "range": "± 117.33347566037133"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 67164.09708658855,
            "unit": "ns",
            "range": "± 345.4825425463862"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 60865.271809895836,
            "unit": "ns",
            "range": "± 137.75351375283284"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9336.303383963448,
            "unit": "ns",
            "range": "± 21.29280923861676"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 57049.24357096354,
            "unit": "ns",
            "range": "± 132.8011088428262"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45470.77941894531,
            "unit": "ns",
            "range": "± 118.30971860842446"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 44137.08626883371,
            "unit": "ns",
            "range": "± 90.93029302816635"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 103969.44492885044,
            "unit": "ns",
            "range": "± 206.36026027888028"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 40300.0596110026,
            "unit": "ns",
            "range": "± 107.32421908388312"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 40154.08442570613,
            "unit": "ns",
            "range": "± 65.30610290790189"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 45197.650146484375,
            "unit": "ns",
            "range": "± 85.64166436551027"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 61385.62723795573,
            "unit": "ns",
            "range": "± 212.87721685279004"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 86634.73510742188,
            "unit": "ns",
            "range": "± 110.99266788138004"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43446.59952799479,
            "unit": "ns",
            "range": "± 116.94993607553133"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 34977.96892438616,
            "unit": "ns",
            "range": "± 69.29715236079849"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 47340.61628069197,
            "unit": "ns",
            "range": "± 38.40509936627615"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 54782.928466796875,
            "unit": "ns",
            "range": "± 71.65657172253533"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 52592.58524576823,
            "unit": "ns",
            "range": "± 94.45951147175785"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9338.043271578275,
            "unit": "ns",
            "range": "± 19.55420045315996"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 50157.94459751674,
            "unit": "ns",
            "range": "± 181.45517358308862"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44015.21475655692,
            "unit": "ns",
            "range": "± 98.87219352688467"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 42990.185546875,
            "unit": "ns",
            "range": "± 65.21790776305245"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736656638734,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 101635.68376813616,
            "unit": "ns",
            "range": "± 171.49652889052126"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10722.2409929548,
            "unit": "ns",
            "range": "± 36.342855709013946"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 8157.486314039964,
            "unit": "ns",
            "range": "± 12.273549822741996"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8695.483943394252,
            "unit": "ns",
            "range": "± 14.28257413973077"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 12145.172337123326,
            "unit": "ns",
            "range": "± 13.759573964871564"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13562.16552734375,
            "unit": "ns",
            "range": "± 19.322398034535965"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7675.544269268329,
            "unit": "ns",
            "range": "± 7.558019568215361"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7729.982430594308,
            "unit": "ns",
            "range": "± 10.175552246405594"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8879.113057454428,
            "unit": "ns",
            "range": "± 16.166719455686867"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9805.05881676307,
            "unit": "ns",
            "range": "± 19.14105495800132"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 12067.562430245536,
            "unit": "ns",
            "range": "± 20.11492173200459"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9280.189310709635,
            "unit": "ns",
            "range": "± 17.985971514519655"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 10066.707611083984,
            "unit": "ns",
            "range": "± 12.358855217549573"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12650.91051374163,
            "unit": "ns",
            "range": "± 15.893958716958211"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7613.669586181641,
            "unit": "ns",
            "range": "± 4.024900046450537"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 120998.88044084821,
            "unit": "ns",
            "range": "± 387.5636767677908"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 41346.64103190104,
            "unit": "ns",
            "range": "± 73.33493272219151"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 42549.29715670072,
            "unit": "ns",
            "range": "± 74.05712393060941"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 47619.90966796875,
            "unit": "ns",
            "range": "± 68.39316238413237"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 64671.54541015625,
            "unit": "ns",
            "range": "± 232.26279425595024"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 114145.97778320312,
            "unit": "ns",
            "range": "± 407.17362598550596"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 42897.78311593192,
            "unit": "ns",
            "range": "± 64.5929932758026"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 35142.20346304087,
            "unit": "ns",
            "range": "± 56.13061780597078"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 42821.08415876116,
            "unit": "ns",
            "range": "± 103.74868849823518"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 62731.38689313616,
            "unit": "ns",
            "range": "± 167.16556161255298"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 54084.83581542969,
            "unit": "ns",
            "range": "± 111.41104043567731"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9132.521565755209,
            "unit": "ns",
            "range": "± 17.312982543651767"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 56546.37320382254,
            "unit": "ns",
            "range": "± 114.60036909070487"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 45986.107177734375,
            "unit": "ns",
            "range": "± 146.83377787878885"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 42525.00834147135,
            "unit": "ns",
            "range": "± 85.91323119310367"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 101161.92708333333,
            "unit": "ns",
            "range": "± 258.16625128023094"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 39504.76308969351,
            "unit": "ns",
            "range": "± 47.54957140529185"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 40759.435330904445,
            "unit": "ns",
            "range": "± 71.82003043125947"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 46189.6004813058,
            "unit": "ns",
            "range": "± 170.18897230816157"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 59023.25962611607,
            "unit": "ns",
            "range": "± 117.06191553837897"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 86163.05013020833,
            "unit": "ns",
            "range": "± 219.19200133071294"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 43493.51420084635,
            "unit": "ns",
            "range": "± 55.45935339492991"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 36055.69274902344,
            "unit": "ns",
            "range": "± 40.84408715025878"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 46627.47323172433,
            "unit": "ns",
            "range": "± 90.68402344637441"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 52842.623291015625,
            "unit": "ns",
            "range": "± 150.95515554642023"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 54603.33339146205,
            "unit": "ns",
            "range": "± 105.8574516046166"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9102.718454996744,
            "unit": "ns",
            "range": "± 11.39618118020732"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 51186.327689034595,
            "unit": "ns",
            "range": "± 79.72529619369881"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 43979.459635416664,
            "unit": "ns",
            "range": "± 87.25264839129333"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 44653.20088704427,
            "unit": "ns",
            "range": "± 66.87189964253709"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737255055436,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 102405.06243024554,
            "unit": "ns",
            "range": "± 195.3677570190216"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 10409.96328500601,
            "unit": "ns",
            "range": "± 9.189139789999096"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 7975.357273646763,
            "unit": "ns",
            "range": "± 26.979611225306456"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 8777.221018473307,
            "unit": "ns",
            "range": "± 13.363974909686169"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 11760.267995198568,
            "unit": "ns",
            "range": "± 11.799649734925309"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 13336.119740804037,
            "unit": "ns",
            "range": "± 18.33303326450945"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 7753.61567905971,
            "unit": "ns",
            "range": "± 12.29805264526474"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 7751.958719889323,
            "unit": "ns",
            "range": "± 21.28486323677709"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 8804.670715332031,
            "unit": "ns",
            "range": "± 11.281251067187267"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 9730.77123006185,
            "unit": "ns",
            "range": "± 63.3125453607225"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 11793.498992919922,
            "unit": "ns",
            "range": "± 5.7355307975590355"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9198.177446637836,
            "unit": "ns",
            "range": "± 8.955870807278194"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 9926.453835623604,
            "unit": "ns",
            "range": "± 13.35887458065781"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 12675.386403401693,
            "unit": "ns",
            "range": "± 23.516915024595612"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 7734.776255289714,
            "unit": "ns",
            "range": "± 20.213549673778754"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 117166.54750279018,
            "unit": "ns",
            "range": "± 282.8777849364063"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 43694.91342397837,
            "unit": "ns",
            "range": "± 84.66322747134278"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 42097.8466796875,
            "unit": "ns",
            "range": "± 119.90972185304965"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 46655.97272600447,
            "unit": "ns",
            "range": "± 81.77968578486933"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 66722.88630558894,
            "unit": "ns",
            "range": "± 424.0478346613754"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 93411.34469168527,
            "unit": "ns",
            "range": "± 240.89524762937646"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 45051.65100097656,
            "unit": "ns",
            "range": "± 43.12772739716942"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 38235.982404436385,
            "unit": "ns",
            "range": "± 72.9676208056511"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 42789.964599609375,
            "unit": "ns",
            "range": "± 109.37022204083668"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 61997.46878487723,
            "unit": "ns",
            "range": "± 255.07311847446243"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 60686.51814778646,
            "unit": "ns",
            "range": "± 99.45768902437304"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9152.972005208334,
            "unit": "ns",
            "range": "± 13.584861271957545"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 60858.429361979164,
            "unit": "ns",
            "range": "± 289.11542724081215"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 44420.4014078776,
            "unit": "ns",
            "range": "± 117.04544395634184"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 42166.93638392857,
            "unit": "ns",
            "range": "± 51.92116668704017"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 101116.14554268973,
            "unit": "ns",
            "range": "± 171.3830074838714"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 39325.25198800223,
            "unit": "ns",
            "range": "± 112.39762873904428"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 42941.44780085637,
            "unit": "ns",
            "range": "± 165.77692312991394"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 46521.371256510414,
            "unit": "ns",
            "range": "± 82.35968455856377"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 61038.006591796875,
            "unit": "ns",
            "range": "± 250.578704039786"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 83992.65665690105,
            "unit": "ns",
            "range": "± 240.4673564871338"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 41755.14787946428,
            "unit": "ns",
            "range": "± 63.87030955572669"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 39375.51051548549,
            "unit": "ns",
            "range": "± 101.49488533503943"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 45431.075177873885,
            "unit": "ns",
            "range": "± 83.1153804619256"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 54007.09615071615,
            "unit": "ns",
            "range": "± 80.28803384947628"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 52541.28723144531,
            "unit": "ns",
            "range": "± 114.76574423894097"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9171.375165666852,
            "unit": "ns",
            "range": "± 28.40657119997491"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 49010.98815917969,
            "unit": "ns",
            "range": "± 84.30950544420865"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 44863.728986467635,
            "unit": "ns",
            "range": "± 126.62316221177166"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 43435.85978190104,
            "unit": "ns",
            "range": "± 80.12559412439188"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737789801824,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 104725.05841936384,
            "unit": "ns",
            "range": "± 180.85743008515936"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 11955.83965594952,
            "unit": "ns",
            "range": "± 16.726424518612177"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 9287.55116780599,
            "unit": "ns",
            "range": "± 14.348621351058078"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 9990.583449143629,
            "unit": "ns",
            "range": "± 12.589180146267955"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 14430.815124511719,
            "unit": "ns",
            "range": "± 13.170385469970189"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 14449.14082118443,
            "unit": "ns",
            "range": "± 27.659317195768867"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 12156.561075846354,
            "unit": "ns",
            "range": "± 12.029093832515436"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 9012.148871788611,
            "unit": "ns",
            "range": "± 6.886171461712303"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 12051.993560791016,
            "unit": "ns",
            "range": "± 12.240617142997229"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 11982.823835100446,
            "unit": "ns",
            "range": "± 11.161380600558044"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 13387.91544987605,
            "unit": "ns",
            "range": "± 18.86412806014905"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9448.324076334635,
            "unit": "ns",
            "range": "± 21.75757781929318"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 11115.144500732422,
            "unit": "ns",
            "range": "± 12.45724516297739"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 14883.49126180013,
            "unit": "ns",
            "range": "± 11.420397888569246"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 13087.160382952008,
            "unit": "ns",
            "range": "± 10.821567767948968"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 116841.67131696429,
            "unit": "ns",
            "range": "± 257.07246685069845"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 45833.927263532365,
            "unit": "ns",
            "range": "± 84.3236778205179"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 43538.68931361607,
            "unit": "ns",
            "range": "± 93.67066253714977"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 48209.47408040365,
            "unit": "ns",
            "range": "± 98.7567468694384"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 72735.0752766927,
            "unit": "ns",
            "range": "± 276.9573253190354"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 96771.0920061384,
            "unit": "ns",
            "range": "± 218.4578539699276"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 48130.12346540178,
            "unit": "ns",
            "range": "± 34.88757807781066"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 40301.11130934495,
            "unit": "ns",
            "range": "± 47.07313027010844"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 48688.42468261719,
            "unit": "ns",
            "range": "± 133.77863042771097"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 69515.47288161058,
            "unit": "ns",
            "range": "± 229.70245390583233"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 56745.933430989586,
            "unit": "ns",
            "range": "± 156.8287543824857"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9320.196860177177,
            "unit": "ns",
            "range": "± 15.949921297098713"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 59613.580729166664,
            "unit": "ns",
            "range": "± 184.40477110460824"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 50535.66545758928,
            "unit": "ns",
            "range": "± 64.18228146289701"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 49442.39054361979,
            "unit": "ns",
            "range": "± 87.66210971470909"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 103427.99194335938,
            "unit": "ns",
            "range": "± 261.82156114457626"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 43655.13631184896,
            "unit": "ns",
            "range": "± 120.1061491123606"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 43712.04703194754,
            "unit": "ns",
            "range": "± 122.21685714362796"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 48511.87002999442,
            "unit": "ns",
            "range": "± 64.95616183388972"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 64204.00652204241,
            "unit": "ns",
            "range": "± 179.3355093786777"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 90238.85920597956,
            "unit": "ns",
            "range": "± 122.81921476814955"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 53424.737548828125,
            "unit": "ns",
            "range": "± 96.20025505543924"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 38791.83436802455,
            "unit": "ns",
            "range": "± 164.30775165532594"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 48767.54903157552,
            "unit": "ns",
            "range": "± 64.97620419434847"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 61307.70699637277,
            "unit": "ns",
            "range": "± 163.54275415793717"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 59205.49763997396,
            "unit": "ns",
            "range": "± 106.81223449387312"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9273.636979323168,
            "unit": "ns",
            "range": "± 17.68868238714007"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 58505.97025553385,
            "unit": "ns",
            "range": "± 115.83970429911865"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 46017.8525797526,
            "unit": "ns",
            "range": "± 64.7327916934157"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 53235.19592285156,
            "unit": "ns",
            "range": "± 49.40270164589431"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738051603380,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: ACL)",
            "value": 106587.56001790364,
            "unit": "ns",
            "range": "± 204.87361890031835"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: ACL)",
            "value": 12005.511944110576,
            "unit": "ns",
            "range": "± 10.378879596987554"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: ACL)",
            "value": 9304.611206054688,
            "unit": "ns",
            "range": "± 6.845258704238007"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: ACL)",
            "value": 10034.035022442158,
            "unit": "ns",
            "range": "± 42.526041042870794"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: ACL)",
            "value": 14461.700263390174,
            "unit": "ns",
            "range": "± 23.01661198262453"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: ACL)",
            "value": 14482.857102614184,
            "unit": "ns",
            "range": "± 17.85092297020167"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: ACL)",
            "value": 12039.465860220102,
            "unit": "ns",
            "range": "± 7.285210199891225"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: ACL)",
            "value": 8963.384791782924,
            "unit": "ns",
            "range": "± 9.820979515563295"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: ACL)",
            "value": 12028.875630696615,
            "unit": "ns",
            "range": "± 15.859019798339721"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: ACL)",
            "value": 12048.107675405648,
            "unit": "ns",
            "range": "± 11.598784236445884"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: ACL)",
            "value": 13670.440145639273,
            "unit": "ns",
            "range": "± 14.843185259379215"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: ACL)",
            "value": 9272.279030936104,
            "unit": "ns",
            "range": "± 23.636842350645612"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: ACL)",
            "value": 11187.81215122768,
            "unit": "ns",
            "range": "± 12.45880342892444"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: ACL)",
            "value": 15029.712241036552,
            "unit": "ns",
            "range": "± 9.97083487295693"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: ACL)",
            "value": 13112.714385986328,
            "unit": "ns",
            "range": "± 7.5326666478315705"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: AOF)",
            "value": 121678.98646763393,
            "unit": "ns",
            "range": "± 266.62875975222875"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: AOF)",
            "value": 43140.91937725361,
            "unit": "ns",
            "range": "± 85.99912825629093"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: AOF)",
            "value": 42903.32946777344,
            "unit": "ns",
            "range": "± 66.07840683565213"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: AOF)",
            "value": 49677.83996582031,
            "unit": "ns",
            "range": "± 59.842375449971314"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: AOF)",
            "value": 71610.5224609375,
            "unit": "ns",
            "range": "± 139.83747754157474"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: AOF)",
            "value": 95255.0044133113,
            "unit": "ns",
            "range": "± 303.69930190320355"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: AOF)",
            "value": 54123.502458844865,
            "unit": "ns",
            "range": "± 306.1394362745097"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: AOF)",
            "value": 37636.89809945913,
            "unit": "ns",
            "range": "± 47.44754692222555"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: AOF)",
            "value": 49223.550649789664,
            "unit": "ns",
            "range": "± 67.27190679049903"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: AOF)",
            "value": 72104.03093610491,
            "unit": "ns",
            "range": "± 297.85846521058266"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: AOF)",
            "value": 57728.36565290178,
            "unit": "ns",
            "range": "± 124.72610053732714"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: AOF)",
            "value": 9272.924259730748,
            "unit": "ns",
            "range": "± 15.050218871490966"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: AOF)",
            "value": 59664.76527622768,
            "unit": "ns",
            "range": "± 152.6336436599453"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: AOF)",
            "value": 47917.07981654576,
            "unit": "ns",
            "range": "± 160.2505025958113"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: AOF)",
            "value": 49118.62675593449,
            "unit": "ns",
            "range": "± 80.05641365296026"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetDel(Params: None)",
            "value": 103185.26814778645,
            "unit": "ns",
            "range": "± 156.35004987424668"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HExists(Params: None)",
            "value": 42101.69677734375,
            "unit": "ns",
            "range": "± 69.76661400024561"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGet(Params: None)",
            "value": 43897.72033691406,
            "unit": "ns",
            "range": "± 42.827699651994344"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HGetAll(Params: None)",
            "value": 48276.26154972957,
            "unit": "ns",
            "range": "± 66.8069019741241"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrby(Params: None)",
            "value": 62912.94148763021,
            "unit": "ns",
            "range": "± 216.82723843673966"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HIncrbyFloat(Params: None)",
            "value": 87194.30989583333,
            "unit": "ns",
            "range": "± 279.63633944149194"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HKeys(Params: None)",
            "value": 51838.52669852121,
            "unit": "ns",
            "range": "± 49.36259756473159"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HLen(Params: None)",
            "value": 41488.12953404018,
            "unit": "ns",
            "range": "± 135.91970576552225"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMGet(Params: None)",
            "value": 47524.19926570012,
            "unit": "ns",
            "range": "± 51.9065094709547"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HMSet(Params: None)",
            "value": 63652.073451450895,
            "unit": "ns",
            "range": "± 182.33324924851857"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HRandField(Params: None)",
            "value": 57561.398080679086,
            "unit": "ns",
            "range": "± 194.0009041393829"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HScan(Params: None)",
            "value": 9166.156768798828,
            "unit": "ns",
            "range": "± 13.569559126524771"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HSetNx(Params: None)",
            "value": 52201.263427734375,
            "unit": "ns",
            "range": "± 83.52201973919009"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HStrLen(Params: None)",
            "value": 46347.822265625,
            "unit": "ns",
            "range": "± 59.094073936203934"
          },
          {
            "name": "BDN.benchmark.Operations.HashObjectOperations.HVals(Params: None)",
            "value": 47428.32275390625,
            "unit": "ns",
            "range": "± 67.34661922310552"
          }
        ]
      }
    ],
    "Operations.CustomOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559469970,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 58307.974609375,
            "unit": "ns",
            "range": "± 306.73779992335403"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 232878.202671596,
            "unit": "ns",
            "range": "± 1850.8730089274377"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 118789.59769694011,
            "unit": "ns",
            "range": "± 547.3311313916695"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 106629.79221598308,
            "unit": "ns",
            "range": "± 50.034635076799134"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 58695.55375017439,
            "unit": "ns",
            "range": "± 162.16240151959641"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 241353.45706612724,
            "unit": "ns",
            "range": "± 1537.7382103699692"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 131772.3792154948,
            "unit": "ns",
            "range": "± 951.566981492638"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 140734.29908854168,
            "unit": "ns",
            "range": "± 764.9550805478594"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 59089.191090901695,
            "unit": "ns",
            "range": "± 219.602640432954"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 240725.25599083534,
            "unit": "ns",
            "range": "± 919.8633160514374"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 124165.88159179688,
            "unit": "ns",
            "range": "± 259.37732195233735"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 110811.63556377705,
            "unit": "ns",
            "range": "± 159.1220138960968"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578760412,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 59000.30969238281,
            "unit": "ns",
            "range": "± 244.42791897527434"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 239916.1060884916,
            "unit": "ns",
            "range": "± 536.4911973196116"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 118630.28885904948,
            "unit": "ns",
            "range": "± 211.65630969604354"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 105719.89762660435,
            "unit": "ns",
            "range": "± 195.35049170439967"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 58678.147259051984,
            "unit": "ns",
            "range": "± 93.29938482096841"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 241811.66770833332,
            "unit": "ns",
            "range": "± 561.569207636057"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 129865.5790201823,
            "unit": "ns",
            "range": "± 363.5095050098026"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 136120.3040677584,
            "unit": "ns",
            "range": "± 346.9902992659322"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 59085.31113179525,
            "unit": "ns",
            "range": "± 65.87536257496868"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 233767.94614955358,
            "unit": "ns",
            "range": "± 943.3212833378072"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 119763.41202218192,
            "unit": "ns",
            "range": "± 532.0774341677024"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 111185.17707926432,
            "unit": "ns",
            "range": "± 687.4859909755112"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734595991820,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 58726.34251098633,
            "unit": "ns",
            "range": "± 251.10969570967129"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 235783.021484375,
            "unit": "ns",
            "range": "± 738.2262111364395"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 119451.51524000902,
            "unit": "ns",
            "range": "± 266.7250342909334"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 110058.4108101981,
            "unit": "ns",
            "range": "± 648.2027222473988"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 58600.65360921224,
            "unit": "ns",
            "range": "± 264.158573827293"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 242552.38201032366,
            "unit": "ns",
            "range": "± 1730.4292202140741"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 131464.65732828775,
            "unit": "ns",
            "range": "± 425.52819199952984"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 143361.77118791852,
            "unit": "ns",
            "range": "± 321.3167095594822"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 58268.91427408854,
            "unit": "ns",
            "range": "± 338.8064726622009"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 242112.06926618304,
            "unit": "ns",
            "range": "± 1173.198704237759"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 119980.50673014323,
            "unit": "ns",
            "range": "± 500.7045507853138"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 112084.93789469401,
            "unit": "ns",
            "range": "± 515.9194753376996"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643440203,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 59792.46854654948,
            "unit": "ns",
            "range": "± 69.3952207218834"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 252814.1730143229,
            "unit": "ns",
            "range": "± 1957.6740389800868"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 115385.58368937175,
            "unit": "ns",
            "range": "± 107.56545040455813"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 112842.07627986028,
            "unit": "ns",
            "range": "± 257.0315757550865"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 57048.1357421875,
            "unit": "ns",
            "range": "± 326.8518048592005"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 248658.8282877604,
            "unit": "ns",
            "range": "± 2252.504249636598"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 131074.3539381761,
            "unit": "ns",
            "range": "± 387.0994200921391"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 136696.15239257814,
            "unit": "ns",
            "range": "± 1454.1677067986716"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 59584.593200683594,
            "unit": "ns",
            "range": "± 56.64603819170101"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 228697.8384821965,
            "unit": "ns",
            "range": "± 912.7570046426019"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 120153.3653116862,
            "unit": "ns",
            "range": "± 906.7122995689471"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 110015.0903116862,
            "unit": "ns",
            "range": "± 563.5112955986249"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647714468,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 59714.45160319011,
            "unit": "ns",
            "range": "± 322.06816054069697"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 229275.52255483775,
            "unit": "ns",
            "range": "± 304.55237992648637"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 120024.50572713216,
            "unit": "ns",
            "range": "± 100.01465063501074"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 109171.60313313802,
            "unit": "ns",
            "range": "± 639.8073864917137"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 57144.48476969401,
            "unit": "ns",
            "range": "± 370.0909164395566"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 246133.95504557292,
            "unit": "ns",
            "range": "± 2744.1448707442155"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 131548.64309082032,
            "unit": "ns",
            "range": "± 1596.095298071397"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 137753.1330891927,
            "unit": "ns",
            "range": "± 1364.161224127983"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 57278.974475567156,
            "unit": "ns",
            "range": "± 166.36382595630022"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 236112.92593149038,
            "unit": "ns",
            "range": "± 2271.6851113995513"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 117485.59895833333,
            "unit": "ns",
            "range": "± 155.44980195440522"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 109067.47444661458,
            "unit": "ns",
            "range": "± 106.96223765918769"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652498622,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 59236.38881037785,
            "unit": "ns",
            "range": "± 84.78989107604038"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 239402.53010441706,
            "unit": "ns",
            "range": "± 973.2860148615479"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 119599.7933255709,
            "unit": "ns",
            "range": "± 481.6822594907523"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 109370.54041341147,
            "unit": "ns",
            "range": "± 492.604846536467"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 59852.741107647234,
            "unit": "ns",
            "range": "± 273.4151468895823"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 248521.09408804087,
            "unit": "ns",
            "range": "± 1496.7465700298037"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 130984.97961425781,
            "unit": "ns",
            "range": "± 1667.5144784233753"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 138212.82120768228,
            "unit": "ns",
            "range": "± 334.421674281406"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 58350.76025187175,
            "unit": "ns",
            "range": "± 299.69056275106266"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 232247.1064860026,
            "unit": "ns",
            "range": "± 1341.0508023322814"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 121284.0446495643,
            "unit": "ns",
            "range": "± 1175.339732527712"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 117367.42833455403,
            "unit": "ns",
            "range": "± 160.05528185053504"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747155175,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 58861.480977376305,
            "unit": "ns",
            "range": "± 155.87023567995433"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 241986.74612862724,
            "unit": "ns",
            "range": "± 1140.5897212376724"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 118392.72144426618,
            "unit": "ns",
            "range": "± 440.7541209585454"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 116663.2297101702,
            "unit": "ns",
            "range": "± 310.1342280374092"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 58924.17008056641,
            "unit": "ns",
            "range": "± 417.28945322436954"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 239747.4140625,
            "unit": "ns",
            "range": "± 1072.4326638679308"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 130473.2638671875,
            "unit": "ns",
            "range": "± 863.0529059019442"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 141517.51736886162,
            "unit": "ns",
            "range": "± 762.7346199560503"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 61172.44883219401,
            "unit": "ns",
            "range": "± 255.44112885324304"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 239952.9280536358,
            "unit": "ns",
            "range": "± 1283.9933331673656"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 118089.5275530134,
            "unit": "ns",
            "range": "± 910.9139330367095"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 109787.04181722006,
            "unit": "ns",
            "range": "± 427.42696551981356"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906799877,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 58316.247235107425,
            "unit": "ns",
            "range": "± 228.67371299931057"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 241918.0600423177,
            "unit": "ns",
            "range": "± 1605.5003632632006"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 120877.80573730469,
            "unit": "ns",
            "range": "± 648.2308187778943"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 108085.03793100211,
            "unit": "ns",
            "range": "± 132.55449442870062"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 59978.8770304362,
            "unit": "ns",
            "range": "± 556.7406070515651"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 243526.62287248884,
            "unit": "ns",
            "range": "± 2080.3848579262835"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 128670.57840670072,
            "unit": "ns",
            "range": "± 383.8374477663123"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 133609.04500325522,
            "unit": "ns",
            "range": "± 781.9443375765793"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 60764.165544782365,
            "unit": "ns",
            "range": "± 292.9352694491396"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 230879.19161783854,
            "unit": "ns",
            "range": "± 813.3066818560394"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 119607.50747477214,
            "unit": "ns",
            "range": "± 876.4233592039233"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 106034.06184895833,
            "unit": "ns",
            "range": "± 175.65800462104025"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407633260,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 58262.25009859525,
            "unit": "ns",
            "range": "± 116.1157538013069"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 230732.12205403644,
            "unit": "ns",
            "range": "± 1093.4558035826517"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 120639.59622896634,
            "unit": "ns",
            "range": "± 140.43319724282688"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 106123.38763834635,
            "unit": "ns",
            "range": "± 502.2499298943684"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 61397.25546061198,
            "unit": "ns",
            "range": "± 396.2667841158654"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 242672.09016927084,
            "unit": "ns",
            "range": "± 1147.3346879418878"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 129862.42392985027,
            "unit": "ns",
            "range": "± 233.3545380435254"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 133959.2036696214,
            "unit": "ns",
            "range": "± 428.76780851851703"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 61025.902108328686,
            "unit": "ns",
            "range": "± 254.21253957589684"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 229876.6137507512,
            "unit": "ns",
            "range": "± 617.563113785742"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 123072.83202311197,
            "unit": "ns",
            "range": "± 693.243033032864"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 110775.03471679687,
            "unit": "ns",
            "range": "± 488.4043355639636"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187307857,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 61815.2880086263,
            "unit": "ns",
            "range": "± 611.2648130632242"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 242990.22190755207,
            "unit": "ns",
            "range": "± 2226.231196666857"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 122821.34322684152,
            "unit": "ns",
            "range": "± 139.05913754633508"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 112405.50828857422,
            "unit": "ns",
            "range": "± 552.5772885013497"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 60774.95319039481,
            "unit": "ns",
            "range": "± 318.8644339063034"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 250801.9751915565,
            "unit": "ns",
            "range": "± 1311.2646683073926"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 132338.12333984376,
            "unit": "ns",
            "range": "± 424.6375157869771"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 132407.3671123798,
            "unit": "ns",
            "range": "± 506.2225037514088"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 60178.76611938477,
            "unit": "ns",
            "range": "± 257.7010797228494"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 241207.17810058594,
            "unit": "ns",
            "range": "± 589.5813750988896"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 118631.32513834635,
            "unit": "ns",
            "range": "± 469.2132042180947"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 111060.80906575521,
            "unit": "ns",
            "range": "± 508.02821224633476"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283130992,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 62561.64676607572,
            "unit": "ns",
            "range": "± 129.5746192246992"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 234743.67518833705,
            "unit": "ns",
            "range": "± 1059.2051823712152"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 118180.24536132812,
            "unit": "ns",
            "range": "± 433.4013990335271"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 111298.16184895833,
            "unit": "ns",
            "range": "± 569.4316866518947"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 58435.33196585519,
            "unit": "ns",
            "range": "± 159.7448940366368"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 246474.98667689733,
            "unit": "ns",
            "range": "± 1810.356245557042"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 139502.8613455636,
            "unit": "ns",
            "range": "± 588.7628312543975"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 141060.41678059896,
            "unit": "ns",
            "range": "± 793.0150719456366"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 63225.40979003906,
            "unit": "ns",
            "range": "± 237.6198764066881"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 234430.68373325892,
            "unit": "ns",
            "range": "± 1578.0834536097475"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 120055.89621407645,
            "unit": "ns",
            "range": "± 386.42037471648376"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 105489.76810396634,
            "unit": "ns",
            "range": "± 78.99099993314347"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376181492,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 57712.45480855306,
            "unit": "ns",
            "range": "± 66.59558394251019"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 234675.72677408854,
            "unit": "ns",
            "range": "± 790.7570975216935"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 118493.07144601004,
            "unit": "ns",
            "range": "± 865.8881055044955"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 114791.14597981771,
            "unit": "ns",
            "range": "± 784.6490783039436"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 58975.645697960485,
            "unit": "ns",
            "range": "± 105.59360155410313"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 246077.65966796875,
            "unit": "ns",
            "range": "± 1782.9180988049459"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 131143.97225516182,
            "unit": "ns",
            "range": "± 663.7355775546948"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 136285.95419921874,
            "unit": "ns",
            "range": "± 970.8092449059249"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 58738.8702351888,
            "unit": "ns",
            "range": "± 232.19913437173395"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 237505.09641927082,
            "unit": "ns",
            "range": "± 816.2395760498407"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 123867.78989955357,
            "unit": "ns",
            "range": "± 696.7581417061048"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 108845.7849469866,
            "unit": "ns",
            "range": "± 379.5622397587082"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461887481,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 62385.671970912386,
            "unit": "ns",
            "range": "± 73.73233350415612"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 237787.70751953125,
            "unit": "ns",
            "range": "± 950.0810678337053"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 118711.40889485677,
            "unit": "ns",
            "range": "± 606.1961557030128"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 106879.275390625,
            "unit": "ns",
            "range": "± 800.0048510505421"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 58975.97033691406,
            "unit": "ns",
            "range": "± 259.5855245766558"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 249112.7413736979,
            "unit": "ns",
            "range": "± 1837.4075670806478"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 132707.41898018974,
            "unit": "ns",
            "range": "± 747.5845648168442"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 136619.141796875,
            "unit": "ns",
            "range": "± 789.5910502420152"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 60430.41059758113,
            "unit": "ns",
            "range": "± 92.32840586067418"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 235595.61455078126,
            "unit": "ns",
            "range": "± 1120.072905608993"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 119173.29479980469,
            "unit": "ns",
            "range": "± 346.9343667881548"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 111503.01768275669,
            "unit": "ns",
            "range": "± 553.0451774664297"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479721695,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60379.90551321847,
            "unit": "ns",
            "range": "± 45.10712333711698"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 236207.49764578682,
            "unit": "ns",
            "range": "± 575.4794679834594"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 118642.353515625,
            "unit": "ns",
            "range": "± 238.52381812037962"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 106711.08674839565,
            "unit": "ns",
            "range": "± 468.23814799284247"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 59647.021846516924,
            "unit": "ns",
            "range": "± 298.17631960011704"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 243827.25101143974,
            "unit": "ns",
            "range": "± 1733.005967120905"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 134793.42049734932,
            "unit": "ns",
            "range": "± 409.47031852806447"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 136190.21709735578,
            "unit": "ns",
            "range": "± 853.1927956156267"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 59721.709493001305,
            "unit": "ns",
            "range": "± 272.56628906150473"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 234496.22000558037,
            "unit": "ns",
            "range": "± 995.8192199315278"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 119629.8029703776,
            "unit": "ns",
            "range": "± 549.3702937754791"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 110716.60342610677,
            "unit": "ns",
            "range": "± 438.45067017736915"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553562381,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60276.337565104164,
            "unit": "ns",
            "range": "± 249.98580228272635"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 234703.4562174479,
            "unit": "ns",
            "range": "± 1119.3147720835611"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 119888.41034342448,
            "unit": "ns",
            "range": "± 554.7076840086914"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 106836.89620535714,
            "unit": "ns",
            "range": "± 695.5007269909153"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 59809.8293762207,
            "unit": "ns",
            "range": "± 243.95199659874226"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 250920.20458984375,
            "unit": "ns",
            "range": "± 2228.1112870635898"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 137463.84195382256,
            "unit": "ns",
            "range": "± 546.799633503169"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 133776.47462565106,
            "unit": "ns",
            "range": "± 847.925510115466"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 59103.13895263672,
            "unit": "ns",
            "range": "± 248.36564254851888"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 233098.6953125,
            "unit": "ns",
            "range": "± 1276.7893781498694"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 119920.24788120815,
            "unit": "ns",
            "range": "± 753.9386908894867"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 110821.77521623884,
            "unit": "ns",
            "range": "± 274.85564762637125"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655775915,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60319.89220377604,
            "unit": "ns",
            "range": "± 341.28816897573313"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 232709.50942382813,
            "unit": "ns",
            "range": "± 1350.3923453371"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 120512.9212552584,
            "unit": "ns",
            "range": "± 106.50912824689863"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 110773.01850179037,
            "unit": "ns",
            "range": "± 397.60896164951157"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 61567.35828857422,
            "unit": "ns",
            "range": "± 390.6744487725436"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 249773.89200846353,
            "unit": "ns",
            "range": "± 1455.6700366368266"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 138901.70751953125,
            "unit": "ns",
            "range": "± 871.1845429053926"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 136866.52088216145,
            "unit": "ns",
            "range": "± 855.841789425897"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 58764.439392089844,
            "unit": "ns",
            "range": "± 179.9718530532341"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 239273.77210286458,
            "unit": "ns",
            "range": "± 1275.1300197824546"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 120016.53399658203,
            "unit": "ns",
            "range": "± 693.5239571753627"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 107948.65424804688,
            "unit": "ns",
            "range": "± 522.1621985020638"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253992709,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60045.214375813805,
            "unit": "ns",
            "range": "± 78.19427969331649"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 240452.2007359096,
            "unit": "ns",
            "range": "± 719.832770885572"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 121933.48962402344,
            "unit": "ns",
            "range": "± 192.91368798035705"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 110628.92379557292,
            "unit": "ns",
            "range": "± 527.3997860066867"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 60453.6237487793,
            "unit": "ns",
            "range": "± 64.32683084066994"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 252368.21709735578,
            "unit": "ns",
            "range": "± 945.2711654989215"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 135538.63168569712,
            "unit": "ns",
            "range": "± 504.82624112582613"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 135737.29333496094,
            "unit": "ns",
            "range": "± 775.9691438413959"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 57957.618225097656,
            "unit": "ns",
            "range": "± 213.65968467440405"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 234589.16104561943,
            "unit": "ns",
            "range": "± 552.8375930823263"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 119257.74771321614,
            "unit": "ns",
            "range": "± 570.3041084735163"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 107910.92585449219,
            "unit": "ns",
            "range": "± 466.8391220253006"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788615783,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 61245.67383684431,
            "unit": "ns",
            "range": "± 102.76568713900775"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 228602.5609700521,
            "unit": "ns",
            "range": "± 1638.5352206918865"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 127250.80243389423,
            "unit": "ns",
            "range": "± 329.5972871270528"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 113435.20034790039,
            "unit": "ns",
            "range": "± 143.6438058110523"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 60611.530700683594,
            "unit": "ns",
            "range": "± 196.86890636581649"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 237671.91536458334,
            "unit": "ns",
            "range": "± 1250.850325083548"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 136031.6058872768,
            "unit": "ns",
            "range": "± 413.9916954958595"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 139319.59397670202,
            "unit": "ns",
            "range": "± 961.0539439840155"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 61862.9674987793,
            "unit": "ns",
            "range": "± 68.98068315085946"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 229484.7082425631,
            "unit": "ns",
            "range": "± 616.1143196212541"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 123376.7544133113,
            "unit": "ns",
            "range": "± 510.61402710079557"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 112518.16891682943,
            "unit": "ns",
            "range": "± 580.9415362887592"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050382907,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 43269.86384800502,
            "unit": "ns",
            "range": "± 268.79103230196023"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 185349.95658365884,
            "unit": "ns",
            "range": "± 296.92038114867785"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 116068.7976335798,
            "unit": "ns",
            "range": "± 475.2552319598833"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 96486.02491106305,
            "unit": "ns",
            "range": "± 500.09188455285636"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 45388.322021484375,
            "unit": "ns",
            "range": "± 84.20891989694013"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 206594.39720865886,
            "unit": "ns",
            "range": "± 1091.9578260040826"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 134119.47885742187,
            "unit": "ns",
            "range": "± 1187.585039449718"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 120989.08144124348,
            "unit": "ns",
            "range": "± 503.05318166908734"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 44005.05090332031,
            "unit": "ns",
            "range": "± 207.31000823706685"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 185682.22748674665,
            "unit": "ns",
            "range": "± 1049.9047423452955"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 118728.09635823568,
            "unit": "ns",
            "range": "± 539.1392271723125"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 93292.40892740885,
            "unit": "ns",
            "range": "± 534.2459201743777"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368891232,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 45407.69865199498,
            "unit": "ns",
            "range": "± 268.97410491632695"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 193193.185941256,
            "unit": "ns",
            "range": "± 623.5833969428595"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 117823.8948082557,
            "unit": "ns",
            "range": "± 201.20420616042617"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 103408.20424107143,
            "unit": "ns",
            "range": "± 380.4058690349694"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 45835.25333815355,
            "unit": "ns",
            "range": "± 129.9206363373665"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 197263.91424153646,
            "unit": "ns",
            "range": "± 837.0155156155859"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 136652.78205217634,
            "unit": "ns",
            "range": "± 1426.1089685569793"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 123039.57049967448,
            "unit": "ns",
            "range": "± 328.15433515525194"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 44230.28829721304,
            "unit": "ns",
            "range": "± 25.13907311084282"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 188853.4624586839,
            "unit": "ns",
            "range": "± 1121.344370402561"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 122889.14708533653,
            "unit": "ns",
            "range": "± 514.8287049740418"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 98251.44343261719,
            "unit": "ns",
            "range": "± 468.3683647216392"
          }
        ]
      }
    ],
    "Operations.CustomOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "name": "kevin-montrose",
            "username": "kevin-montrose",
            "email": "kmontrose@microsoft.com"
          },
          "committer": {
            "name": "GitHub",
            "username": "web-flow",
            "email": "noreply@github.com"
          },
          "id": "b256901fd086f3823420c4b90c95b87b5a20b1a5",
          "message": "Lua Scripting Allocation, Performance, and Correctness Improvements (#882)\n\n* NLua -> KeraLua; literally nothing compiles\r\n\r\n* blind idiot translation into KeraLua; nothing works\r\n\r\n* very basic functionality restored\r\n\r\n* more complicated functionality sketched out; far from ideal, will need to upstream some KeraLua additions; also horribly broken\r\n\r\n* handle errors during script run (compilation is still unguarded, as we can't really do much there)\r\n\r\n* faster (and easier to understand, frankly) way to set and clear KEYS and ARGV at start\r\n\r\n* a little more functional; moving OK/ERR checking into the loader script may not be viable... but was worth experimenting with\r\n\r\n* redis.call should not accept table arguments, only strings and numbers; fix some ZADD scripting tests; special err response stuff can't be done on the Lua side, remove it\r\n\r\n* scripting appears to be at parity with NLua implementation\r\n\r\n* fix error propogation; implement needed functions for direct script running; all tests passing again\r\n\r\n* start on removing allocations and fixing encodings\r\n\r\n* remove more allocs\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* add a test (and fixes) confirming that redis.call errors match Redis behavior\r\n\r\n* remove more allocations\r\n\r\n* add a test for weird binary values, note this fails in main today\r\n\r\n* knock out some alloc todos; do some cleanup\r\n\r\n* remove some more allocations\r\n\r\n* response processesing is now allocation free\r\n\r\n* kill a hand full of additional allocations\r\n\r\n* DRY up some repeated checks; assert assumptions about Lua stack in DEBUG builds\r\n\r\n* adjust some names, these keep confusing me; preparing for writing response directly to network stream\r\n\r\n* first whack at getting script results directly into network stream; lots broken right now\r\n\r\n* first pass of tables directly into network stream\r\n\r\n* complex data types now written out directly\r\n\r\n* Runner (ie. mapping Resp <-> .NET) restored to functionality; bits of cleanup\r\n\r\n* knock out some todo; pulling Lua constants in CmdStrings like everything else; avoid copying regular used strings into Lua each time they're needed\r\n\r\n* Benchmark depends on missing sessions always causing nil responses, which is odd, but easy enough to restore\r\n\r\n* remove one bespoke array rental\r\n\r\n* Remvoe another bespoke array rental\r\n\r\n* Yet another bespoke array rental\r\n\r\n* Cleanup\r\n\r\n* more benchmarks for LuaRunner; test that parameter resets work\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* most overhead is in pinvoke, so start moving some stuff over\r\n\r\n* where we've already proven a type is a number or string, skip a pinvoke to double check the type\r\n\r\n* avoid checkstack calls by tracking stack capacity on our side\r\n\r\n* remove more allocs\r\n\r\n* remove more allocs\r\n\r\n* add a benchmark for script operations\r\n\r\n* script lookup is in the hot path, so optimize the key type we're using a bit\r\n\r\n* expand ScriptOperations benchmark to actually invoke some functions and do some logic\r\n\r\n* huge cleanup; move all the Lua interop into a dedicated class, normalize stack checking, normalize assertions\r\n\r\n* switch to LibraryImport since we're on .NET 8\r\n\r\n* do a big audit of Lua invokes and mark where GC transition can be suppressed - it's unclear if .NET is actually doing that today, but it's safe\r\n\r\n* add a benchmark that returns an array, as there's an outstanding TODO to look at removing some p/invokes\r\n\r\n* nope\r\n\r\n* add a test for metatable behavior matching Redis; switch to Raw operations where now allowed; more closely sync methods exposed in Lua to those provided by Redis\r\n\r\n* todone\r\n\r\n* formatting\r\n\r\n* address feedback; spelling nits",
          "timestamp": "2024-12-18T19:48:38Z",
          "url": "https://github.com/microsoft/garnet/commit/b256901fd086f3823420c4b90c95b87b5a20b1a5"
        },
        "date": 1734559656135,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 61360.97271259014,
            "unit": "ns",
            "range": "± 47.72854557083025"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 225859.0087890625,
            "unit": "ns",
            "range": "± 541.8883416044471"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 129108.58317057292,
            "unit": "ns",
            "range": "± 301.4186844399309"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 109305.48706054688,
            "unit": "ns",
            "range": "± 644.2590561830875"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 59822.196451822914,
            "unit": "ns",
            "range": "± 50.573942298276165"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 238074.28260216347,
            "unit": "ns",
            "range": "± 336.53858828018235"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 142595.40690104166,
            "unit": "ns",
            "range": "± 332.91430075591563"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 131176.30092075892,
            "unit": "ns",
            "range": "± 317.85658708363775"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 60742.99081655649,
            "unit": "ns",
            "range": "± 55.518860777728484"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 218179.50533353366,
            "unit": "ns",
            "range": "± 179.12771092068078"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 134296.17919921875,
            "unit": "ns",
            "range": "± 135.03712772560388"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 108678.47028459821,
            "unit": "ns",
            "range": "± 90.29682009963271"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1f856686d638c00ff8120abb97d464e91bb9cf3b",
          "message": "Update ci-bdnbenchmark.yml (#890)",
          "timestamp": "2024-12-18T19:19:57-08:00",
          "tree_id": "44e9ec43a906a420fc56978d04e38514cc557d22",
          "url": "https://github.com/microsoft/garnet/commit/1f856686d638c00ff8120abb97d464e91bb9cf3b"
        },
        "date": 1734578868782,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 59430.72063739483,
            "unit": "ns",
            "range": "± 59.505877857308164"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 218576.36195591517,
            "unit": "ns",
            "range": "± 381.9550677757842"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 130789.697265625,
            "unit": "ns",
            "range": "± 185.07234745624143"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 108309.1081891741,
            "unit": "ns",
            "range": "± 127.60371440879454"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 61651.21553861178,
            "unit": "ns",
            "range": "± 117.92035209640869"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 229062.66392299108,
            "unit": "ns",
            "range": "± 842.0615096641033"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 138210.29750279017,
            "unit": "ns",
            "range": "± 327.3415116227562"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 131548.0183919271,
            "unit": "ns",
            "range": "± 311.46137439891373"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 61720.19566127232,
            "unit": "ns",
            "range": "± 61.53593385251946"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 221862.64485677084,
            "unit": "ns",
            "range": "± 387.7611969190268"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 131243.85463169642,
            "unit": "ns",
            "range": "± 128.71205111020276"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 109758.46886268028,
            "unit": "ns",
            "range": "± 272.91620627668874"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "820ca0fbae009817c2946a8205465b6f1de08b52",
          "message": "Add BDN that includes embedded network stack (#889)\n\n* Initial checkin on BDN that includes network path - handles non-TLS only\r\n\r\n* cleanup\r\n\r\n* ensure dispose\r\n\r\n* cleanup\r\n\r\n* merge from main\r\n\r\n* Update ci-bdnbenchmark.yml",
          "timestamp": "2024-12-19T00:06:41-08:00",
          "tree_id": "45f6c39d28c32318b8c2f04a6a6b923a5ba207e9",
          "url": "https://github.com/microsoft/garnet/commit/820ca0fbae009817c2946a8205465b6f1de08b52"
        },
        "date": 1734596089063,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60382.752990722656,
            "unit": "ns",
            "range": "± 71.83763090112394"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 218458.67745535713,
            "unit": "ns",
            "range": "± 343.11578849077324"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 129748.42435396634,
            "unit": "ns",
            "range": "± 238.57584947475777"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 109078.68276742789,
            "unit": "ns",
            "range": "± 76.17960970230067"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 61352.6611328125,
            "unit": "ns",
            "range": "± 83.65705427036328"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 235882.55092075892,
            "unit": "ns",
            "range": "± 1043.1391263535525"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 146818.3829752604,
            "unit": "ns",
            "range": "± 300.3862621773141"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 133935.04169170672,
            "unit": "ns",
            "range": "± 416.9497816793428"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 62044.674072265625,
            "unit": "ns",
            "range": "± 154.73895986712995"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 215945.89562049278,
            "unit": "ns",
            "range": "± 306.3383402436508"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 129386.44670758929,
            "unit": "ns",
            "range": "± 496.7402564414086"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 111328.67693219866,
            "unit": "ns",
            "range": "± 110.8666646576179"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a",
          "message": "Updated Lua values and added expected values for the new ScriptOperations (#891)\n\n* Updated Lua values and added expected values for the new ScriptOperations\r\n\r\n* Had wrong values for LargeScript None and LargeScript AOF.",
          "timestamp": "2024-12-19T13:17:16-08:00",
          "tree_id": "6ba962fbec0723620fa57f0a986b13412c10c70f",
          "url": "https://github.com/microsoft/garnet/commit/93fd0bf67152f25dfdc98f2ceb344a8c9cd6f91a"
        },
        "date": 1734643517605,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60639.64146205357,
            "unit": "ns",
            "range": "± 68.12700062627485"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 230790.8656529018,
            "unit": "ns",
            "range": "± 369.72997149669004"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 129532.11669921875,
            "unit": "ns",
            "range": "± 107.09374780867469"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 108365.18031529018,
            "unit": "ns",
            "range": "± 87.0097101356352"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 61091.218449519234,
            "unit": "ns",
            "range": "± 56.691793488958645"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 234545.2845982143,
            "unit": "ns",
            "range": "± 1143.9592321843468"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 140390.85693359375,
            "unit": "ns",
            "range": "± 451.74974565440766"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 132663.7548828125,
            "unit": "ns",
            "range": "± 324.71410807796565"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 62110.64218374399,
            "unit": "ns",
            "range": "± 56.615682214725545"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 217609.26688058037,
            "unit": "ns",
            "range": "± 321.2182001704535"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 130564.68098958333,
            "unit": "ns",
            "range": "± 151.30284183119167"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 108283.154296875,
            "unit": "ns",
            "range": "± 65.95686812639985"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45af48422d9759e5e1d071c8227608201e65aec4",
          "message": "BDN - add comments to commit, PR, etc. (#893)\n\nNeed to manually trigger on non-main branches for now.",
          "timestamp": "2024-12-19T14:28:44-08:00",
          "tree_id": "442f3f7870ee300b0f309f339fd0f71fc5ea9a57",
          "url": "https://github.com/microsoft/garnet/commit/45af48422d9759e5e1d071c8227608201e65aec4"
        },
        "date": 1734647870018,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 59348.75183105469,
            "unit": "ns",
            "range": "± 117.7987842424065"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 224817.27818080358,
            "unit": "ns",
            "range": "± 372.9359996323732"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 134218.4291294643,
            "unit": "ns",
            "range": "± 213.02295168544555"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 109906.99637276786,
            "unit": "ns",
            "range": "± 125.86784139849213"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 62654.864095052086,
            "unit": "ns",
            "range": "± 177.64154497402765"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 234642.080078125,
            "unit": "ns",
            "range": "± 1088.6631012899882"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 139473.9013671875,
            "unit": "ns",
            "range": "± 304.99745420810143"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 130705.25465745192,
            "unit": "ns",
            "range": "± 287.50870303682547"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 62742.891438802086,
            "unit": "ns",
            "range": "± 67.36885300038419"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 225372.09269205728,
            "unit": "ns",
            "range": "± 292.31412152529623"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 132740.3019205729,
            "unit": "ns",
            "range": "± 106.38344201441927"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 108421.78250826322,
            "unit": "ns",
            "range": "± 42.44569881712609"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76532ebf0622f0013bf09f57c36af877cdc1d12d",
          "message": "Added Network.BasicOperations, Network.RawStringOperations and corresponding expected values (#894)",
          "timestamp": "2024-12-19T15:48:39-08:00",
          "tree_id": "a58f2badb473dc6c1dd34ec24b8fad603c606be1",
          "url": "https://github.com/microsoft/garnet/commit/76532ebf0622f0013bf09f57c36af877cdc1d12d"
        },
        "date": 1734652636947,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60938.07373046875,
            "unit": "ns",
            "range": "± 56.276472140926316"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 228852.53436748797,
            "unit": "ns",
            "range": "± 402.12786087628467"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 130873.65025111607,
            "unit": "ns",
            "range": "± 268.0188424015215"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 109160.12479341947,
            "unit": "ns",
            "range": "± 78.48512513602908"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 60599.91455078125,
            "unit": "ns",
            "range": "± 56.49379041284348"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 237480.4931640625,
            "unit": "ns",
            "range": "± 621.9381868740758"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 138633.18033854166,
            "unit": "ns",
            "range": "± 466.4069239810901"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 130282.92887369792,
            "unit": "ns",
            "range": "± 306.0935608572014"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 61455.09381975447,
            "unit": "ns",
            "range": "± 81.2633087581896"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 218608.4437779018,
            "unit": "ns",
            "range": "± 281.5272989934045"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 130955.99888392857,
            "unit": "ns",
            "range": "± 113.14382152071482"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 108332.44934082031,
            "unit": "ns",
            "range": "± 67.27320306576236"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "47ac84f2844530611520648b4d43277e0a2e0fb3",
          "message": "BDN: use request struct to cleanup logic (#895)\n\n* Use struct to simplify BDN logic\r\n\r\n* update threshold\r\n\r\n* cleanup\r\n\r\n* nit",
          "timestamp": "2024-12-20T18:06:09-08:00",
          "tree_id": "9604c5438a0ed95b9e53d476eb01652c0e3bfb98",
          "url": "https://github.com/microsoft/garnet/commit/47ac84f2844530611520648b4d43277e0a2e0fb3"
        },
        "date": 1734747286433,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60561.71395438058,
            "unit": "ns",
            "range": "± 60.44983473862817"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 230173.04524739584,
            "unit": "ns",
            "range": "± 396.57534522423003"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 132170.11922200522,
            "unit": "ns",
            "range": "± 111.47548551798317"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 109194.64111328125,
            "unit": "ns",
            "range": "± 161.38604236968482"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 59801.97448730469,
            "unit": "ns",
            "range": "± 54.639141667405944"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 235320.7728794643,
            "unit": "ns",
            "range": "± 767.4105903965648"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 142438.88509114584,
            "unit": "ns",
            "range": "± 329.14107754102025"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 131916.34870256696,
            "unit": "ns",
            "range": "± 490.27340504594275"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 60838.16752115885,
            "unit": "ns",
            "range": "± 59.11974885753212"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 231668.6083984375,
            "unit": "ns",
            "range": "± 473.3332169935274"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 133274.52189127603,
            "unit": "ns",
            "range": "± 150.48269737418696"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 108464.22870342548,
            "unit": "ns",
            "range": "± 86.58937471105612"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906949539,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 59948.76251220703,
            "unit": "ns",
            "range": "± 41.43471819845649"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 228517.00627253606,
            "unit": "ns",
            "range": "± 406.53104981792006"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 127562.29596819196,
            "unit": "ns",
            "range": "± 173.3244422644106"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 108026.47094726562,
            "unit": "ns",
            "range": "± 129.21225891112405"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 59752.49539888822,
            "unit": "ns",
            "range": "± 51.82146416075971"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 231500.00697544642,
            "unit": "ns",
            "range": "± 510.2259747178018"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 145734.0275065104,
            "unit": "ns",
            "range": "± 380.35802950245096"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 131396.19140625,
            "unit": "ns",
            "range": "± 361.677101140775"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 59797.72127591647,
            "unit": "ns",
            "range": "± 70.62679173008792"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 215336.31591796875,
            "unit": "ns",
            "range": "± 220.27732138510333"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 132868.85009765625,
            "unit": "ns",
            "range": "± 144.46013296794757"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 111954.59876427284,
            "unit": "ns",
            "range": "± 152.9297036709577"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407768528,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60795.123291015625,
            "unit": "ns",
            "range": "± 100.38958599852752"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 224350.9969075521,
            "unit": "ns",
            "range": "± 378.89353259341084"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 129477.89916992188,
            "unit": "ns",
            "range": "± 66.80741994996112"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 106706.71735491071,
            "unit": "ns",
            "range": "± 83.5551445529805"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 59754.23818734976,
            "unit": "ns",
            "range": "± 88.00477790011621"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 236064.34849330358,
            "unit": "ns",
            "range": "± 1158.2937460406426"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 139404.27001953125,
            "unit": "ns",
            "range": "± 472.33403008524954"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 131979.5694986979,
            "unit": "ns",
            "range": "± 560.4616902806015"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 59147.24182128906,
            "unit": "ns",
            "range": "± 102.71420681803383"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 219501.16373697916,
            "unit": "ns",
            "range": "± 229.91850325879375"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 129245.57210286458,
            "unit": "ns",
            "range": "± 143.09382059975067"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 111136.19750976562,
            "unit": "ns",
            "range": "± 129.14100155039068"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187464305,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60891.807454427086,
            "unit": "ns",
            "range": "± 95.85623711549512"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 218049.00425502233,
            "unit": "ns",
            "range": "± 342.05449801002317"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 128359.11114032452,
            "unit": "ns",
            "range": "± 620.3314270143273"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 110494.91577148438,
            "unit": "ns",
            "range": "± 232.64907087955768"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 59663.759068080355,
            "unit": "ns",
            "range": "± 216.5116441118761"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 233271.80698939733,
            "unit": "ns",
            "range": "± 838.5023240922613"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 139482.2062174479,
            "unit": "ns",
            "range": "± 438.24115447049235"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 130072.61474609375,
            "unit": "ns",
            "range": "± 361.82947146770493"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 59167.16191218449,
            "unit": "ns",
            "range": "± 73.43614786610335"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 221667.1396108774,
            "unit": "ns",
            "range": "± 492.98323683205007"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 134014.80887276787,
            "unit": "ns",
            "range": "± 289.0715552776252"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 112427.39693777902,
            "unit": "ns",
            "range": "± 79.9049235788877"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283297916,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 61106.41784667969,
            "unit": "ns",
            "range": "± 187.58000156840785"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 225947.30224609375,
            "unit": "ns",
            "range": "± 407.7263900548682"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 132981.26918247767,
            "unit": "ns",
            "range": "± 223.01843453461854"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 107763.1571451823,
            "unit": "ns",
            "range": "± 51.55548892245036"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 61011.802455357145,
            "unit": "ns",
            "range": "± 67.61182024833187"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 237817.685546875,
            "unit": "ns",
            "range": "± 729.1737758860816"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 145520.81217447916,
            "unit": "ns",
            "range": "± 418.4876118964889"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 130713.00612229567,
            "unit": "ns",
            "range": "± 394.97546630757034"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 65318.404134114586,
            "unit": "ns",
            "range": "± 117.97468523409152"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 226072.80029296875,
            "unit": "ns",
            "range": "± 357.93116759543466"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 129151.89534505208,
            "unit": "ns",
            "range": "± 122.37290720548947"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 109298.52382114956,
            "unit": "ns",
            "range": "± 102.99750000773233"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376311567,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60444.11185128348,
            "unit": "ns",
            "range": "± 123.36218177436551"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 227259.4792292668,
            "unit": "ns",
            "range": "± 522.2626064400517"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 132618.046875,
            "unit": "ns",
            "range": "± 218.86601878591622"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 111081.03963216145,
            "unit": "ns",
            "range": "± 831.344403613814"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 60993.28572591146,
            "unit": "ns",
            "range": "± 80.19729584022127"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 234261.5478515625,
            "unit": "ns",
            "range": "± 701.0917421941218"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 150144.51153094953,
            "unit": "ns",
            "range": "± 465.0857316291863"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 133688.51806640625,
            "unit": "ns",
            "range": "± 843.9447632903633"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 65360.837965745195,
            "unit": "ns",
            "range": "± 92.35466465051239"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 223623.21602957588,
            "unit": "ns",
            "range": "± 375.07178985293723"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 132319.1544596354,
            "unit": "ns",
            "range": "± 182.84458732722166"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 108427.91835239956,
            "unit": "ns",
            "range": "± 133.41848968021378"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736462056008,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 63790.76131184896,
            "unit": "ns",
            "range": "± 129.76659923103756"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 227335.91590294472,
            "unit": "ns",
            "range": "± 212.5020902517918"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 129070.80159505208,
            "unit": "ns",
            "range": "± 267.4123480607633"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 108682.86092122395,
            "unit": "ns",
            "range": "± 109.18998658636676"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 61332.55310058594,
            "unit": "ns",
            "range": "± 40.535200721591806"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 250239.1316731771,
            "unit": "ns",
            "range": "± 266.7502943246247"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 143688.36588541666,
            "unit": "ns",
            "range": "± 460.3576689222537"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 136214.05029296875,
            "unit": "ns",
            "range": "± 271.08142007006467"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 63731.695556640625,
            "unit": "ns",
            "range": "± 53.78138828869362"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 222225.49072265625,
            "unit": "ns",
            "range": "± 518.4026291929883"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 132400.4109700521,
            "unit": "ns",
            "range": "± 145.40014119327236"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 108585.91047014509,
            "unit": "ns",
            "range": "± 123.61462931889213"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479840962,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 61212.44812011719,
            "unit": "ns",
            "range": "± 76.00646657392512"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 219346.17571149554,
            "unit": "ns",
            "range": "± 372.22529308157635"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 133202.8076171875,
            "unit": "ns",
            "range": "± 152.76846699382816"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 109317.0183454241,
            "unit": "ns",
            "range": "± 108.6862816487675"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 58905.41287935697,
            "unit": "ns",
            "range": "± 39.48176707501967"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 236477.31201171875,
            "unit": "ns",
            "range": "± 462.1425754656179"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 141055.048828125,
            "unit": "ns",
            "range": "± 510.8228674202239"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 131158.89369419642,
            "unit": "ns",
            "range": "± 387.5367528686016"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 62772.93184720553,
            "unit": "ns",
            "range": "± 79.24679088424388"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 222166.27009465144,
            "unit": "ns",
            "range": "± 334.824320413167"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 129414.4091796875,
            "unit": "ns",
            "range": "± 333.4781230911127"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 110075.97045898438,
            "unit": "ns",
            "range": "± 77.63639271911758"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553634042,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 59976.70939127604,
            "unit": "ns",
            "range": "± 87.6845744791824"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 226527.34375,
            "unit": "ns",
            "range": "± 855.9754186953702"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 131402.70472935267,
            "unit": "ns",
            "range": "± 126.95135548407208"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 110255.87076822917,
            "unit": "ns",
            "range": "± 168.66076146300415"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 59277.99189640926,
            "unit": "ns",
            "range": "± 126.49060234648186"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 244102.2705078125,
            "unit": "ns",
            "range": "± 920.9557188481822"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 144407.00857979912,
            "unit": "ns",
            "range": "± 652.0419630102386"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 131621.6853841146,
            "unit": "ns",
            "range": "± 482.59765665463556"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 61430.48612154447,
            "unit": "ns",
            "range": "± 84.83752432462167"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 224634.54066685267,
            "unit": "ns",
            "range": "± 622.2921227704095"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 129225.11067708333,
            "unit": "ns",
            "range": "± 654.2391504305782"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 108935.50066266741,
            "unit": "ns",
            "range": "± 114.89541327255127"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655980963,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 59060.47014508928,
            "unit": "ns",
            "range": "± 67.84325817728754"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 232513.83579799108,
            "unit": "ns",
            "range": "± 381.4677105329626"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 131958.22190504806,
            "unit": "ns",
            "range": "± 420.0217818241622"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 111557.34252929688,
            "unit": "ns",
            "range": "± 75.61242052810755"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 60319.32024274553,
            "unit": "ns",
            "range": "± 98.94798356742395"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 229200.51095145088,
            "unit": "ns",
            "range": "± 255.51043968061472"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 139573.56608072916,
            "unit": "ns",
            "range": "± 414.0913307523976"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 132291.0907451923,
            "unit": "ns",
            "range": "± 255.71606540881746"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 62061.997767857145,
            "unit": "ns",
            "range": "± 97.70689752577472"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 234368.7744140625,
            "unit": "ns",
            "range": "± 319.55539250110763"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 131206.75424429087,
            "unit": "ns",
            "range": "± 180.12289036865982"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 113049.64364858773,
            "unit": "ns",
            "range": "± 140.89761829698728"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254489656,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 61332.440592447914,
            "unit": "ns",
            "range": "± 88.8345727243192"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 217510.53059895834,
            "unit": "ns",
            "range": "± 314.25620785962593"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 135659.84212239584,
            "unit": "ns",
            "range": "± 305.84156989787465"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 109810.77619280134,
            "unit": "ns",
            "range": "± 95.9799821518064"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 60395.91369628906,
            "unit": "ns",
            "range": "± 45.1858922537937"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 235980.8194986979,
            "unit": "ns",
            "range": "± 728.6798334254095"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 144806.0196940104,
            "unit": "ns",
            "range": "± 445.3017496390478"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 134484.84130859375,
            "unit": "ns",
            "range": "± 315.61062357856963"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 61564.820556640625,
            "unit": "ns",
            "range": "± 90.12841350987273"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 223352.43765024038,
            "unit": "ns",
            "range": "± 291.207959555579"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 132102.42396763392,
            "unit": "ns",
            "range": "± 145.74603569439606"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 112973.78540039062,
            "unit": "ns",
            "range": "± 94.76445662513855"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737789125670,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 62772.49333308293,
            "unit": "ns",
            "range": "± 66.57202744356773"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 223204.28748497597,
            "unit": "ns",
            "range": "± 491.2703292806895"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 132595.51304408483,
            "unit": "ns",
            "range": "± 140.43257734438077"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 117512.33317057292,
            "unit": "ns",
            "range": "± 66.33593346817216"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 63335.69684709822,
            "unit": "ns",
            "range": "± 71.36885450348844"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 230559.05517578125,
            "unit": "ns",
            "range": "± 794.4708675047823"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 146641.9474283854,
            "unit": "ns",
            "range": "± 407.41712905912465"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 143440.49560546875,
            "unit": "ns",
            "range": "± 326.1017022399318"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 65200.0732421875,
            "unit": "ns",
            "range": "± 56.533971071069594"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 218783.5414341518,
            "unit": "ns",
            "range": "± 289.8175587182699"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 132802.3152669271,
            "unit": "ns",
            "range": "± 204.98819041051556"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 117719.14813701923,
            "unit": "ns",
            "range": "± 69.56458106118069"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050926879,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 60203.223092215405,
            "unit": "ns",
            "range": "± 122.42300973362025"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 207653.21533203125,
            "unit": "ns",
            "range": "± 822.293148516003"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 130510.57826450893,
            "unit": "ns",
            "range": "± 172.59317665486"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 112777.26033528645,
            "unit": "ns",
            "range": "± 113.96154460473733"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 55989.66587611607,
            "unit": "ns",
            "range": "± 58.03680770246876"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 217349.6240234375,
            "unit": "ns",
            "range": "± 549.3509663142461"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 141472.49267578125,
            "unit": "ns",
            "range": "± 307.8708737454562"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 137138.23523888222,
            "unit": "ns",
            "range": "± 318.2917421326134"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 60273.653564453125,
            "unit": "ns",
            "range": "± 58.57668872575919"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 206379.7127278646,
            "unit": "ns",
            "range": "± 373.3145404626187"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 130309.66448102679,
            "unit": "ns",
            "range": "± 142.34705623671996"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 112120.05964006696,
            "unit": "ns",
            "range": "± 85.96943914382027"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369375189,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: ACL)",
            "value": 63111.281040736605,
            "unit": "ns",
            "range": "± 110.60426283265052"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: ACL)",
            "value": 213335.30069986978,
            "unit": "ns",
            "range": "± 568.492853229165"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: ACL)",
            "value": 138336.80826822916,
            "unit": "ns",
            "range": "± 209.07258753235806"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: ACL)",
            "value": 117446.91913311298,
            "unit": "ns",
            "range": "± 168.3080573277134"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: AOF)",
            "value": 62000.467122395836,
            "unit": "ns",
            "range": "± 55.300597877439515"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: AOF)",
            "value": 216549.26513671875,
            "unit": "ns",
            "range": "± 732.3478165334307"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: AOF)",
            "value": 145110.498046875,
            "unit": "ns",
            "range": "± 372.7103392323457"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: AOF)",
            "value": 147220.5330403646,
            "unit": "ns",
            "range": "± 416.1311413150354"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomRawStringCommand(Params: None)",
            "value": 61324.25101143973,
            "unit": "ns",
            "range": "± 58.74314353362268"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomObjectCommand(Params: None)",
            "value": 210863.15046037946,
            "unit": "ns",
            "range": "± 340.04820711395445"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomTransaction(Params: None)",
            "value": 131977.74739583334,
            "unit": "ns",
            "range": "± 93.89533125492362"
          },
          {
            "name": "BDN.benchmark.Operations.CustomOperations.CustomProcedure(Params: None)",
            "value": 115937.13191105769,
            "unit": "ns",
            "range": "± 64.92171442563509"
          }
        ]
      }
    ],
    "Network.BasicOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906561501,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 50.03771458864212,
            "unit": "ns",
            "range": "± 0.46968140226160066"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407391981,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 49.65252383691924,
            "unit": "ns",
            "range": "± 0.258527670673178"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187096434,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 93.69598456223805,
            "unit": "ns",
            "range": "± 0.7755857568909211"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736282890643,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 95.3178168122585,
            "unit": "ns",
            "range": "± 0.30654920995261964"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736375948211,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 101.1893106619517,
            "unit": "ns",
            "range": "± 0.8047124769327589"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461665972,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 93.55826428303352,
            "unit": "ns",
            "range": "± 0.1507884399086219"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479495366,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 95.00012009342511,
            "unit": "ns",
            "range": "± 0.20380262918741018"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553302680,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 95.4594960468156,
            "unit": "ns",
            "range": "± 0.3494477173236237"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655539857,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 90.76830272491162,
            "unit": "ns",
            "range": "± 0.4363675967087796"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253763734,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 90.75020916461945,
            "unit": "ns",
            "range": "± 0.9107525084624151"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788401479,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 90.70261282920838,
            "unit": "ns",
            "range": "± 0.4821325265817971"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050151676,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 92.02773905992508,
            "unit": "ns",
            "range": "± 0.8721290849110028"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368672788,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 91.12771215438843,
            "unit": "ns",
            "range": "± 0.6903181214062138"
          }
        ]
      }
    ],
    "Network.BasicOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906664315,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 52.073063453038536,
            "unit": "ns",
            "range": "± 0.08080864405444546"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407436284,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 52.04337743612436,
            "unit": "ns",
            "range": "± 0.33453293769959863"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187149260,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 80.74142421994891,
            "unit": "ns",
            "range": "± 0.11353406974918345"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736282994052,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 82.73735920588176,
            "unit": "ns",
            "range": "± 0.23148043354723558"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376039975,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 82.30648040771484,
            "unit": "ns",
            "range": "± 0.16251536764089047"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461742252,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 82.25553035736084,
            "unit": "ns",
            "range": "± 0.18836841690077932"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479571810,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 80.82957359460684,
            "unit": "ns",
            "range": "± 0.11987395682435566"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553409322,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 81.1102894636301,
            "unit": "ns",
            "range": "± 0.14474196094058103"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655663100,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 82.17836538950603,
            "unit": "ns",
            "range": "± 0.16151020811099692"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253928641,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 82.22179157393319,
            "unit": "ns",
            "range": "± 0.1696689319332052"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788655845,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 82.4351994196574,
            "unit": "ns",
            "range": "± 0.17971607629717418"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050448614,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 81.25847322600228,
            "unit": "ns",
            "range": "± 0.11151861425480544"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368915831,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.BasicOperations.InlinePing(Params: None)",
            "value": 82.98839789170485,
            "unit": "ns",
            "range": "± 0.26702124031704444"
          }
        ]
      }
    ],
    "Network.RawStringOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906731314,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 189.19052991867065,
            "unit": "ns",
            "range": "± 1.1321916652654023"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 245.87832783063251,
            "unit": "ns",
            "range": "± 2.2483191207593074"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 233.02304639816285,
            "unit": "ns",
            "range": "± 1.1436427343584712"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 239.26921363671622,
            "unit": "ns",
            "range": "± 0.3250879793425084"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 212.06272926330567,
            "unit": "ns",
            "range": "± 1.2270654414647033"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 151.11316877145035,
            "unit": "ns",
            "range": "± 0.14764107388660797"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 262.7926650047302,
            "unit": "ns",
            "range": "± 0.6500337869629993"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 266.94678497314453,
            "unit": "ns",
            "range": "± 1.231405907280896"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 315.2668927192688,
            "unit": "ns",
            "range": "± 2.047984009060408"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 312.88899529774983,
            "unit": "ns",
            "range": "± 2.196053351374375"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407602288,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 190.3627461378391,
            "unit": "ns",
            "range": "± 0.572506932511447"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 242.01903471946716,
            "unit": "ns",
            "range": "± 1.3525211155256722"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 234.8861896140235,
            "unit": "ns",
            "range": "± 1.560961627201945"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 237.79990033308664,
            "unit": "ns",
            "range": "± 0.3071142145780565"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 210.833598057429,
            "unit": "ns",
            "range": "± 1.1371172339313993"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 151.91094428698221,
            "unit": "ns",
            "range": "± 1.5825775071131098"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 253.3043211868831,
            "unit": "ns",
            "range": "± 2.6177863036857265"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 257.37147653102875,
            "unit": "ns",
            "range": "± 0.4352021351232318"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 310.54873892239164,
            "unit": "ns",
            "range": "± 2.1327798475764492"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 316.0829096207252,
            "unit": "ns",
            "range": "± 3.278841612070327"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187250958,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 233.80070212909155,
            "unit": "ns",
            "range": "± 0.3550686841073969"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 290.8092979192734,
            "unit": "ns",
            "range": "± 0.4721997823608942"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 288.9673066775004,
            "unit": "ns",
            "range": "± 1.7030854779650544"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 294.0457975069682,
            "unit": "ns",
            "range": "± 0.4630967748018899"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 244.52969755445207,
            "unit": "ns",
            "range": "± 0.18343704053689874"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 190.2042807170323,
            "unit": "ns",
            "range": "± 0.9792497449509455"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 316.41262172063193,
            "unit": "ns",
            "range": "± 1.6774240546139747"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 309.7381169114794,
            "unit": "ns",
            "range": "± 1.19702087298659"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 366.85193424224855,
            "unit": "ns",
            "range": "± 3.9609248280101754"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 358.5393459002177,
            "unit": "ns",
            "range": "± 1.7741062794846552"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283060679,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 233.8702107157026,
            "unit": "ns",
            "range": "± 1.0304497290683172"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 291.25974148970386,
            "unit": "ns",
            "range": "± 0.5895241772871105"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 287.57996331728424,
            "unit": "ns",
            "range": "± 0.49127937276084077"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 304.9675682703654,
            "unit": "ns",
            "range": "± 2.7336839305380045"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 239.84362888336182,
            "unit": "ns",
            "range": "± 1.299149175631873"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 189.96240926583607,
            "unit": "ns",
            "range": "± 1.336029447581765"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 315.81882018309375,
            "unit": "ns",
            "range": "± 0.5747875786654996"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 309.35325024678156,
            "unit": "ns",
            "range": "± 1.590165073962775"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 360.5291872342428,
            "unit": "ns",
            "range": "± 2.0962703867973245"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 363.9489928563436,
            "unit": "ns",
            "range": "± 2.3364745517339616"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376117969,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 223.85257933934528,
            "unit": "ns",
            "range": "± 1.291994718926844"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 288.28548863728844,
            "unit": "ns",
            "range": "± 1.9576338225628345"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 278.4738355416518,
            "unit": "ns",
            "range": "± 0.9619362081798204"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 295.3426695210593,
            "unit": "ns",
            "range": "± 1.4015691582427656"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 297.7399179458618,
            "unit": "ns",
            "range": "± 1.3966504329893776"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 188.33051664829253,
            "unit": "ns",
            "range": "± 1.52074595822903"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 301.5713952064514,
            "unit": "ns",
            "range": "± 1.4732249910679855"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 305.90826537058905,
            "unit": "ns",
            "range": "± 1.2013199400883976"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 389.38290719985963,
            "unit": "ns",
            "range": "± 2.530035331540693"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 355.2735410928726,
            "unit": "ns",
            "range": "± 0.2400485498218751"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461833809,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 228.85856648853846,
            "unit": "ns",
            "range": "± 0.8664524124328914"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 288.66176784038544,
            "unit": "ns",
            "range": "± 0.5760066834522977"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 276.7671973307927,
            "unit": "ns",
            "range": "± 0.4895433035575181"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 296.25838602506195,
            "unit": "ns",
            "range": "± 0.19482131998207344"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 252.1102965795077,
            "unit": "ns",
            "range": "± 1.3135881254430906"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 189.06365483147758,
            "unit": "ns",
            "range": "± 0.7030156457658604"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 316.64199154193585,
            "unit": "ns",
            "range": "± 1.2828312843318064"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 303.376631626716,
            "unit": "ns",
            "range": "± 0.6304048083694048"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 361.7560090065002,
            "unit": "ns",
            "range": "± 2.0486338978417864"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 356.05553267796836,
            "unit": "ns",
            "range": "± 2.038048585981044"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479650305,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 228.58047523865332,
            "unit": "ns",
            "range": "± 0.6048881536412051"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 305.31128733498707,
            "unit": "ns",
            "range": "± 0.47798043497818166"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 273.8214533512409,
            "unit": "ns",
            "range": "± 0.342669478132377"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 298.03510974003717,
            "unit": "ns",
            "range": "± 1.9612659268509214"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 247.62591171264648,
            "unit": "ns",
            "range": "± 0.36126494611342586"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 198.57585852486747,
            "unit": "ns",
            "range": "± 0.7779019223645413"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 320.76348348458606,
            "unit": "ns",
            "range": "± 0.4021548072609255"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 306.0522880554199,
            "unit": "ns",
            "range": "± 1.9872762173270324"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 355.6915280342102,
            "unit": "ns",
            "range": "± 2.6018136398526157"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 351.39203899247303,
            "unit": "ns",
            "range": "± 1.637811490513314"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553472566,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 229.74451638062794,
            "unit": "ns",
            "range": "± 1.215332584707029"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 300.7566775542039,
            "unit": "ns",
            "range": "± 0.5558313736970248"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 297.4683835689838,
            "unit": "ns",
            "range": "± 0.5410599230210812"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 287.8972082455953,
            "unit": "ns",
            "range": "± 2.116081924989834"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 251.14659328460692,
            "unit": "ns",
            "range": "± 2.044968796243699"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 197.2511659860611,
            "unit": "ns",
            "range": "± 0.9748161026028687"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 315.4717491865158,
            "unit": "ns",
            "range": "± 0.5044824328372571"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 309.429678440094,
            "unit": "ns",
            "range": "± 1.167151309577062"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 352.48595318427454,
            "unit": "ns",
            "range": "± 1.3584225778298402"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 351.86355795179094,
            "unit": "ns",
            "range": "± 2.2195155754244755"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655704256,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 235.98601477486747,
            "unit": "ns",
            "range": "± 1.3381400053228627"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 289.4638826052348,
            "unit": "ns",
            "range": "± 2.1069917883734015"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 292.1395320892334,
            "unit": "ns",
            "range": "± 1.5210978267465398"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 312.33984443119596,
            "unit": "ns",
            "range": "± 1.528109572336922"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 247.35139434154217,
            "unit": "ns",
            "range": "± 0.9347783026448337"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 189.001850938797,
            "unit": "ns",
            "range": "± 1.3757690597050827"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 325.7917299951826,
            "unit": "ns",
            "range": "± 0.6816291930986816"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 316.04129907063077,
            "unit": "ns",
            "range": "± 1.6475097913864154"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 379.9825480461121,
            "unit": "ns",
            "range": "± 3.827366390295408"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 389.7390383084615,
            "unit": "ns",
            "range": "± 2.7545008267872513"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253926548,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 248.50510727564495,
            "unit": "ns",
            "range": "± 1.7538180091841313"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 291.5968502484835,
            "unit": "ns",
            "range": "± 0.6333593399431643"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 325.9324431078775,
            "unit": "ns",
            "range": "± 1.7540753964503122"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 323.4733059883118,
            "unit": "ns",
            "range": "± 2.5697504103584654"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 245.27678553263345,
            "unit": "ns",
            "range": "± 1.2032303877674084"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 188.47139578599197,
            "unit": "ns",
            "range": "± 0.5896464139713673"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 306.05919769832065,
            "unit": "ns",
            "range": "± 0.31186914925430315"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 309.07996126583646,
            "unit": "ns",
            "range": "± 1.5590435078208957"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 400.1680507977804,
            "unit": "ns",
            "range": "± 1.9579856583171775"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 388.4507260004679,
            "unit": "ns",
            "range": "± 1.8129122883387985"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788556464,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 240.51496481895447,
            "unit": "ns",
            "range": "± 0.32847621318043513"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 295.61286748250325,
            "unit": "ns",
            "range": "± 3.7293625794020016"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 308.31791909535724,
            "unit": "ns",
            "range": "± 1.7125209748252945"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 329.22259024779004,
            "unit": "ns",
            "range": "± 0.4623959422116245"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 245.9976911178002,
            "unit": "ns",
            "range": "± 0.9703526039081535"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 184.88563768068948,
            "unit": "ns",
            "range": "± 0.14633801068029875"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 304.43659848433276,
            "unit": "ns",
            "range": "± 0.40492758512130467"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 302.20813148362294,
            "unit": "ns",
            "range": "± 0.7415714405680173"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 384.56792507171633,
            "unit": "ns",
            "range": "± 2.7212639777985457"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 375.35042667388916,
            "unit": "ns",
            "range": "± 0.6065069583681201"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050309932,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 238.70711428778512,
            "unit": "ns",
            "range": "± 1.3126465177046764"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 295.3869825090681,
            "unit": "ns",
            "range": "± 2.1953074244751276"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 322.67588982215295,
            "unit": "ns",
            "range": "± 0.5985391457213582"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 341.6717694600423,
            "unit": "ns",
            "range": "± 2.087841361602361"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 246.93664666016898,
            "unit": "ns",
            "range": "± 0.2955865118541452"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 180.95374985841605,
            "unit": "ns",
            "range": "± 0.2515948384243592"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 325.11479689524725,
            "unit": "ns",
            "range": "± 1.115261818403046"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 310.77523649655853,
            "unit": "ns",
            "range": "± 0.20514196293564121"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 382.0762367884318,
            "unit": "ns",
            "range": "± 2.032113759123304"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 377.14127047856647,
            "unit": "ns",
            "range": "± 2.1423847161005365"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368832107,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 240.5467607975006,
            "unit": "ns",
            "range": "± 0.4196790764583064"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 294.94181214060103,
            "unit": "ns",
            "range": "± 1.5047668026175511"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 316.5178114817693,
            "unit": "ns",
            "range": "± 0.35619625866470017"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 348.87766344206676,
            "unit": "ns",
            "range": "± 2.956104716555911"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 252.33467899050032,
            "unit": "ns",
            "range": "± 1.8400797424111033"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 186.50508634249368,
            "unit": "ns",
            "range": "± 1.3070619163270278"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 318.20322645627533,
            "unit": "ns",
            "range": "± 0.23933463254812665"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 341.1307218551636,
            "unit": "ns",
            "range": "± 2.0492241157775433"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 384.35646629333496,
            "unit": "ns",
            "range": "± 1.8374756208410068"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 381.05235996246336,
            "unit": "ns",
            "range": "± 1.468549984280288"
          }
        ]
      }
    ],
    "Network.RawStringOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d445d1ea26588bc3aa81f8845a32d0bff8142aa2",
          "message": "We use a batch size of 1 for network BDNs in order to stress the network layer. (#896)",
          "timestamp": "2024-12-22T14:26:53-08:00",
          "tree_id": "0fb24f856ac6e48d298093b5db6b734bcafa22c8",
          "url": "https://github.com/microsoft/garnet/commit/d445d1ea26588bc3aa81f8845a32d0bff8142aa2"
        },
        "date": 1734906804607,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 174.23556447029114,
            "unit": "ns",
            "range": "± 0.26768728313693274"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 276.8879270553589,
            "unit": "ns",
            "range": "± 0.5240528902302418"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 234.14219788142614,
            "unit": "ns",
            "range": "± 1.0792661898372349"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 217.22417076428732,
            "unit": "ns",
            "range": "± 0.33634270129548416"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 197.02174833842687,
            "unit": "ns",
            "range": "± 0.2019182642048889"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 144.7870683670044,
            "unit": "ns",
            "range": "± 0.5180824589148374"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 254.66946760813394,
            "unit": "ns",
            "range": "± 0.5443885367983715"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 261.12866401672363,
            "unit": "ns",
            "range": "± 0.4544355289511733"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 294.26616827646893,
            "unit": "ns",
            "range": "± 0.2166391427906678"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 320.4272985458374,
            "unit": "ns",
            "range": "± 0.5309363607881041"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sharuzzaman@gmail.com",
            "name": "Sharuzzaman Ahmat Raslan",
            "username": "sharuzzaman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fb9c07ec75da058d97dda026b1b3fd836869d5b",
          "message": "fix small typo in overview.md (#898)\n\nfix small typo primaruy -> primary in overview.md",
          "timestamp": "2024-12-28T09:34:16-08:00",
          "tree_id": "6733c2040c0e4295b8f88975ea2f43bafe2914d8",
          "url": "https://github.com/microsoft/garnet/commit/9fb9c07ec75da058d97dda026b1b3fd836869d5b"
        },
        "date": 1735407683231,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 174.6906359990438,
            "unit": "ns",
            "range": "± 0.2802169168231386"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 275.4586935043335,
            "unit": "ns",
            "range": "± 0.5874261286182694"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 231.85028394063315,
            "unit": "ns",
            "range": "± 0.7157858206106148"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 218.8659463609968,
            "unit": "ns",
            "range": "± 0.22154490806838"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 194.13331236158098,
            "unit": "ns",
            "range": "± 0.17707248970213194"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 143.086496421269,
            "unit": "ns",
            "range": "± 0.2221060858735591"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 260.3668212890625,
            "unit": "ns",
            "range": "± 0.39005054723500554"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 258.6520944322859,
            "unit": "ns",
            "range": "± 0.5356886396114982"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 301.16771970476424,
            "unit": "ns",
            "range": "± 0.41191012381658687"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 324.4106864929199,
            "unit": "ns",
            "range": "± 0.5880263247485085"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "97080072+msft-paddy14@users.noreply.github.com",
            "name": "msft-paddy14",
            "username": "msft-paddy14"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce21c248f084744e45bbff08d0ecce0a51326cca",
          "message": "Convert sync over async network handling to async (#835)\n\n* test garnet benchmark\r\n\r\n* Revert \"test garnet benchmark\"\r\n\r\nThis reverts commit 1b3dca6164b72e94e5b95117f3ead72b2104755a.\r\n\r\n* add async socketprocessing\r\n\r\n* resolve conflict\r\n\r\n* fix async socket processing\r\n\r\n* remove bad files\r\n\r\n* fix formatting\r\n\r\n* fix exception handling\r\n\r\n* 1. convert Task->ValueTask for netowkr processing\r\n2. Refactor continuewith to async/await pattern\r\n\r\n* add condition await\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* remove visibility changes for testing\r\n\r\n* add bdn test for networking\r\n\r\n* add async in test\r\n\r\n* fix tests for generic path\r\n\r\n* remove visibility changes for testing\r\n\r\n* fix tests for generic path\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* rewrite network test\r\n\r\n* rewrite network test\r\n\r\n* set max/min threads\r\n\r\n* set max/min threads\r\n\r\n* fix formatting\r\n\r\n* fix formatting\r\n\r\n* fix naming violations\r\n\r\n* remove dead code\r\n\r\n* formatting\r\n\r\n* replace with do while\r\n\r\n* remove networking test in BDN\r\n\r\n* address formatting comments\r\n\r\n* remove bad include\r\n\r\n* remove more dead code\r\n\r\n* use new NetworkRecive method for benchmark\r\n\r\n* Adjust for async mdoe\r\n\r\n* Change method names for clairty\r\n\r\n* update slowconsume to suync\r\n\r\n* fix formatting\r\n\r\n* remove tls cert copy\r\n\r\n* fix formatting\r\n\r\n* remove whitespace\r\n\r\n* revert names of tests\r\n\r\n* bump version and bdn fixes\r\n\r\n* formatting fixes\r\n\r\n* revert unsafe class changes\r\n\r\n* fix comments\r\n\r\n* segregate TLS and non TLS paths\r\n\r\n* separate based on TLS and no-TLS\r\n\r\n* nit\r\n\r\n* fix bdn\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Badrish Chandramouli <badrishc@microsoft.com>",
          "timestamp": "2025-01-06T10:09:12-08:00",
          "tree_id": "56262d4c846f0de6f76f88906847ed57e097d4cf",
          "url": "https://github.com/microsoft/garnet/commit/ce21c248f084744e45bbff08d0ecce0a51326cca"
        },
        "date": 1736187398704,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 204.2516895702907,
            "unit": "ns",
            "range": "± 0.32036545137851874"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 284.41827297210693,
            "unit": "ns",
            "range": "± 0.4559421930356104"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 269.1108187039693,
            "unit": "ns",
            "range": "± 0.38254425500703654"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 272.1592800957816,
            "unit": "ns",
            "range": "± 0.27139241416573945"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 220.30885219573975,
            "unit": "ns",
            "range": "± 0.14749046646249125"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 171.30923362878653,
            "unit": "ns",
            "range": "± 0.25756405807347754"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 302.5573921203613,
            "unit": "ns",
            "range": "± 0.5114617936315551"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 297.7450575147356,
            "unit": "ns",
            "range": "± 0.3610542139264706"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 347.03714297367975,
            "unit": "ns",
            "range": "± 0.5024924598220183"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 342.2815195719401,
            "unit": "ns",
            "range": "± 0.5194923071649948"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56394d8002ed37c12a8cfc7a59851f906394453c",
          "message": "[Compatibility] Added LCS command (#843)\n\n* Added LCS command\r\n\r\n* Format fix\r\n\r\n* Reverted CommandDocsUpdater.cs\r\n\r\n* Fix cluster test\r\n\r\n* Fixed wrong change\r\n\r\n* Moved to constant\r\n\r\n* Review command fixes\r\n\r\n* Fixed review comment\r\n\r\n* Fixed test issue\r\n\r\n---------\r\n\r\nCo-authored-by: Vasileios Zois <96085550+vazois@users.noreply.github.com>\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-07T13:45:44-07:00",
          "tree_id": "fe5343629d71a1c258d9da34fc7390bfde6c9504",
          "url": "https://github.com/microsoft/garnet/commit/56394d8002ed37c12a8cfc7a59851f906394453c"
        },
        "date": 1736283172282,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 205.53504687089188,
            "unit": "ns",
            "range": "± 0.47380555426085774"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 275.3101128798265,
            "unit": "ns",
            "range": "± 0.4504487645110657"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 258.61733300345287,
            "unit": "ns",
            "range": "± 0.4579703072904261"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 271.4519647451547,
            "unit": "ns",
            "range": "± 0.6096785677601936"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 224.25996462504068,
            "unit": "ns",
            "range": "± 0.4869003345714942"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 174.5710427944477,
            "unit": "ns",
            "range": "± 0.41616683833630325"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 291.2676061902727,
            "unit": "ns",
            "range": "± 0.3707292802689123"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 293.68540218898227,
            "unit": "ns",
            "range": "± 0.422205321408566"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 342.4359389713832,
            "unit": "ns",
            "range": "± 0.42787177078630784"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 328.22913101741244,
            "unit": "ns",
            "range": "± 0.39709398791369954"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "badrishc@microsoft.com",
            "name": "Badrish Chandramouli",
            "username": "badrishc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af9cf0eb5d1bd22036ec1fb00be71f860fadc71d",
          "message": "Configure min and max IO completion threads (#904)\n\n* Configure min and max IO completion threads separately from min and max threads (in the ThreadPool). This is needed as some scenarios may limit number of thread pool threads but require a larger number of IO completion threads.\r\n\r\n* nit",
          "timestamp": "2025-01-08T14:36:36-08:00",
          "tree_id": "36bff0cf9f57a2e71c25d20c435682c6961a21db",
          "url": "https://github.com/microsoft/garnet/commit/af9cf0eb5d1bd22036ec1fb00be71f860fadc71d"
        },
        "date": 1736376222327,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 216.10538618905204,
            "unit": "ns",
            "range": "± 0.258183198233404"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 274.4245497385661,
            "unit": "ns",
            "range": "± 0.3598988793921302"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 251.6524938436655,
            "unit": "ns",
            "range": "± 0.5630166144695334"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 270.521303323599,
            "unit": "ns",
            "range": "± 0.7658841309073049"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 222.7792755762736,
            "unit": "ns",
            "range": "± 0.1940194713867311"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 170.64260519467868,
            "unit": "ns",
            "range": "± 0.2744181496058978"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 287.2716546058655,
            "unit": "ns",
            "range": "± 0.5281826878543204"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 293.4925587972005,
            "unit": "ns",
            "range": "± 0.6075589609921602"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 326.8435557683309,
            "unit": "ns",
            "range": "± 1.0999713074532345"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 323.22439511617023,
            "unit": "ns",
            "range": "± 1.1408015759310097"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9d79068491ae795bb0ba2597390b5bd3704c7e4",
          "message": "Skip Interlocked.Exchange and FlushConfig when no update detected (#905)\n\n* skip Interlocked.Exchange and FlushConfig when no update detected on merge\r\n\r\n* special case of zero epoch necessitates tracking of explicit slot update\r\n\r\n* version-bump-1.0.50\r\n\r\n* ensure src is owner\r\n\r\n* update migrateslotwalk test",
          "timestamp": "2025-01-09T14:25:10-08:00",
          "tree_id": "e6af8e8ae3c21ec6cb0aa38d9a483d37f3e588b6",
          "url": "https://github.com/microsoft/garnet/commit/e9d79068491ae795bb0ba2597390b5bd3704c7e4"
        },
        "date": 1736461903086,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 205.40434213785025,
            "unit": "ns",
            "range": "± 0.38755580462743255"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 287.314776579539,
            "unit": "ns",
            "range": "± 1.6501765797080925"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 251.7639478047689,
            "unit": "ns",
            "range": "± 0.2862438049418573"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 269.4115161895752,
            "unit": "ns",
            "range": "± 0.5180185910841101"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 224.78138300088736,
            "unit": "ns",
            "range": "± 0.20823848798733513"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 171.03703362601144,
            "unit": "ns",
            "range": "± 0.26011629144741333"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 287.96933037894115,
            "unit": "ns",
            "range": "± 0.45963905955520923"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 298.51402282714844,
            "unit": "ns",
            "range": "± 1.553406302017295"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 329.64391708374023,
            "unit": "ns",
            "range": "± 1.9547802730202408"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 347.8090899331229,
            "unit": "ns",
            "range": "± 0.5331739692359377"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "talzacc@microsoft.com",
            "name": "Tal Zaccai",
            "username": "TalZaccai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7422df8e0cb87bc727b08f4f25c3a24249b00d1",
          "message": "Returning \"Friendly IDs\" for Custom Commands / Custom Types (#906)\n\n* Converting custom command IDs to \"friendly IDs\" when returning to client\r\n\r\n* Some simplifications\r\n\r\n* Simplified ExpandableMap to support only ascending IDs + Added test for multiple object registrations\r\n\r\n* small format",
          "timestamp": "2025-01-09T20:22:16-07:00",
          "tree_id": "c12abd5d5f4898d84e4371ad8635dcb85669caae",
          "url": "https://github.com/microsoft/garnet/commit/e7422df8e0cb87bc727b08f4f25c3a24249b00d1"
        },
        "date": 1736479756312,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 203.68200341860452,
            "unit": "ns",
            "range": "± 0.3557437132797601"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 279.5386028289795,
            "unit": "ns",
            "range": "± 0.6424176372957011"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 254.34332627516525,
            "unit": "ns",
            "range": "± 0.24168277674600336"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 270.0788100560506,
            "unit": "ns",
            "range": "± 0.4081228914026483"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 226.31607055664062,
            "unit": "ns",
            "range": "± 0.2502436526266385"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 171.4384913444519,
            "unit": "ns",
            "range": "± 1.0270731392359413"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 302.086455481393,
            "unit": "ns",
            "range": "± 0.4338345419156903"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 304.13173993428546,
            "unit": "ns",
            "range": "± 2.0021110907791626"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 341.0902772630964,
            "unit": "ns",
            "range": "± 0.45157672206707133"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 350.23303713117326,
            "unit": "ns",
            "range": "± 0.5218928607758457"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae13046b4d747624724f465f05c0021e3335e8dc",
          "message": "Temp fix Tsavorite CI (#909)\n\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T15:51:23-08:00",
          "tree_id": "68a6294545c462e16ed54ce0cf4f05259e518c92",
          "url": "https://github.com/hamdaankhalid/garnet/commit/ae13046b4d747624724f465f05c0021e3335e8dc"
        },
        "date": 1736553544116,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 204.6740929285685,
            "unit": "ns",
            "range": "± 0.4024951178334924"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 284.9914477421687,
            "unit": "ns",
            "range": "± 0.7929187010389508"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 256.91063563028973,
            "unit": "ns",
            "range": "± 0.6767064459026584"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 275.15614373343334,
            "unit": "ns",
            "range": "± 0.4152240500862839"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 220.3467865784963,
            "unit": "ns",
            "range": "± 0.16990843411560644"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 177.9250661532084,
            "unit": "ns",
            "range": "± 0.21732317223101005"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 299.33625629970004,
            "unit": "ns",
            "range": "± 0.2926106886584205"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 295.87485109056746,
            "unit": "ns",
            "range": "± 0.7376950887332032"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 342.0915331159319,
            "unit": "ns",
            "range": "± 0.4090699237177063"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 331.2039375305176,
            "unit": "ns",
            "range": "± 0.49248739325056456"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f9080305799f3cc351e8b8ade00732f8c2de8b9",
          "message": "Native ETag Support (#908)\n\n* init etag impl\r\n\r\n* WIP tests\r\n\r\n* complete test coverage and bugfixes\r\n\r\n* add edge case handling for etag override set\r\n\r\n* Add documentation\r\n\r\n* fix etag clearing\r\n\r\n* Format\r\n\r\n* fix build warnings\r\n\r\n* Update test\r\n\r\n* Update tests for badrish reqs\r\n\r\n* Update mainstore ops fixing rename bug and remove unnecessary GetForEtagCmd\r\n\r\n* add read nil test\r\n\r\n* fmt\r\n\r\n* Update docs and add more tests for edgecase\r\n\r\n* fix renamenx and etag compat\r\n\r\n* Add more etag edge case tests\r\n\r\n* remove shifting in network buffer in setifmatch\r\n\r\n* Fix named parameters for readability\r\n\r\n* use constants for etag size\r\n\r\n* update read nil to be a faster\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* remove redundant ternary\r\n\r\n* update tests for transaction\r\n\r\n* Add test to make sure etag data works with recovery scenarios\r\n\r\n* WIP\r\n\r\n* WIP\r\n\r\n* unit tests working\r\n\r\n* fmt\r\n\r\n* Fix boundary condition for bitmanager\r\n\r\n* fix rename edgecase\r\n\r\n* Add custom txn, proc, and cmd handling\r\n\r\n* update docs\r\n\r\n* Finish website and nits\r\n\r\n* nit\r\n\r\n* big ole refactor\r\n\r\n* Beautiful patter matching done\r\n\r\n* SET working, todo remaining tests fix\r\n\r\n* Fix all tests\r\n\r\n* Got everythign working\r\n\r\n* reuse code smartly\r\n\r\n* update documentation\r\n\r\n* Finish documentation\r\n\r\n* wip\r\n\r\n* branchless programming in hot path\r\n\r\n* branchless programming in more hoptpath\r\n\r\n* More branchlessness\r\n\r\n* reduce branching for set_conditional\r\n\r\n* fmt\r\n\r\n* experiment with calling the accessor only once\r\n\r\n* more branchless\r\n\r\n* reduce branchless because branchless has more instructions\r\n\r\n* reduce branching\r\n\r\n* remoove reinterpret casting more\r\n\r\n* fix read\r\n\r\n* precompute offsets\r\n\r\n* Fix bugs\r\n\r\n* wippy\r\n\r\n* Try adding switch case\r\n\r\n* remove redundant metadatasize calc\r\n\r\n* add flag for set to parser\r\n\r\n* fix bugs and add comments\r\n\r\n* Fix ACL and Txn unit test\r\n\r\n* remove leftover\r\n\r\n* reduce extra comparison\r\n\r\n* leave input header alone\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* reduce common path logic\r\n\r\n* WIP\r\n\r\n* WIP try rearranging at server session level\r\n\r\n* reduce branching in rmw\r\n\r\n* add back bdn benchmarks\r\n\r\n* go back to using branching again\r\n\r\n* Big ole refactor\r\n\r\n* Badrish PR feedback\r\n\r\n* format\r\n\r\n* pr feedback\r\n\r\n* use const\r\n\r\n* copy struct experiment\r\n\r\n* Experiment with mutable struct\r\n\r\n* minor fix\r\n\r\n* add comment\r\n\r\n* remove unnecessary change\r\n\r\n* prove that I am not crazy\r\n\r\n* LETS GOI FIX UBUNTU ISSUE\r\n\r\n* add feedback\r\n\r\n* rearrange for better parsing speed for common path\r\n\r\n* move etag commands away from resp server session too\r\n\r\n* move parsing further away\r\n\r\n* Lowest in parsing layer\r\n\r\n* Move reps server sessino etag cases further down too\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-10T18:03:32-07:00",
          "tree_id": "105cbedc585143aae84a5afd5e5e7c0147af5739",
          "url": "https://github.com/hamdaankhalid/garnet/commit/9f9080305799f3cc351e8b8ade00732f8c2de8b9"
        },
        "date": 1736655858533,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 205.32591342926025,
            "unit": "ns",
            "range": "± 0.27617892420547036"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 266.2189801534017,
            "unit": "ns",
            "range": "± 0.7734271199184913"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 254.89890734354654,
            "unit": "ns",
            "range": "± 1.0942208190658191"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 269.10397211710614,
            "unit": "ns",
            "range": "± 0.5628133318050639"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 221.44439061482748,
            "unit": "ns",
            "range": "± 0.4224772846441496"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 171.87891687665666,
            "unit": "ns",
            "range": "± 0.22516787933774807"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 306.4868706923265,
            "unit": "ns",
            "range": "± 2.721208516645236"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 302.38585472106934,
            "unit": "ns",
            "range": "± 0.311924321037427"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 367.2838528951009,
            "unit": "ns",
            "range": "± 2.1458938258271636"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 356.8787721487192,
            "unit": "ns",
            "range": "± 1.1186119175205682"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254239913,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 208.8978125498845,
            "unit": "ns",
            "range": "± 0.2691490488462233"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 267.91414480942944,
            "unit": "ns",
            "range": "± 0.3074537266512246"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 301.9870485578264,
            "unit": "ns",
            "range": "± 0.6379965849505176"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 320.86444922855924,
            "unit": "ns",
            "range": "± 0.3877722800603373"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 228.98315020969935,
            "unit": "ns",
            "range": "± 0.318126404280184"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 173.79653270427997,
            "unit": "ns",
            "range": "± 0.2048605739909323"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 288.1307562192281,
            "unit": "ns",
            "range": "± 0.24129026893322236"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 296.61424500601635,
            "unit": "ns",
            "range": "± 0.3857666462634917"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 367.18288489750455,
            "unit": "ns",
            "range": "± 1.4880960271219272"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 388.5483678181966,
            "unit": "ns",
            "range": "± 2.2045754319351865"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788808406,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 205.4062741143363,
            "unit": "ns",
            "range": "± 0.21663974814407777"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 275.56022916521346,
            "unit": "ns",
            "range": "± 0.4830424635669499"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 301.8008929032546,
            "unit": "ns",
            "range": "± 0.4317030008539062"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 308.3629735310872,
            "unit": "ns",
            "range": "± 0.48362232006728917"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 232.25362300872803,
            "unit": "ns",
            "range": "± 0.4344235159949132"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 171.66789088930403,
            "unit": "ns",
            "range": "± 0.28296612830411505"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 296.1672272000994,
            "unit": "ns",
            "range": "± 0.4286454831830152"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 307.5708591021024,
            "unit": "ns",
            "range": "± 0.4674142608269747"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 348.69136174519855,
            "unit": "ns",
            "range": "± 0.5016945089941517"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 350.1300607408796,
            "unit": "ns",
            "range": "± 0.385083339238609"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050651367,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 214.9778059550694,
            "unit": "ns",
            "range": "± 0.17689701765416904"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 266.41581376393634,
            "unit": "ns",
            "range": "± 0.4481968469100762"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 294.6734318366417,
            "unit": "ns",
            "range": "± 0.38413569972630085"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 305.97212864802435,
            "unit": "ns",
            "range": "± 0.48855640760479147"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 227.94616562979562,
            "unit": "ns",
            "range": "± 0.3001644851605348"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 174.77184258974515,
            "unit": "ns",
            "range": "± 0.17719723434493634"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 297.9577724750225,
            "unit": "ns",
            "range": "± 0.32473758698358945"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 303.42350641886395,
            "unit": "ns",
            "range": "± 0.5182428000774989"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 341.60119124821256,
            "unit": "ns",
            "range": "± 0.7684048945866659"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 345.9369402665358,
            "unit": "ns",
            "range": "± 0.5239443314673351"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369172574,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Set(Params: None)",
            "value": 207.70684205568753,
            "unit": "ns",
            "range": "± 0.46218409413532324"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetEx(Params: None)",
            "value": 282.5234603881836,
            "unit": "ns",
            "range": "± 1.2167653571115107"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetNx(Params: None)",
            "value": 284.81524671827043,
            "unit": "ns",
            "range": "± 0.5094345041880914"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.SetXx(Params: None)",
            "value": 315.7438482557024,
            "unit": "ns",
            "range": "± 0.6299941455301722"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetFound(Params: None)",
            "value": 226.12540483474731,
            "unit": "ns",
            "range": "± 0.49424109011325357"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.GetNotFound(Params: None)",
            "value": 174.42471640450614,
            "unit": "ns",
            "range": "± 0.33496250325337956"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Increment(Params: None)",
            "value": 306.58958141620343,
            "unit": "ns",
            "range": "± 0.33110340357039447"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.Decrement(Params: None)",
            "value": 319.0776995250157,
            "unit": "ns",
            "range": "± 0.6005606244160944"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.IncrementBy(Params: None)",
            "value": 348.7711588541667,
            "unit": "ns",
            "range": "± 1.119531718128063"
          },
          {
            "name": "BDN.benchmark.Network.RawStringOperations.DecrementBy(Params: None)",
            "value": 366.98499747685025,
            "unit": "ns",
            "range": "± 0.9901660044785645"
          }
        ]
      }
    ],
    "Lua.LuaScriptCacheOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253774362,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,Limit)",
            "value": 1078.5555555555557,
            "unit": "ns",
            "range": "± 257.57460405517907"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,Limit)",
            "value": 884.7244897959183,
            "unit": "ns",
            "range": "± 454.6252003531357"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,Limit)",
            "value": 1612.7894736842106,
            "unit": "ns",
            "range": "± 549.149495104133"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,Limit)",
            "value": 251690.87096774194,
            "unit": "ns",
            "range": "± 7635.980630069441"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,Limit)",
            "value": 1614.7373737373737,
            "unit": "ns",
            "range": "± 733.4254770074765"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,Limit)",
            "value": 7964.489130434783,
            "unit": "ns",
            "range": "± 712.1827999466814"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,None)",
            "value": 1084.8298969072166,
            "unit": "ns",
            "range": "± 335.9783512882404"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,None)",
            "value": 874.5918367346939,
            "unit": "ns",
            "range": "± 319.2086489776846"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,None)",
            "value": 1846.7604166666667,
            "unit": "ns",
            "range": "± 316.4419542612305"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,None)",
            "value": 250646.83333333334,
            "unit": "ns",
            "range": "± 818.2182230958075"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,None)",
            "value": 1838.8229166666667,
            "unit": "ns",
            "range": "± 339.12916324615173"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,None)",
            "value": 7511.576923076923,
            "unit": "ns",
            "range": "± 87.21951381281364"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Native,None)",
            "value": 1015.0154639175257,
            "unit": "ns",
            "range": "± 337.3061515338001"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Native,None)",
            "value": 803.8350515463917,
            "unit": "ns",
            "range": "± 339.4642126576198"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Native,None)",
            "value": 1485.8958333333333,
            "unit": "ns",
            "range": "± 523.9144461931019"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Native,None)",
            "value": 201828.5,
            "unit": "ns",
            "range": "± 2444.9218615511845"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Native,None)",
            "value": 1911.5104166666667,
            "unit": "ns",
            "range": "± 308.97484124428286"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Native,None)",
            "value": 8980.752577319588,
            "unit": "ns",
            "range": "± 721.1408067391069"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,Limit)",
            "value": 949.0824742268042,
            "unit": "ns",
            "range": "± 394.0094031794348"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,Limit)",
            "value": 700.375,
            "unit": "ns",
            "range": "± 428.608525838034"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,Limit)",
            "value": 1736.3505154639174,
            "unit": "ns",
            "range": "± 313.40399384677045"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,Limit)",
            "value": 251213.61494252874,
            "unit": "ns",
            "range": "± 13745.017075480091"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,Limit)",
            "value": 1759.9742268041236,
            "unit": "ns",
            "range": "± 370.8856262600681"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,Limit)",
            "value": 7754.2307692307695,
            "unit": "ns",
            "range": "± 97.75918869527803"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,None)",
            "value": 1031.1546391752577,
            "unit": "ns",
            "range": "± 388.5603058140338"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,None)",
            "value": 857.8505154639175,
            "unit": "ns",
            "range": "± 323.4085729008636"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,None)",
            "value": 1581.7263157894736,
            "unit": "ns",
            "range": "± 293.87536952039767"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,None)",
            "value": 241194.1923076923,
            "unit": "ns",
            "range": "± 1471.4265971393988"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,None)",
            "value": 1740.5625,
            "unit": "ns",
            "range": "± 322.045561095092"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,None)",
            "value": 8617.102040816326,
            "unit": "ns",
            "range": "± 989.0876848102067"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788420020,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,Limit)",
            "value": 1169.8020833333333,
            "unit": "ns",
            "range": "± 356.1180354229603"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,Limit)",
            "value": 893.763440860215,
            "unit": "ns",
            "range": "± 271.38751364413366"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,Limit)",
            "value": 1605.090909090909,
            "unit": "ns",
            "range": "± 44.822038680934085"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,Limit)",
            "value": 222476.57777777777,
            "unit": "ns",
            "range": "± 19271.1190441288"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,Limit)",
            "value": 1665.0833333333333,
            "unit": "ns",
            "range": "± 52.63567699530066"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,Limit)",
            "value": 7563.75,
            "unit": "ns",
            "range": "± 110.16526840904244"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,None)",
            "value": 1208.09375,
            "unit": "ns",
            "range": "± 49.24190411598379"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,None)",
            "value": 907.0879120879121,
            "unit": "ns",
            "range": "± 286.8168075174136"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,None)",
            "value": 1798.5425531914893,
            "unit": "ns",
            "range": "± 383.4300672212928"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,None)",
            "value": 234118.29545454544,
            "unit": "ns",
            "range": "± 23729.79835427793"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,None)",
            "value": 1953.4408602150538,
            "unit": "ns",
            "range": "± 424.81802913425514"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,None)",
            "value": 7508.583333333333,
            "unit": "ns",
            "range": "± 115.82938733195893"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Native,None)",
            "value": 1029.6304347826087,
            "unit": "ns",
            "range": "± 471.0518092265787"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Native,None)",
            "value": 877.1458333333334,
            "unit": "ns",
            "range": "± 314.4337258985685"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Native,None)",
            "value": 1784.6777777777777,
            "unit": "ns",
            "range": "± 441.4559116973453"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Native,None)",
            "value": 213203,
            "unit": "ns",
            "range": "± 9457.638611286377"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Native,None)",
            "value": 1720.59375,
            "unit": "ns",
            "range": "± 561.1803271137306"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Native,None)",
            "value": 8885.388888888889,
            "unit": "ns",
            "range": "± 1074.3162727091778"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,Limit)",
            "value": 1164.8762886597938,
            "unit": "ns",
            "range": "± 370.21576641567975"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,Limit)",
            "value": 886.0212765957447,
            "unit": "ns",
            "range": "± 275.8893723560187"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,Limit)",
            "value": 1696.6022727272727,
            "unit": "ns",
            "range": "± 368.20201663250924"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,Limit)",
            "value": 250034.18666666668,
            "unit": "ns",
            "range": "± 12631.53583854158"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,Limit)",
            "value": 1881.5257731958764,
            "unit": "ns",
            "range": "± 398.6700832346503"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,Limit)",
            "value": 9272.98947368421,
            "unit": "ns",
            "range": "± 1266.608081374389"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,None)",
            "value": 1227.0344827586207,
            "unit": "ns",
            "range": "± 287.4128562884822"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,None)",
            "value": 782.1354166666666,
            "unit": "ns",
            "range": "± 438.8072498511503"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,None)",
            "value": 1553.6153846153845,
            "unit": "ns",
            "range": "± 49.833383929311424"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,None)",
            "value": 242520.5625,
            "unit": "ns",
            "range": "± 2454.664592668416"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,None)",
            "value": 1900.541237113402,
            "unit": "ns",
            "range": "± 457.99447134412765"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,None)",
            "value": 9260.222222222223,
            "unit": "ns",
            "range": "± 1185.221432189297"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050172298,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,Limit)",
            "value": 1166.9270833333333,
            "unit": "ns",
            "range": "± 438.4764350576634"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,Limit)",
            "value": 883.3186813186813,
            "unit": "ns",
            "range": "± 226.87675945425522"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,Limit)",
            "value": 1812.4742268041236,
            "unit": "ns",
            "range": "± 475.8007525211119"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,Limit)",
            "value": 222450.91397849462,
            "unit": "ns",
            "range": "± 19338.23745602384"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,Limit)",
            "value": 1957.6894736842105,
            "unit": "ns",
            "range": "± 472.23951042576573"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,Limit)",
            "value": 7756.461538461538,
            "unit": "ns",
            "range": "± 60.527700799737666"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,None)",
            "value": 1192.9368421052632,
            "unit": "ns",
            "range": "± 488.42791254787966"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,None)",
            "value": 829.4615384615385,
            "unit": "ns",
            "range": "± 249.3187744275414"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,None)",
            "value": 1624.0588235294117,
            "unit": "ns",
            "range": "± 41.157427319129305"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,None)",
            "value": 230967.6075268817,
            "unit": "ns",
            "range": "± 25218.192271549404"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,None)",
            "value": 1753.76,
            "unit": "ns",
            "range": "± 53.43631723837264"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,None)",
            "value": 7895.264705882353,
            "unit": "ns",
            "range": "± 168.27861176177618"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Native,None)",
            "value": 1074.8440860215053,
            "unit": "ns",
            "range": "± 551.8240010583016"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Native,None)",
            "value": 849.2872340425532,
            "unit": "ns",
            "range": "± 236.38444276541242"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Native,None)",
            "value": 1867.8333333333333,
            "unit": "ns",
            "range": "± 344.10603221028947"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Native,None)",
            "value": 204836.14285714287,
            "unit": "ns",
            "range": "± 1235.8627542137303"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Native,None)",
            "value": 1645.142857142857,
            "unit": "ns",
            "range": "± 31.751092392733007"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Native,None)",
            "value": 9792.511363636364,
            "unit": "ns",
            "range": "± 1304.4288351904368"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,Limit)",
            "value": 1121.7268041237114,
            "unit": "ns",
            "range": "± 556.055368667595"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,Limit)",
            "value": 891,
            "unit": "ns",
            "range": "± 226.72379103074923"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,Limit)",
            "value": 1708.4347826086957,
            "unit": "ns",
            "range": "± 437.0765342578498"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,Limit)",
            "value": 241896,
            "unit": "ns",
            "range": "± 1224.7543971479888"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,Limit)",
            "value": 2037.28125,
            "unit": "ns",
            "range": "± 430.69495135004894"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,Limit)",
            "value": 9122.239583333334,
            "unit": "ns",
            "range": "± 796.3536604561631"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,None)",
            "value": 1139,
            "unit": "ns",
            "range": "± 284.01600839258305"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,None)",
            "value": 985.9105263157895,
            "unit": "ns",
            "range": "± 289.523912022304"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,None)",
            "value": 1734.6888888888889,
            "unit": "ns",
            "range": "± 243.34905315802828"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,None)",
            "value": 254556.0357142857,
            "unit": "ns",
            "range": "± 10936.813544528964"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,None)",
            "value": 2008.5833333333333,
            "unit": "ns",
            "range": "± 411.1867463220055"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,None)",
            "value": 9091.3125,
            "unit": "ns",
            "range": "± 969.7716205646727"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368691053,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,Limit)",
            "value": 1041,
            "unit": "ns",
            "range": "± 335.8601568269452"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,Limit)",
            "value": 769.0208333333334,
            "unit": "ns",
            "range": "± 330.2919276278793"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,Limit)",
            "value": 1684.75,
            "unit": "ns",
            "range": "± 519.310818600758"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,Limit)",
            "value": 240986.75531914894,
            "unit": "ns",
            "range": "± 36715.60080462887"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,Limit)",
            "value": 2317.705263157895,
            "unit": "ns",
            "range": "± 761.6884083107626"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,Limit)",
            "value": 8620.02688172043,
            "unit": "ns",
            "range": "± 966.2713251080362"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,None)",
            "value": 1152.5625,
            "unit": "ns",
            "range": "± 29.52731785990729"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,None)",
            "value": 1054.2637362637363,
            "unit": "ns",
            "range": "± 304.7927833486889"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,None)",
            "value": 1782.40625,
            "unit": "ns",
            "range": "± 772.6674586422912"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,None)",
            "value": 233050.51136363635,
            "unit": "ns",
            "range": "± 26199.259257315905"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,None)",
            "value": 1953.6236559139784,
            "unit": "ns",
            "range": "± 842.9712320891902"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,None)",
            "value": 7554.846153846154,
            "unit": "ns",
            "range": "± 99.92150765629837"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Native,None)",
            "value": 961.9368421052632,
            "unit": "ns",
            "range": "± 493.85304064658646"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Native,None)",
            "value": 882.1182795698925,
            "unit": "ns",
            "range": "± 316.54304087665986"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Native,None)",
            "value": 1832.223404255319,
            "unit": "ns",
            "range": "± 603.6721704193627"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Native,None)",
            "value": 216916.075,
            "unit": "ns",
            "range": "± 11353.92447824077"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Native,None)",
            "value": 1942.494623655914,
            "unit": "ns",
            "range": "± 376.5695161776361"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Native,None)",
            "value": 9106.752688172042,
            "unit": "ns",
            "range": "± 1402.7291772447675"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,Limit)",
            "value": 1092.6702127659576,
            "unit": "ns",
            "range": "± 503.2407371559734"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,Limit)",
            "value": 849.3297872340426,
            "unit": "ns",
            "range": "± 290.60491741866866"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,Limit)",
            "value": 1811,
            "unit": "ns",
            "range": "± 536.6564968880689"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,Limit)",
            "value": 248877.53225806452,
            "unit": "ns",
            "range": "± 11248.383523528391"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,Limit)",
            "value": 1577.274193548387,
            "unit": "ns",
            "range": "± 59.29626726723999"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,Limit)",
            "value": 9307.3,
            "unit": "ns",
            "range": "± 725.688831232286"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,None)",
            "value": 1034.1855670103093,
            "unit": "ns",
            "range": "± 534.8988481069908"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,None)",
            "value": 843.8695652173913,
            "unit": "ns",
            "range": "± 265.23944054719107"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,None)",
            "value": 1582.0483870967741,
            "unit": "ns",
            "range": "± 769.8582381662033"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,None)",
            "value": 249511.0163934426,
            "unit": "ns",
            "range": "± 11119.68433978202"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,None)",
            "value": 2094.217391304348,
            "unit": "ns",
            "range": "± 647.6951838039174"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,None)",
            "value": 9156.197674418605,
            "unit": "ns",
            "range": "± 1203.8093929616775"
          }
        ]
      }
    ],
    "Lua.LuaRunnerOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253777748,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,Limit)",
            "value": 4266.645161290323,
            "unit": "ns",
            "range": "± 1419.38317623599"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,Limit)",
            "value": 4770.15306122449,
            "unit": "ns",
            "range": "± 1572.4180430483282"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,Limit)",
            "value": 255161.7142857143,
            "unit": "ns",
            "range": "± 18475.443346521228"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,Limit)",
            "value": 278251.8541666667,
            "unit": "ns",
            "range": "± 44917.92652804123"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,Limit)",
            "value": 21443.252747252747,
            "unit": "ns",
            "range": "± 3852.174279527535"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,Limit)",
            "value": 150308.2142857143,
            "unit": "ns",
            "range": "± 19170.21391297114"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,None)",
            "value": 4078.958762886598,
            "unit": "ns",
            "range": "± 1331.9471876849275"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,None)",
            "value": 3498.7978723404253,
            "unit": "ns",
            "range": "± 1103.7182010401264"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,None)",
            "value": 249117.1235955056,
            "unit": "ns",
            "range": "± 15385.226060338931"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,None)",
            "value": 268746.5520833333,
            "unit": "ns",
            "range": "± 27445.39165223603"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,None)",
            "value": 32308.08080808081,
            "unit": "ns",
            "range": "± 15503.07666876111"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,None)",
            "value": 150257.80927835053,
            "unit": "ns",
            "range": "± 21485.402777894353"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Native,None)",
            "value": 3493.1236559139784,
            "unit": "ns",
            "range": "± 829.780535599867"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Native,None)",
            "value": 3633.576923076923,
            "unit": "ns",
            "range": "± 899.4514282577306"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Native,None)",
            "value": 239569.55555555556,
            "unit": "ns",
            "range": "± 15664.863520854056"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Native,None)",
            "value": 237197.1170212766,
            "unit": "ns",
            "range": "± 14090.735508254287"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Native,None)",
            "value": 19948.521739130436,
            "unit": "ns",
            "range": "± 4471.6400978116935"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Native,None)",
            "value": 151631.5,
            "unit": "ns",
            "range": "± 18914.878974295472"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,Limit)",
            "value": 3407.5416666666665,
            "unit": "ns",
            "range": "± 953.4946241304215"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,Limit)",
            "value": 3566.108695652174,
            "unit": "ns",
            "range": "± 824.4238541867443"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,Limit)",
            "value": 287016.55670103093,
            "unit": "ns",
            "range": "± 16835.159961105874"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,Limit)",
            "value": 283598.8043478261,
            "unit": "ns",
            "range": "± 10770.523946028843"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,Limit)",
            "value": 24786.302083333332,
            "unit": "ns",
            "range": "± 5135.241637567422"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,Limit)",
            "value": 160312.30303030304,
            "unit": "ns",
            "range": "± 19521.814425361594"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,None)",
            "value": 3973.4666666666667,
            "unit": "ns",
            "range": "± 1875.0152251067252"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,None)",
            "value": 3592.521739130435,
            "unit": "ns",
            "range": "± 832.159932566073"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,None)",
            "value": 281722.9736842105,
            "unit": "ns",
            "range": "± 14444.323030610727"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,None)",
            "value": 281446.13095238095,
            "unit": "ns",
            "range": "± 15094.25752435543"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,None)",
            "value": 24136.13829787234,
            "unit": "ns",
            "range": "± 4986.000062219512"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,None)",
            "value": 152081.25,
            "unit": "ns",
            "range": "± 18437.373085952513"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788424453,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,Limit)",
            "value": 2584.446808510638,
            "unit": "ns",
            "range": "± 429.6426276137218"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,Limit)",
            "value": 2971.547368421053,
            "unit": "ns",
            "range": "± 509.219360172918"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,Limit)",
            "value": 271199.6538461539,
            "unit": "ns",
            "range": "± 2655.6664840222265"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,Limit)",
            "value": 269582.1875,
            "unit": "ns",
            "range": "± 5195.084962009765"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,Limit)",
            "value": 20795.815217391304,
            "unit": "ns",
            "range": "± 3443.0193557634107"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,Limit)",
            "value": 146254.68367346938,
            "unit": "ns",
            "range": "± 14677.579251092524"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,None)",
            "value": 2740.5789473684213,
            "unit": "ns",
            "range": "± 65.82494949947312"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,None)",
            "value": 2916.308510638298,
            "unit": "ns",
            "range": "± 316.438413264186"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,None)",
            "value": 280605.3762886598,
            "unit": "ns",
            "range": "± 36369.63882606896"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,None)",
            "value": 294640.9,
            "unit": "ns",
            "range": "± 8739.716685812868"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,None)",
            "value": 17907,
            "unit": "ns",
            "range": "± 302.815252130861"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,None)",
            "value": 144114.53157894738,
            "unit": "ns",
            "range": "± 14021.730489655121"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Native,None)",
            "value": 3245.9438202247193,
            "unit": "ns",
            "range": "± 495.03726580454526"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Native,None)",
            "value": 3010.8152173913045,
            "unit": "ns",
            "range": "± 507.04652081577376"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Native,None)",
            "value": 229959.6984126984,
            "unit": "ns",
            "range": "± 10526.743791847077"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Native,None)",
            "value": 233181.78846153847,
            "unit": "ns",
            "range": "± 9518.04113216526"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Native,None)",
            "value": 14407.346153846154,
            "unit": "ns",
            "range": "± 243.26626227032463"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Native,None)",
            "value": 143621.43434343435,
            "unit": "ns",
            "range": "± 16974.41997696295"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,Limit)",
            "value": 3045.1290322580644,
            "unit": "ns",
            "range": "± 420.98988487813506"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,Limit)",
            "value": 2714.603448275862,
            "unit": "ns",
            "range": "± 88.66161386642483"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,Limit)",
            "value": 285613.3617021277,
            "unit": "ns",
            "range": "± 16499.534376519794"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,Limit)",
            "value": 280257.25,
            "unit": "ns",
            "range": "± 3186.8296366974705"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,Limit)",
            "value": 21912.451612903227,
            "unit": "ns",
            "range": "± 2567.4025764342186"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,Limit)",
            "value": 151133.97959183675,
            "unit": "ns",
            "range": "± 16945.810967917823"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,None)",
            "value": 2724.8,
            "unit": "ns",
            "range": "± 54.08089179315423"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,None)",
            "value": 2919.489010989011,
            "unit": "ns",
            "range": "± 470.74901296894205"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,None)",
            "value": 284009.76923076925,
            "unit": "ns",
            "range": "± 1921.649688585572"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,None)",
            "value": 280275.5360824742,
            "unit": "ns",
            "range": "± 16253.358361980314"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,None)",
            "value": 17923.46153846154,
            "unit": "ns",
            "range": "± 287.9642962199236"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,None)",
            "value": 152910.64646464647,
            "unit": "ns",
            "range": "± 17231.396329240706"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050168882,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,Limit)",
            "value": 3277.3505747126437,
            "unit": "ns",
            "range": "± 680.429985953404"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,Limit)",
            "value": 2962.6129032258063,
            "unit": "ns",
            "range": "± 668.4204292707395"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,Limit)",
            "value": 254540.13541666666,
            "unit": "ns",
            "range": "± 23498.909009219435"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,Limit)",
            "value": 274322.625,
            "unit": "ns",
            "range": "± 1981.906855362616"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,Limit)",
            "value": 17630.923076923078,
            "unit": "ns",
            "range": "± 233.97879588346657"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,Limit)",
            "value": 149863.81632653062,
            "unit": "ns",
            "range": "± 15354.343367743739"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,None)",
            "value": 3008.6881720430106,
            "unit": "ns",
            "range": "± 497.9236448033283"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,None)",
            "value": 2938.531914893617,
            "unit": "ns",
            "range": "± 518.7505606086394"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,None)",
            "value": 257707.03125,
            "unit": "ns",
            "range": "± 22940.654857790705"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,None)",
            "value": 263782.29,
            "unit": "ns",
            "range": "± 23961.767641620478"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,None)",
            "value": 19218.471264367818,
            "unit": "ns",
            "range": "± 2262.5713548510616"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,None)",
            "value": 144969.96907216494,
            "unit": "ns",
            "range": "± 13414.924412333334"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Native,None)",
            "value": 3106.050561797753,
            "unit": "ns",
            "range": "± 539.7500686604857"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Native,None)",
            "value": 2942.67816091954,
            "unit": "ns",
            "range": "± 358.70180963920285"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Native,None)",
            "value": 226533.61290322582,
            "unit": "ns",
            "range": "± 6891.4770679800295"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Native,None)",
            "value": 234801.1884057971,
            "unit": "ns",
            "range": "± 11282.221889894063"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Native,None)",
            "value": 18054.22988505747,
            "unit": "ns",
            "range": "± 2117.7848272299375"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Native,None)",
            "value": 146081.78,
            "unit": "ns",
            "range": "± 14250.237461838587"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,Limit)",
            "value": 3133.242105263158,
            "unit": "ns",
            "range": "± 637.9207200089971"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,Limit)",
            "value": 3247.553191489362,
            "unit": "ns",
            "range": "± 664.4737042139859"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,Limit)",
            "value": 287728.65714285715,
            "unit": "ns",
            "range": "± 13745.986066965477"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,Limit)",
            "value": 286584.34126984124,
            "unit": "ns",
            "range": "± 12984.659049030115"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,Limit)",
            "value": 23485.134831460673,
            "unit": "ns",
            "range": "± 4024.325658335961"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,Limit)",
            "value": 157376.28,
            "unit": "ns",
            "range": "± 17988.103661727397"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,None)",
            "value": 3330.086956521739,
            "unit": "ns",
            "range": "± 436.7639655308572"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,None)",
            "value": 2890.181818181818,
            "unit": "ns",
            "range": "± 477.02294085547214"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,None)",
            "value": 279703.53731343284,
            "unit": "ns",
            "range": "± 13164.81140208148"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,None)",
            "value": 283117.02352941176,
            "unit": "ns",
            "range": "± 20310.196548354055"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,None)",
            "value": 22029.09139784946,
            "unit": "ns",
            "range": "± 2430.2210860087853"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,None)",
            "value": 158638.18367346938,
            "unit": "ns",
            "range": "± 15237.66280638103"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368682824,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,Limit)",
            "value": 2670.2065217391305,
            "unit": "ns",
            "range": "± 449.61753070030926"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,Limit)",
            "value": 3663.5,
            "unit": "ns",
            "range": "± 1075.9115976498472"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,Limit)",
            "value": 252186.02040816325,
            "unit": "ns",
            "range": "± 25208.512662987312"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,Limit)",
            "value": 273395.6538461539,
            "unit": "ns",
            "range": "± 3569.928683838419"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,Limit)",
            "value": 18101.396551724138,
            "unit": "ns",
            "range": "± 1489.4487511147447"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,Limit)",
            "value": 149248.58,
            "unit": "ns",
            "range": "± 18244.439536572136"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,None)",
            "value": 2984.6382978723404,
            "unit": "ns",
            "range": "± 334.419601571665"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,None)",
            "value": 2611.2580645161293,
            "unit": "ns",
            "range": "± 438.9235573543086"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,None)",
            "value": 263997.1836734694,
            "unit": "ns",
            "range": "± 37731.23901975545"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,None)",
            "value": 278954.78571428574,
            "unit": "ns",
            "range": "± 2288.0877531104584"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,None)",
            "value": 18842.543478260868,
            "unit": "ns",
            "range": "± 2873.5854519636646"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,None)",
            "value": 143616.8673469388,
            "unit": "ns",
            "range": "± 12473.950497049453"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Native,None)",
            "value": 2804.9021739130435,
            "unit": "ns",
            "range": "± 453.26304275694935"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Native,None)",
            "value": 2722.8125,
            "unit": "ns",
            "range": "± 45.90456585860132"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Native,None)",
            "value": 230256.7876712329,
            "unit": "ns",
            "range": "± 10796.907233966293"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Native,None)",
            "value": 227397.59523809524,
            "unit": "ns",
            "range": "± 8129.99540938137"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Native,None)",
            "value": 17600.842105263157,
            "unit": "ns",
            "range": "± 1996.5519229879822"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Native,None)",
            "value": 146749.24226804124,
            "unit": "ns",
            "range": "± 18067.401142595623"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,Limit)",
            "value": 3589.1043956043954,
            "unit": "ns",
            "range": "± 944.3613583218953"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,Limit)",
            "value": 3131.0106382978724,
            "unit": "ns",
            "range": "± 565.4370608459291"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,Limit)",
            "value": 278022.1153846154,
            "unit": "ns",
            "range": "± 3685.770352279641"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,Limit)",
            "value": 289142.10256410256,
            "unit": "ns",
            "range": "± 14927.55524176137"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,Limit)",
            "value": 22088.274193548386,
            "unit": "ns",
            "range": "± 3063.504926972969"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,Limit)",
            "value": 153779.16666666666,
            "unit": "ns",
            "range": "± 16648.927539156437"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,None)",
            "value": 2693.0172413793102,
            "unit": "ns",
            "range": "± 87.80319742374142"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,None)",
            "value": 2675.076923076923,
            "unit": "ns",
            "range": "± 83.07294292459999"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,None)",
            "value": 277702.275,
            "unit": "ns",
            "range": "± 8845.269875975868"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,None)",
            "value": 275478.9117647059,
            "unit": "ns",
            "range": "± 13099.233473341608"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,None)",
            "value": 21796.584269662922,
            "unit": "ns",
            "range": "± 3261.73565692544"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,None)",
            "value": 173410.17676767678,
            "unit": "ns",
            "range": "± 25676.958841409436"
          }
        ]
      }
    ],
    "Operations.PubSubOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253832531,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: ACL)",
            "value": 13791.831084187825,
            "unit": "ns",
            "range": "± 189.72256736646693"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: AOF)",
            "value": 13831.726848895732,
            "unit": "ns",
            "range": "± 76.5288146376927"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: None)",
            "value": 13952.282270304362,
            "unit": "ns",
            "range": "± 122.69467405777962"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788456517,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: ACL)",
            "value": 13298.257811482747,
            "unit": "ns",
            "range": "± 68.32846959027958"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: AOF)",
            "value": 13358.173721313477,
            "unit": "ns",
            "range": "± 52.60764078242992"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: None)",
            "value": 13193.955959865025,
            "unit": "ns",
            "range": "± 44.59586959829412"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050202003,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: ACL)",
            "value": 13282.79383615347,
            "unit": "ns",
            "range": "± 42.456997435649704"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: AOF)",
            "value": 13144.65657043457,
            "unit": "ns",
            "range": "± 39.717695679270236"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: None)",
            "value": 13206.424306233725,
            "unit": "ns",
            "range": "± 64.1437786113469"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368722209,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: ACL)",
            "value": 13324.3375516619,
            "unit": "ns",
            "range": "± 71.49421110296728"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: AOF)",
            "value": 13147.863130841937,
            "unit": "ns",
            "range": "± 52.7488181255212"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: None)",
            "value": 13235.825557454427,
            "unit": "ns",
            "range": "± 87.35050240414205"
          }
        ]
      }
    ],
    "Operations.PubSubOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737253994709,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: ACL)",
            "value": 9207.376556396484,
            "unit": "ns",
            "range": "± 150.43723528103558"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: AOF)",
            "value": 9119.007462721605,
            "unit": "ns",
            "range": "± 12.757723141755424"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: None)",
            "value": 9213.614145914713,
            "unit": "ns",
            "range": "± 12.724922432780414"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788636443,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: ACL)",
            "value": 9097.30453491211,
            "unit": "ns",
            "range": "± 16.596642516023298"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: AOF)",
            "value": 9113.153483072916,
            "unit": "ns",
            "range": "± 19.539927347131325"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: None)",
            "value": 9123.111775716146,
            "unit": "ns",
            "range": "± 29.798349494142204"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050456271,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: ACL)",
            "value": 9080.221775599888,
            "unit": "ns",
            "range": "± 19.692296101570914"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: AOF)",
            "value": 8968.162892659506,
            "unit": "ns",
            "range": "± 12.650630107113487"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: None)",
            "value": 8955.64481295072,
            "unit": "ns",
            "range": "± 11.80617695812559"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738368833856,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: ACL)",
            "value": 9145.47587803432,
            "unit": "ns",
            "range": "± 26.594135312013208"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: AOF)",
            "value": 9139.818807748648,
            "unit": "ns",
            "range": "± 23.830268886259606"
          },
          {
            "name": "BDN.benchmark.Operations.PubSubOperations.Publish(Params: None)",
            "value": 9209.745570591518,
            "unit": "ns",
            "range": "± 15.009750936937603"
          }
        ]
      }
    ],
    "Operations.ModuleOperations (ubuntu-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254227900,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: ACL)",
            "value": 46172.99705403646,
            "unit": "ns",
            "range": "± 330.61778765296975"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: ACL)",
            "value": 56004.03327636719,
            "unit": "ns",
            "range": "± 293.5717443286479"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: ACL)",
            "value": 124074.97039794922,
            "unit": "ns",
            "range": "± 269.7771260681773"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: ACL)",
            "value": 99891.76902669271,
            "unit": "ns",
            "range": "± 575.7060997524059"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: ACL)",
            "value": 62322.41477457682,
            "unit": "ns",
            "range": "± 69.785449503289"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: ACL)",
            "value": 32378.19679361979,
            "unit": "ns",
            "range": "± 273.13303715548835"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: ACL)",
            "value": 197728.0580021785,
            "unit": "ns",
            "range": "± 505.01478594589776"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: ACL)",
            "value": 373770.048811849,
            "unit": "ns",
            "range": "± 3377.008039977714"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: AOF)",
            "value": 46867.473798479354,
            "unit": "ns",
            "range": "± 282.3671006495826"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: AOF)",
            "value": 62419.722440279445,
            "unit": "ns",
            "range": "± 215.30426005128686"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: AOF)",
            "value": 128760.3130405971,
            "unit": "ns",
            "range": "± 874.251732429368"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: AOF)",
            "value": 96086.8778921274,
            "unit": "ns",
            "range": "± 295.44982142544836"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: AOF)",
            "value": 61110.65107014974,
            "unit": "ns",
            "range": "± 274.3610235195262"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: AOF)",
            "value": 40475.98773803711,
            "unit": "ns",
            "range": "± 182.47715459542826"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: AOF)",
            "value": 200289.5850655692,
            "unit": "ns",
            "range": "± 582.3800358074975"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: AOF)",
            "value": 399734.6321614583,
            "unit": "ns",
            "range": "± 3387.77381929828"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: None)",
            "value": 45142.467897542316,
            "unit": "ns",
            "range": "± 197.63262621510523"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: None)",
            "value": 56424.12568766276,
            "unit": "ns",
            "range": "± 188.40755370338834"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: None)",
            "value": 121395.30109863282,
            "unit": "ns",
            "range": "± 879.2529426729417"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: None)",
            "value": 96303.85147530692,
            "unit": "ns",
            "range": "± 316.0490812190749"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: None)",
            "value": 59857.12311197917,
            "unit": "ns",
            "range": "± 157.8431089119761"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: None)",
            "value": 34083.963991292316,
            "unit": "ns",
            "range": "± 168.93119367900837"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: None)",
            "value": 203628.287890625,
            "unit": "ns",
            "range": "± 1438.3907488558216"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: None)",
            "value": 368183.53358677455,
            "unit": "ns",
            "range": "± 2724.2684189128513"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737788885710,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: ACL)",
            "value": 47461.622715250654,
            "unit": "ns",
            "range": "± 241.69427009467594"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: ACL)",
            "value": 54732.52125854492,
            "unit": "ns",
            "range": "± 302.13203311615297"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: ACL)",
            "value": 111059.81731770834,
            "unit": "ns",
            "range": "± 640.7863984786592"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: ACL)",
            "value": 86395.03776855468,
            "unit": "ns",
            "range": "± 558.9889513910116"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: ACL)",
            "value": 66074.82934570312,
            "unit": "ns",
            "range": "± 488.4010674444421"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: ACL)",
            "value": 34697.190002441406,
            "unit": "ns",
            "range": "± 70.95481044995574"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: ACL)",
            "value": 204684.5628173828,
            "unit": "ns",
            "range": "± 1419.3391712669727"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: ACL)",
            "value": 368655.72236328124,
            "unit": "ns",
            "range": "± 2456.3138878841028"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: AOF)",
            "value": 49185.96880696614,
            "unit": "ns",
            "range": "± 440.4917665230561"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: AOF)",
            "value": 64057.91210123698,
            "unit": "ns",
            "range": "± 452.5230118722658"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: AOF)",
            "value": 119923.6291829427,
            "unit": "ns",
            "range": "± 476.14361148068224"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: AOF)",
            "value": 87120.95846121652,
            "unit": "ns",
            "range": "± 427.9885447832688"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: AOF)",
            "value": 62264.88516671317,
            "unit": "ns",
            "range": "± 55.0304878720649"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: AOF)",
            "value": 41702.03240966797,
            "unit": "ns",
            "range": "± 193.02151794127977"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: AOF)",
            "value": 213335.18746744792,
            "unit": "ns",
            "range": "± 989.2437822079568"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: AOF)",
            "value": 393048.6532854353,
            "unit": "ns",
            "range": "± 1876.6263787414325"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: None)",
            "value": 48374.62280680339,
            "unit": "ns",
            "range": "± 176.0174463519993"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: None)",
            "value": 54013.44084676107,
            "unit": "ns",
            "range": "± 214.33155104680142"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: None)",
            "value": 108294.04380580357,
            "unit": "ns",
            "range": "± 282.249307537119"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: None)",
            "value": 84819.2000773112,
            "unit": "ns",
            "range": "± 562.2758521576195"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: None)",
            "value": 63982.653019831734,
            "unit": "ns",
            "range": "± 136.86518273353954"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: None)",
            "value": 35283.496939522876,
            "unit": "ns",
            "range": "± 197.65399545015828"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: None)",
            "value": 204291.61435546874,
            "unit": "ns",
            "range": "± 1087.0138675114154"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: None)",
            "value": 368149.4567871094,
            "unit": "ns",
            "range": "± 2669.1228077827723"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050603207,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: ACL)",
            "value": 39799.1866027832,
            "unit": "ns",
            "range": "± 202.97846128131047"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: ACL)",
            "value": 50953.90784395658,
            "unit": "ns",
            "range": "± 321.5145144027004"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: ACL)",
            "value": 87788.06397356305,
            "unit": "ns",
            "range": "± 340.2849809362327"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: ACL)",
            "value": 66155.38736196664,
            "unit": "ns",
            "range": "± 163.69480392270998"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: ACL)",
            "value": 33433.83938363882,
            "unit": "ns",
            "range": "± 76.99959325135715"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: ACL)",
            "value": 30492.11709158761,
            "unit": "ns",
            "range": "± 187.98795769222392"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: ACL)",
            "value": 173580.94934895833,
            "unit": "ns",
            "range": "± 1205.073996711628"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: ACL)",
            "value": 331409.1758138021,
            "unit": "ns",
            "range": "± 2160.9911993286923"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: AOF)",
            "value": 39247.096717247594,
            "unit": "ns",
            "range": "± 83.21038581686925"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: AOF)",
            "value": 56099.78125435965,
            "unit": "ns",
            "range": "± 319.94786666592364"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: AOF)",
            "value": 95781.66786411831,
            "unit": "ns",
            "range": "± 364.3546502115426"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: AOF)",
            "value": 65782.5807861328,
            "unit": "ns",
            "range": "± 400.69833635937385"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: AOF)",
            "value": 31447.54677327474,
            "unit": "ns",
            "range": "± 159.7446045672291"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: AOF)",
            "value": 37314.956550011266,
            "unit": "ns",
            "range": "± 189.00121926535053"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: AOF)",
            "value": 181683.10302734375,
            "unit": "ns",
            "range": "± 657.2548771199116"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: AOF)",
            "value": 348825.21219308034,
            "unit": "ns",
            "range": "± 2483.8820348596428"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: None)",
            "value": 39179.11180332729,
            "unit": "ns",
            "range": "± 132.13508785959212"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: None)",
            "value": 49199.64103111854,
            "unit": "ns",
            "range": "± 48.25164337291584"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: None)",
            "value": 85640.99385288784,
            "unit": "ns",
            "range": "± 574.4299089880121"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: None)",
            "value": 63493.00305175781,
            "unit": "ns",
            "range": "± 460.619910987317"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: None)",
            "value": 31285.30794881185,
            "unit": "ns",
            "range": "± 39.19665109029119"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: None)",
            "value": 28863.785063680014,
            "unit": "ns",
            "range": "± 87.69092735509624"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: None)",
            "value": 181008.8010986328,
            "unit": "ns",
            "range": "± 1250.8980490282233"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: None)",
            "value": 333682.387890625,
            "unit": "ns",
            "range": "± 3055.975984751392"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369120195,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: ACL)",
            "value": 42702.50808308919,
            "unit": "ns",
            "range": "± 336.3472880356935"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: ACL)",
            "value": 53346.23139735631,
            "unit": "ns",
            "range": "± 469.8872914774142"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: ACL)",
            "value": 86050.0162789481,
            "unit": "ns",
            "range": "± 298.5865718385841"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: ACL)",
            "value": 71066.12227376302,
            "unit": "ns",
            "range": "± 606.7184439100561"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: ACL)",
            "value": 32047.818580040566,
            "unit": "ns",
            "range": "± 168.57387034392414"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: ACL)",
            "value": 29699.765255737304,
            "unit": "ns",
            "range": "± 167.27647146879602"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: ACL)",
            "value": 178550.00662667412,
            "unit": "ns",
            "range": "± 1238.293459513557"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: ACL)",
            "value": 336018.74290364585,
            "unit": "ns",
            "range": "± 3914.0592497689154"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: AOF)",
            "value": 41499.010913085935,
            "unit": "ns",
            "range": "± 347.6140296595402"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: AOF)",
            "value": 57275.108713003305,
            "unit": "ns",
            "range": "± 405.3302634505241"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: AOF)",
            "value": 99547.4751586914,
            "unit": "ns",
            "range": "± 259.608269773366"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: AOF)",
            "value": 64759.146580287386,
            "unit": "ns",
            "range": "± 341.48245552886317"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: AOF)",
            "value": 32315.301587785994,
            "unit": "ns",
            "range": "± 95.60916445379223"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: AOF)",
            "value": 37391.816577148435,
            "unit": "ns",
            "range": "± 147.52136081407684"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: AOF)",
            "value": 179898.82298060827,
            "unit": "ns",
            "range": "± 820.5389225546469"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: AOF)",
            "value": 342258.61202298675,
            "unit": "ns",
            "range": "± 2289.3557044912077"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: None)",
            "value": 41888.00909423828,
            "unit": "ns",
            "range": "± 291.3874863228767"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: None)",
            "value": 47933.98198154994,
            "unit": "ns",
            "range": "± 76.30585363501731"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: None)",
            "value": 85434.82152448382,
            "unit": "ns",
            "range": "± 486.4066115521138"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: None)",
            "value": 67378.39780970982,
            "unit": "ns",
            "range": "± 671.0412548497192"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: None)",
            "value": 32066.265214029947,
            "unit": "ns",
            "range": "± 309.09846161869007"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: None)",
            "value": 31168.160409109933,
            "unit": "ns",
            "range": "± 181.07608397525613"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: None)",
            "value": 178341.06224772136,
            "unit": "ns",
            "range": "± 1031.2178751655251"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: None)",
            "value": 351965.2130408654,
            "unit": "ns",
            "range": "± 1835.2190645609476"
          }
        ]
      }
    ],
    "Lua.LuaRunnerOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254364027,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,Limit)",
            "value": 5256.122448979592,
            "unit": "ns",
            "range": "± 1741.8479537921853"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,Limit)",
            "value": 5178.4946236559135,
            "unit": "ns",
            "range": "± 1023.7239631307709"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,Limit)",
            "value": 268540.9090909091,
            "unit": "ns",
            "range": "± 45082.36926507829"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,Limit)",
            "value": 269717,
            "unit": "ns",
            "range": "± 50654.145292893205"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,Limit)",
            "value": 35253.125,
            "unit": "ns",
            "range": "± 8918.472292176266"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,Limit)",
            "value": 141893.29896907217,
            "unit": "ns",
            "range": "± 23986.28908362935"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,None)",
            "value": 6176.8421052631575,
            "unit": "ns",
            "range": "± 1592.4992155099405"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,None)",
            "value": 6559.574468085107,
            "unit": "ns",
            "range": "± 1479.2521467788085"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,None)",
            "value": 263812.1212121212,
            "unit": "ns",
            "range": "± 40340.99113634553"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,None)",
            "value": 270763.1313131313,
            "unit": "ns",
            "range": "± 45680.04442272548"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,None)",
            "value": 36180.85106382979,
            "unit": "ns",
            "range": "± 8682.639663487515"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,None)",
            "value": 142474.74747474748,
            "unit": "ns",
            "range": "± 24217.58655729489"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Native,None)",
            "value": 5469.072164948454,
            "unit": "ns",
            "range": "± 2159.9749624678457"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Native,None)",
            "value": 5684.693877551021,
            "unit": "ns",
            "range": "± 1824.763904559932"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Native,None)",
            "value": 262360.6382978723,
            "unit": "ns",
            "range": "± 40781.12365911493"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Native,None)",
            "value": 254501.21951219512,
            "unit": "ns",
            "range": "± 26842.87727168652"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Native,None)",
            "value": 24946.236559139787,
            "unit": "ns",
            "range": "± 6756.7125904827435"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Native,None)",
            "value": 133723.71134020618,
            "unit": "ns",
            "range": "± 25895.74359006658"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,Limit)",
            "value": 3689.4736842105262,
            "unit": "ns",
            "range": "± 1293.8046881614796"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,Limit)",
            "value": 4139.1752577319585,
            "unit": "ns",
            "range": "± 1618.934622742616"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,Limit)",
            "value": 330755,
            "unit": "ns",
            "range": "± 67353.5528822243"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,Limit)",
            "value": 324477.2727272727,
            "unit": "ns",
            "range": "± 63261.0913372506"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,Limit)",
            "value": 42539.56043956044,
            "unit": "ns",
            "range": "± 8022.896112181813"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,Limit)",
            "value": 146204.0404040404,
            "unit": "ns",
            "range": "± 34552.97299353889"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,None)",
            "value": 4233.333333333333,
            "unit": "ns",
            "range": "± 1601.6877063809698"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,None)",
            "value": 4701.041666666667,
            "unit": "ns",
            "range": "± 1543.0656288984344"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,None)",
            "value": 284746.4705882353,
            "unit": "ns",
            "range": "± 40709.35439200682"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,None)",
            "value": 309014,
            "unit": "ns",
            "range": "± 62096.477591671246"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,None)",
            "value": 32792.55319148936,
            "unit": "ns",
            "range": "± 7630.305161130776"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,None)",
            "value": 140097.8947368421,
            "unit": "ns",
            "range": "± 26499.31744985049"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369495570,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,Limit)",
            "value": 8446.315789473685,
            "unit": "ns",
            "range": "± 869.19019860085"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,Limit)",
            "value": 6839.7959183673465,
            "unit": "ns",
            "range": "± 1473.038783226832"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,Limit)",
            "value": 256564.94845360826,
            "unit": "ns",
            "range": "± 42345.51836095211"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,Limit)",
            "value": 271181,
            "unit": "ns",
            "range": "± 48800.59962994742"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,Limit)",
            "value": 35529.8969072165,
            "unit": "ns",
            "range": "± 7866.240696647574"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,Limit)",
            "value": 135504.0404040404,
            "unit": "ns",
            "range": "± 22831.038304009897"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Managed,None)",
            "value": 6382.828282828283,
            "unit": "ns",
            "range": "± 2017.324981865149"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Managed,None)",
            "value": 6292,
            "unit": "ns",
            "range": "± 1774.948000376463"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Managed,None)",
            "value": 281828.28282828286,
            "unit": "ns",
            "range": "± 63837.76158484952"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Managed,None)",
            "value": 293414,
            "unit": "ns",
            "range": "± 65353.24529590762"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Managed,None)",
            "value": 33673.71134020619,
            "unit": "ns",
            "range": "± 8867.38844018581"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Managed,None)",
            "value": 147554,
            "unit": "ns",
            "range": "± 30096.887050009176"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Native,None)",
            "value": 6441.666666666667,
            "unit": "ns",
            "range": "± 1625.3042899985596"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Native,None)",
            "value": 6461.224489795918,
            "unit": "ns",
            "range": "± 1442.1942512585254"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Native,None)",
            "value": 307353,
            "unit": "ns",
            "range": "± 58471.99183620248"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Native,None)",
            "value": 298660.6060606061,
            "unit": "ns",
            "range": "± 50122.28682296565"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Native,None)",
            "value": 39523.15789473684,
            "unit": "ns",
            "range": "± 6944.927011726493"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Native,None)",
            "value": 148713.1313131313,
            "unit": "ns",
            "range": "± 26335.12687347006"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,Limit)",
            "value": 5661.25,
            "unit": "ns",
            "range": "± 955.7942882853963"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,Limit)",
            "value": 6936.734693877551,
            "unit": "ns",
            "range": "± 1572.5996439740222"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,Limit)",
            "value": 337379.38144329895,
            "unit": "ns",
            "range": "± 61786.1279909447"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,Limit)",
            "value": 359244,
            "unit": "ns",
            "range": "± 73268.20843774446"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,Limit)",
            "value": 44153.1914893617,
            "unit": "ns",
            "range": "± 8029.578412956639"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,Limit)",
            "value": 155033.67346938775,
            "unit": "ns",
            "range": "± 28323.117015973472"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersSmall(Params: Tracked,None)",
            "value": 7303,
            "unit": "ns",
            "range": "± 1651.962713889393"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ResetParametersLarge(Params: Tracked,None)",
            "value": 7076.530612244898,
            "unit": "ns",
            "range": "± 1677.4920541799102"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructSmall(Params: Tracked,None)",
            "value": 302701.76470588235,
            "unit": "ns",
            "range": "± 24314.57828313777"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.ConstructLarge(Params: Tracked,None)",
            "value": 354540,
            "unit": "ns",
            "range": "± 67320.37979210705"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionSmall(Params: Tracked,None)",
            "value": 44347.36842105263,
            "unit": "ns",
            "range": "± 6563.079228423701"
          },
          {
            "name": "BDN.benchmark.Lua.LuaRunnerOperations.CompileForSessionLarge(Params: Tracked,None)",
            "value": 164933.33333333334,
            "unit": "ns",
            "range": "± 32384.349961809927"
          }
        ]
      }
    ],
    "Lua.LuaScriptCacheOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254410470,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,Limit)",
            "value": 2636.4583333333335,
            "unit": "ns",
            "range": "± 2347.1424862749996"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,Limit)",
            "value": 2184.020618556701,
            "unit": "ns",
            "range": "± 2248.5475218246515"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,Limit)",
            "value": 1448.3870967741937,
            "unit": "ns",
            "range": "± 1268.1390767942476"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,Limit)",
            "value": 190121.5909090909,
            "unit": "ns",
            "range": "± 24023.367210958582"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,Limit)",
            "value": 2507.070707070707,
            "unit": "ns",
            "range": "± 2134.5674190285176"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,Limit)",
            "value": 5972.631578947368,
            "unit": "ns",
            "range": "± 1450.7109119517888"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,None)",
            "value": 783.3333333333334,
            "unit": "ns",
            "range": "± 777.0948490978321"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,None)",
            "value": 729.4736842105264,
            "unit": "ns",
            "range": "± 658.1524243378684"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,None)",
            "value": 1650,
            "unit": "ns",
            "range": "± 1097.3652656776546"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,None)",
            "value": 209415.7894736842,
            "unit": "ns",
            "range": "± 33646.821214307114"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,None)",
            "value": 3705.2631578947367,
            "unit": "ns",
            "range": "± 3262.0111412026713"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,None)",
            "value": 7456.565656565656,
            "unit": "ns",
            "range": "± 3333.8756516164703"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Native,None)",
            "value": 932.258064516129,
            "unit": "ns",
            "range": "± 806.5171081398707"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Native,None)",
            "value": 365.9340659340659,
            "unit": "ns",
            "range": "± 451.2254376743358"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Native,None)",
            "value": 1434.375,
            "unit": "ns",
            "range": "± 1114.1981421632331"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Native,None)",
            "value": 231536,
            "unit": "ns",
            "range": "± 45260.15376898226"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Native,None)",
            "value": 1858.3333333333333,
            "unit": "ns",
            "range": "± 1247.1159711967591"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Native,None)",
            "value": 6164.583333333333,
            "unit": "ns",
            "range": "± 1622.9913361423044"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,Limit)",
            "value": 780.8510638297872,
            "unit": "ns",
            "range": "± 690.803894452148"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,Limit)",
            "value": 584.9462365591398,
            "unit": "ns",
            "range": "± 492.76201076380363"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,Limit)",
            "value": 1354.1666666666667,
            "unit": "ns",
            "range": "± 912.3615011452039"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,Limit)",
            "value": 270469.3181818182,
            "unit": "ns",
            "range": "± 24271.256156034644"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,Limit)",
            "value": 3558.9473684210525,
            "unit": "ns",
            "range": "± 2966.210231170124"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,Limit)",
            "value": 7443.548387096775,
            "unit": "ns",
            "range": "± 3136.1429665868823"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,None)",
            "value": 874.7368421052631,
            "unit": "ns",
            "range": "± 735.2765322974541"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,None)",
            "value": 708.3333333333334,
            "unit": "ns",
            "range": "± 591.8155236516589"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,None)",
            "value": 1582.1052631578948,
            "unit": "ns",
            "range": "± 1075.6471527933454"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,None)",
            "value": 249384.52380952382,
            "unit": "ns",
            "range": "± 22396.36639013914"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,None)",
            "value": 2239.5604395604396,
            "unit": "ns",
            "range": "± 1944.5581686610653"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,None)",
            "value": 9335.567010309278,
            "unit": "ns",
            "range": "± 2625.2376753798267"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737789032123,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,Limit)",
            "value": 1448.8636363636363,
            "unit": "ns",
            "range": "± 363.5692532116513"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,Limit)",
            "value": 705.2083333333334,
            "unit": "ns",
            "range": "± 479.5545722014317"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,Limit)",
            "value": 1743.6842105263158,
            "unit": "ns",
            "range": "± 1095.0381831791897"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,Limit)",
            "value": 224533.33333333334,
            "unit": "ns",
            "range": "± 48983.97072262622"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,Limit)",
            "value": 2459.7938144329896,
            "unit": "ns",
            "range": "± 2171.436726465837"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,Limit)",
            "value": 6116.666666666667,
            "unit": "ns",
            "range": "± 1790.3930424286202"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,None)",
            "value": 1198.9130434782608,
            "unit": "ns",
            "range": "± 1094.9930568516281"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,None)",
            "value": 1708.1632653061224,
            "unit": "ns",
            "range": "± 1886.7237446254712"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,None)",
            "value": 2105.1020408163267,
            "unit": "ns",
            "range": "± 1460.9961612867992"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,None)",
            "value": 227356.1224489796,
            "unit": "ns",
            "range": "± 40883.217680392736"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,None)",
            "value": 2653.6082474226805,
            "unit": "ns",
            "range": "± 2425.0456119280047"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,None)",
            "value": 6168.9473684210525,
            "unit": "ns",
            "range": "± 2073.0435399376065"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Native,None)",
            "value": 909.2783505154639,
            "unit": "ns",
            "range": "± 1066.1537641434525"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Native,None)",
            "value": 780.6122448979592,
            "unit": "ns",
            "range": "± 789.5787945722753"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Native,None)",
            "value": 1336.842105263158,
            "unit": "ns",
            "range": "± 1069.0075564069205"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Native,None)",
            "value": 221778.16091954024,
            "unit": "ns",
            "range": "± 21311.828931192376"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Native,None)",
            "value": 1808.3333333333333,
            "unit": "ns",
            "range": "± 1429.218900891906"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Native,None)",
            "value": 6098.9795918367345,
            "unit": "ns",
            "range": "± 2018.1902119319614"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,Limit)",
            "value": 1014.9484536082474,
            "unit": "ns",
            "range": "± 901.3636933735239"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,Limit)",
            "value": 933.695652173913,
            "unit": "ns",
            "range": "± 661.8783085775694"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,Limit)",
            "value": 1874.2105263157894,
            "unit": "ns",
            "range": "± 1511.4256894672772"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,Limit)",
            "value": 267241.4893617021,
            "unit": "ns",
            "range": "± 47081.66186297438"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,Limit)",
            "value": 2836.559139784946,
            "unit": "ns",
            "range": "± 1839.3515484395796"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,Limit)",
            "value": 13190.816326530612,
            "unit": "ns",
            "range": "± 2973.286103720268"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,None)",
            "value": 2089.1304347826085,
            "unit": "ns",
            "range": "± 2043.722982977746"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,None)",
            "value": 1584.6938775510205,
            "unit": "ns",
            "range": "± 1498.9585416036905"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,None)",
            "value": 2528.2608695652175,
            "unit": "ns",
            "range": "± 2053.050589344555"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,None)",
            "value": 281782.5,
            "unit": "ns",
            "range": "± 20236.680413971437"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,None)",
            "value": 3146.938775510204,
            "unit": "ns",
            "range": "± 2487.2957236387224"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,None)",
            "value": 8830.612244897959,
            "unit": "ns",
            "range": "± 3965.8700677767665"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369322694,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,Limit)",
            "value": 1145.9183673469388,
            "unit": "ns",
            "range": "± 916.618434296492"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,Limit)",
            "value": 728.125,
            "unit": "ns",
            "range": "± 719.4593181871479"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,Limit)",
            "value": 1675.5102040816328,
            "unit": "ns",
            "range": "± 1131.6497604414428"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,Limit)",
            "value": 226085.85858585857,
            "unit": "ns",
            "range": "± 50842.98159600432"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,Limit)",
            "value": 1519.3877551020407,
            "unit": "ns",
            "range": "± 1294.2105951470128"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,Limit)",
            "value": 6013.40206185567,
            "unit": "ns",
            "range": "± 1754.4365706437975"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Managed,None)",
            "value": 1025.5102040816328,
            "unit": "ns",
            "range": "± 907.3935965555747"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Managed,None)",
            "value": 730.9278350515464,
            "unit": "ns",
            "range": "± 705.9805274613731"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Managed,None)",
            "value": 2603.061224489796,
            "unit": "ns",
            "range": "± 1511.5673630771914"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Managed,None)",
            "value": 233749.48453608248,
            "unit": "ns",
            "range": "± 41652.526243192784"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Managed,None)",
            "value": 4289.7959183673465,
            "unit": "ns",
            "range": "± 2896.976375959902"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Managed,None)",
            "value": 8713.131313131313,
            "unit": "ns",
            "range": "± 2887.9993238963557"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Native,None)",
            "value": 924.7422680412371,
            "unit": "ns",
            "range": "± 881.054165927935"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Native,None)",
            "value": 791.8367346938776,
            "unit": "ns",
            "range": "± 783.9463306619273"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Native,None)",
            "value": 1493.8144329896907,
            "unit": "ns",
            "range": "± 1042.9140297932133"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Native,None)",
            "value": 216735.29411764705,
            "unit": "ns",
            "range": "± 20079.613600688164"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Native,None)",
            "value": 1856.1224489795918,
            "unit": "ns",
            "range": "± 1370.007624821178"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Native,None)",
            "value": 5879.79797979798,
            "unit": "ns",
            "range": "± 1677.946984031488"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,Limit)",
            "value": 990.5263157894736,
            "unit": "ns",
            "range": "± 974.3872798372437"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,Limit)",
            "value": 846.3917525773196,
            "unit": "ns",
            "range": "± 768.5296914224841"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,Limit)",
            "value": 1482.1052631578948,
            "unit": "ns",
            "range": "± 1236.8438683840573"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,Limit)",
            "value": 244133.70786516854,
            "unit": "ns",
            "range": "± 28476.477309511833"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,Limit)",
            "value": 1943.75,
            "unit": "ns",
            "range": "± 1387.2208111715195"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,Limit)",
            "value": 5772.826086956522,
            "unit": "ns",
            "range": "± 1709.9002773357495"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupHit(Params: Tracked,None)",
            "value": 863.9175257731958,
            "unit": "ns",
            "range": "± 978.3261179827234"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LookupMiss(Params: Tracked,None)",
            "value": 727.3684210526316,
            "unit": "ns",
            "range": "± 775.618093298329"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadOuterHit(Params: Tracked,None)",
            "value": 1765.5913978494623,
            "unit": "ns",
            "range": "± 1401.5902942617286"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadInnerHit(Params: Tracked,None)",
            "value": 242603.5294117647,
            "unit": "ns",
            "range": "± 19767.249532032136"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.LoadMiss(Params: Tracked,None)",
            "value": 1879.79797979798,
            "unit": "ns",
            "range": "± 1464.754614677956"
          },
          {
            "name": "BDN.benchmark.Lua.LuaScriptCacheOperations.Digest(Params: Tracked,None)",
            "value": 6214.432989690722,
            "unit": "ns",
            "range": "± 1642.9134240428937"
          }
        ]
      }
    ],
    "Operations.ModuleOperations (windows-latest  net8.0 Release)": [
      {
        "commit": {
          "author": {
            "email": "96085550+vazois@users.noreply.github.com",
            "name": "Vasileios Zois",
            "username": "vazois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9f6b5094a88b5285280e0ef2736d635304cbbd6",
          "message": "fix bug with getting long value (#922)",
          "timestamp": "2025-01-17T18:04:11-07:00",
          "tree_id": "38828cbecbb22af2242609dfb567672c8c565ce2",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e9f6b5094a88b5285280e0ef2736d635304cbbd6"
        },
        "date": 1737254533470,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: ACL)",
            "value": 60707.47811453683,
            "unit": "ns",
            "range": "± 116.80384272826255"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: ACL)",
            "value": 83132.46419270833,
            "unit": "ns",
            "range": "± 191.00049576989824"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: ACL)",
            "value": 115702.03531901042,
            "unit": "ns",
            "range": "± 111.47415225647774"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: ACL)",
            "value": 92723.04949079241,
            "unit": "ns",
            "range": "± 141.63171303948107"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: ACL)",
            "value": 52777.48064313616,
            "unit": "ns",
            "range": "± 124.09543512239027"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: ACL)",
            "value": 50922.738444010414,
            "unit": "ns",
            "range": "± 69.04996923430302"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: ACL)",
            "value": 185344.62076822916,
            "unit": "ns",
            "range": "± 1139.7863332576135"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: ACL)",
            "value": 318171.76231971156,
            "unit": "ns",
            "range": "± 781.4546168060938"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: AOF)",
            "value": 60072.60524204799,
            "unit": "ns",
            "range": "± 66.78185836233084"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: AOF)",
            "value": 82625.20892803486,
            "unit": "ns",
            "range": "± 156.64223438955554"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: AOF)",
            "value": 122998.15767728366,
            "unit": "ns",
            "range": "± 471.17340123226444"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: AOF)",
            "value": 92385.40852864583,
            "unit": "ns",
            "range": "± 463.45644196754984"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: AOF)",
            "value": 53090.325927734375,
            "unit": "ns",
            "range": "± 73.64135055216938"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: AOF)",
            "value": 56534.7304280599,
            "unit": "ns",
            "range": "± 136.9951020860921"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: AOF)",
            "value": 183094.39871651787,
            "unit": "ns",
            "range": "± 296.7679615284789"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: AOF)",
            "value": 349858.1722005208,
            "unit": "ns",
            "range": "± 1963.7256492445579"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: None)",
            "value": 60762.49084472656,
            "unit": "ns",
            "range": "± 138.30189250336198"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: None)",
            "value": 77902.75530133929,
            "unit": "ns",
            "range": "± 142.69337273695862"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: None)",
            "value": 115221.80257161458,
            "unit": "ns",
            "range": "± 311.7259427816109"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: None)",
            "value": 91562.4589029948,
            "unit": "ns",
            "range": "± 130.4243791302119"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: None)",
            "value": 51771.71813964844,
            "unit": "ns",
            "range": "± 89.65880755781787"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: None)",
            "value": 48937.65376164363,
            "unit": "ns",
            "range": "± 104.20533571294375"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: None)",
            "value": 180170.8749624399,
            "unit": "ns",
            "range": "± 261.10493635351105"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: None)",
            "value": 333729.87234933034,
            "unit": "ns",
            "range": "± 1937.5722206398457"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "42720645+hamdaankhalid@users.noreply.github.com",
            "name": "Hamdaan Khalid",
            "username": "hamdaankhalid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cd87b005d10f1b759862c6ff934fc1d57cd66bb",
          "message": "BUGFIX: Fix setting srcRecordInfo during interleaving of checkpointing and RMW (#956)\n\n* Fix setting srcRecordInfo during checkpointing\r\n\r\n* Also for internal upsert\r\n\r\n---------\r\n\r\nCo-authored-by: Hamdaan Khalid <hkhalid@microsoft.com>",
          "timestamp": "2025-01-24T21:45:27-07:00",
          "tree_id": "d5780a7190b433e02e9bda12e8df80f69569c0bd",
          "url": "https://github.com/hamdaankhalid/garnet/commit/0cd87b005d10f1b759862c6ff934fc1d57cd66bb"
        },
        "date": 1737789119558,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: ACL)",
            "value": 63889.51838566707,
            "unit": "ns",
            "range": "± 129.8455518893358"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: ACL)",
            "value": 80685.1534016927,
            "unit": "ns",
            "range": "± 106.12371080512965"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: ACL)",
            "value": 110171.84448242188,
            "unit": "ns",
            "range": "± 82.06023956110023"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: ACL)",
            "value": 88500.76802571614,
            "unit": "ns",
            "range": "± 90.74446649336501"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: ACL)",
            "value": 54505.0742594401,
            "unit": "ns",
            "range": "± 39.513450232449976"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: ACL)",
            "value": 50772.827584402905,
            "unit": "ns",
            "range": "± 90.44678181432995"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: ACL)",
            "value": 193585.96017020088,
            "unit": "ns",
            "range": "± 267.9706001883937"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: ACL)",
            "value": 323213.76604352676,
            "unit": "ns",
            "range": "± 1100.3708268485948"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: AOF)",
            "value": 64984.82712965745,
            "unit": "ns",
            "range": "± 50.33521479454958"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: AOF)",
            "value": 85668.32926432292,
            "unit": "ns",
            "range": "± 214.89070695585855"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: AOF)",
            "value": 111374.93198939732,
            "unit": "ns",
            "range": "± 315.4885490449183"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: AOF)",
            "value": 86660.1338704427,
            "unit": "ns",
            "range": "± 80.21288050635792"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: AOF)",
            "value": 54996.807861328125,
            "unit": "ns",
            "range": "± 26.335189382843144"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: AOF)",
            "value": 59244.54563685826,
            "unit": "ns",
            "range": "± 98.3604226580443"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: AOF)",
            "value": 191400.52571614584,
            "unit": "ns",
            "range": "± 481.9346514500809"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: AOF)",
            "value": 334907.7799479167,
            "unit": "ns",
            "range": "± 1741.5045723522658"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: None)",
            "value": 63196.39369419643,
            "unit": "ns",
            "range": "± 38.42059893909158"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: None)",
            "value": 80762.65211838942,
            "unit": "ns",
            "range": "± 97.70448086414928"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: None)",
            "value": 102530.40466308594,
            "unit": "ns",
            "range": "± 103.26914632361272"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: None)",
            "value": 86185.43701171875,
            "unit": "ns",
            "range": "± 135.23048390873493"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: None)",
            "value": 57008.631896972656,
            "unit": "ns",
            "range": "± 28.590212398580597"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: None)",
            "value": 51460.17812093099,
            "unit": "ns",
            "range": "± 35.12728542719891"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: None)",
            "value": 185422.08439753606,
            "unit": "ns",
            "range": "± 221.66937121201596"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: None)",
            "value": 338380.84247295675,
            "unit": "ns",
            "range": "± 574.6288241278438"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pon.vijaynirmal@outlook.com",
            "name": "Vijay Nirmal",
            "username": "Vijay-Nirmal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "762a9d78808ebceca86451d6e675d024b843c82b",
          "message": "[Compatibility] Added CLIENT UNBLOCK command (#886)\n\n* Added CLIENT UNBLOCK command\r\n\r\n* Fixed build issue\r\n\r\n* Fixed review commands\r\n\r\n* Format fix\r\n\r\n* Fix code format\r\n\r\n* Fixed build issue after merge\r\n\r\n* Fixed review comments\r\n\r\n* Removed addition catch clause\r\n\r\n---------\r\n\r\nCo-authored-by: Tal Zaccai <talzacc@microsoft.com>",
          "timestamp": "2025-01-27T18:32:01-07:00",
          "tree_id": "19a011f78a1ef079a455f686f5554f007ef0800f",
          "url": "https://github.com/hamdaankhalid/garnet/commit/762a9d78808ebceca86451d6e675d024b843c82b"
        },
        "date": 1738050916080,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: ACL)",
            "value": 57014.58260672433,
            "unit": "ns",
            "range": "± 43.21109422689562"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: ACL)",
            "value": 73421.6064453125,
            "unit": "ns",
            "range": "± 42.61443313662924"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: ACL)",
            "value": 97199.83990009014,
            "unit": "ns",
            "range": "± 236.91412112716517"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: ACL)",
            "value": 80312.34212239583,
            "unit": "ns",
            "range": "± 122.79454510002658"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: ACL)",
            "value": 49325.559779575895,
            "unit": "ns",
            "range": "± 133.29362050713442"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: ACL)",
            "value": 46953.84541829427,
            "unit": "ns",
            "range": "± 62.135776693190074"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: ACL)",
            "value": 180292.56766183037,
            "unit": "ns",
            "range": "± 355.62387217219776"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: ACL)",
            "value": 322921.3936941964,
            "unit": "ns",
            "range": "± 954.7712569265562"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: AOF)",
            "value": 57218.97935133714,
            "unit": "ns",
            "range": "± 103.9742454196139"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: AOF)",
            "value": 78477.88837139423,
            "unit": "ns",
            "range": "± 186.02726286571635"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: AOF)",
            "value": 102389.74696568081,
            "unit": "ns",
            "range": "± 248.84981935445552"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: AOF)",
            "value": 80686.89615885417,
            "unit": "ns",
            "range": "± 443.74228615327667"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: AOF)",
            "value": 48826.46484375,
            "unit": "ns",
            "range": "± 42.84811726001257"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: AOF)",
            "value": 52596.50104229267,
            "unit": "ns",
            "range": "± 135.90958850773896"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: AOF)",
            "value": 192355.28390066963,
            "unit": "ns",
            "range": "± 626.1086505800504"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: AOF)",
            "value": 342852.8466796875,
            "unit": "ns",
            "range": "± 957.9062745900243"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: None)",
            "value": 55902.05139160156,
            "unit": "ns",
            "range": "± 68.0779765592848"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: None)",
            "value": 73201.88947405134,
            "unit": "ns",
            "range": "± 92.58298854051134"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: None)",
            "value": 95055.38377028245,
            "unit": "ns",
            "range": "± 117.28450306098648"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: None)",
            "value": 79891.47667518028,
            "unit": "ns",
            "range": "± 213.20495190657448"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: None)",
            "value": 49345.40754045759,
            "unit": "ns",
            "range": "± 66.99932548488002"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: None)",
            "value": 46435.09969075521,
            "unit": "ns",
            "range": "± 31.520596370158092"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: None)",
            "value": 183865.31700721153,
            "unit": "ns",
            "range": "± 296.50986059541896"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: None)",
            "value": 312456.82842548075,
            "unit": "ns",
            "range": "± 1099.6033807542403"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "darrenge@microsoft.com",
            "name": "darrenge",
            "username": "darrenge"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3da613ef2df405ba3ac1a8d84d7c940007accc3",
          "message": "Updated Lua BDN expected Allocated bytes for a few settings. (#984)",
          "timestamp": "2025-01-30T17:56:16-08:00",
          "tree_id": "53b77e9e81e1123cf133f1170532cf7e7df268fe",
          "url": "https://github.com/hamdaankhalid/garnet/commit/e3da613ef2df405ba3ac1a8d84d7c940007accc3"
        },
        "date": 1738369337187,
        "tool": "benchmarkdotnet",
        "benches": [
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: ACL)",
            "value": 59230.80491286058,
            "unit": "ns",
            "range": "± 284.0530242183746"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: ACL)",
            "value": 74700.79392653245,
            "unit": "ns",
            "range": "± 184.3155749386272"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: ACL)",
            "value": 98873.92765925481,
            "unit": "ns",
            "range": "± 321.5178724787679"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: ACL)",
            "value": 82027.89306640625,
            "unit": "ns",
            "range": "± 179.31367294033822"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: ACL)",
            "value": 52231.368783804086,
            "unit": "ns",
            "range": "± 37.970267130732715"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: ACL)",
            "value": 68159.67692057292,
            "unit": "ns",
            "range": "± 125.89554340877788"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: ACL)",
            "value": 186990.0480143229,
            "unit": "ns",
            "range": "± 505.2111340736807"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: ACL)",
            "value": 319364.0625,
            "unit": "ns",
            "range": "± 1318.7608178637083"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: AOF)",
            "value": 58722.857666015625,
            "unit": "ns",
            "range": "± 46.85116699974066"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: AOF)",
            "value": 81509.80600210336,
            "unit": "ns",
            "range": "± 149.550714636398"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: AOF)",
            "value": 101818.00275530134,
            "unit": "ns",
            "range": "± 180.22927043886972"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: AOF)",
            "value": 82781.78851787861,
            "unit": "ns",
            "range": "± 84.89282567674957"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: AOF)",
            "value": 51892.22324916295,
            "unit": "ns",
            "range": "± 55.29098392215106"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: AOF)",
            "value": 53779.88140399639,
            "unit": "ns",
            "range": "± 73.78849311173771"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: AOF)",
            "value": 192762.80141977163,
            "unit": "ns",
            "range": "± 317.09293071381114"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: AOF)",
            "value": 336491.1307198661,
            "unit": "ns",
            "range": "± 1221.5213451988761"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringReadCommand(Params: None)",
            "value": 60636.69738769531,
            "unit": "ns",
            "range": "± 27.68223556011659"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpRawStringRmwCommand(Params: None)",
            "value": 74141.95992606027,
            "unit": "ns",
            "range": "± 63.27087916142222"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjRmwCommand(Params: None)",
            "value": 96666.47714468148,
            "unit": "ns",
            "range": "± 83.1748244736788"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpObjReadCommand(Params: None)",
            "value": 81064.43237304688,
            "unit": "ns",
            "range": "± 113.8776270280876"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpProc(Params: None)",
            "value": 51437.28820800781,
            "unit": "ns",
            "range": "± 60.363023324905875"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleNoOpTxn(Params: None)",
            "value": 49372.869873046875,
            "unit": "ns",
            "range": "± 57.68861950645553"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonGetCommand(Params: None)",
            "value": 183129.8103841146,
            "unit": "ns",
            "range": "± 417.754772695602"
          },
          {
            "name": "BDN.benchmark.Operations.ModuleOperations.ModuleJsonSetCommand(Params: None)",
            "value": 319012.31515066966,
            "unit": "ns",
            "range": "± 1350.7567604199699"
          }
        ]
      }
    ]
  }
}